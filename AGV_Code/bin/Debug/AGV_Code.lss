
bin\Debug\AGV_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000e3c  00000ef0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eae  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800108  00800108  00000f6a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000f6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000000c0  00000000  00000000  00000f6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001b7  00000000  00000000  0000102d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015f7  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b10  00000000  00000000  000027db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d44  00000000  00000000  000032eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00004030  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000348  00000000  00000000  00004170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d8  00000000  00000000  000044b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00004a35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a8 e0       	ldi	r26, 0x08	; 8
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:

  7e:	a4 31       	cpi	r26, 0x14	; 20

  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ec e3       	ldi	r30, 0x3C	; 60
  8c:	fe e0       	ldi	r31, 0x0E	; 14

  8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
  9a:	0e 94 3d 02 	call	0x47a	; 0x47a <main>
  9e:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <_exit>


000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>


000000a6 <MapRange>:
volatile uint16_t ADC_waarde_2;
volatile uint16_t verschil_0;
volatile uint16_t verschil_2;

double MapRange(double X, double A1, double A2, double B1, double B2)
{
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	df 93       	push	r29
 14c:	cf 93       	push	r28
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	64 97       	sbiw	r28, 0x14	; 20
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61
 15e:	6d 83       	std	Y+5, r22	; 0x05
 160:	7e 83       	std	Y+6, r23	; 0x06
 162:	8f 83       	std	Y+7, r24	; 0x07
 164:	98 87       	std	Y+8, r25	; 0x08
 166:	29 87       	std	Y+9, r18	; 0x09
 168:	3a 87       	std	Y+10, r19	; 0x0a
 16a:	4b 87       	std	Y+11, r20	; 0x0b
 16c:	5c 87       	std	Y+12, r21	; 0x0c
 16e:	ed 86       	std	Y+13, r14	; 0x0d
 170:	fe 86       	std	Y+14, r15	; 0x0e
 172:	0f 87       	std	Y+15, r16	; 0x0f
 174:	18 8b       	std	Y+16, r17	; 0x10
 176:	a9 8a       	std	Y+17, r10	; 0x11
 178:	ba 8a       	std	Y+18, r11	; 0x12
 17a:	cb 8a       	std	Y+19, r12	; 0x13
 17c:	dc 8a       	std	Y+20, r13	; 0x14
    double Y = B1 + (X-A1)*((B2-B1)/(A2-A1));

  ea:	6d 81       	ldd	r22, Y+5	; 0x05
  ec:	7e 81       	ldd	r23, Y+6	; 0x06
  ee:	8f 81       	ldd	r24, Y+7	; 0x07
  f0:	98 85       	ldd	r25, Y+8	; 0x08
  f2:	29 85       	ldd	r18, Y+9	; 0x09
  f4:	3a 85       	ldd	r19, Y+10	; 0x0a
  f6:	4b 85       	ldd	r20, Y+11	; 0x0b
  f8:	5c 85       	ldd	r21, Y+12	; 0x0c
  fa:	0e 94 cd 03 	call	0x79a	; 0x79a <__subsf3>
  fe:	dc 01       	movw	r26, r24
 100:	cb 01       	movw	r24, r22
 102:	5c 01       	movw	r10, r24
 104:	6d 01       	movw	r12, r26
 106:	69 a1       	ldd	r22, Y+33	; 0x21
 108:	7a a1       	ldd	r23, Y+34	; 0x22
 10a:	8b a1       	ldd	r24, Y+35	; 0x23
 10c:	9c a1       	ldd	r25, Y+36	; 0x24
 10e:	29 89       	ldd	r18, Y+17	; 0x11
 110:	3a 89       	ldd	r19, Y+18	; 0x12
 112:	4b 89       	ldd	r20, Y+19	; 0x13
 114:	5c 89       	ldd	r21, Y+20	; 0x14
 116:	0e 94 cd 03 	call	0x79a	; 0x79a <__subsf3>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	7c 01       	movw	r14, r24
 120:	8d 01       	movw	r16, r26
 122:	6d 85       	ldd	r22, Y+13	; 0x0d
 124:	7e 85       	ldd	r23, Y+14	; 0x0e
 126:	8f 85       	ldd	r24, Y+15	; 0x0f
 128:	98 89       	ldd	r25, Y+16	; 0x10
 12a:	29 85       	ldd	r18, Y+9	; 0x09
 12c:	3a 85       	ldd	r19, Y+10	; 0x0a
 12e:	4b 85       	ldd	r20, Y+11	; 0x0b
 130:	5c 85       	ldd	r21, Y+12	; 0x0c
 132:	0e 94 cd 03 	call	0x79a	; 0x79a <__subsf3>
 136:	dc 01       	movw	r26, r24
 138:	cb 01       	movw	r24, r22
 13a:	9c 01       	movw	r18, r24
 13c:	ad 01       	movw	r20, r26
 13e:	c8 01       	movw	r24, r16
 140:	b7 01       	movw	r22, r14
 142:	0e 94 25 05 	call	0xa4a	; 0xa4a <__divsf3>
 146:	dc 01       	movw	r26, r24
 148:	cb 01       	movw	r24, r22
 14a:	9c 01       	movw	r18, r24
 14c:	ad 01       	movw	r20, r26
 14e:	c6 01       	movw	r24, r12
 150:	b5 01       	movw	r22, r10
 152:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 156:	dc 01       	movw	r26, r24
 158:	cb 01       	movw	r24, r22
 15a:	bc 01       	movw	r22, r24
 15c:	cd 01       	movw	r24, r26
 15e:	29 89       	ldd	r18, Y+17	; 0x11
 160:	3a 89       	ldd	r19, Y+18	; 0x12
 162:	4b 89       	ldd	r20, Y+19	; 0x13
 164:	5c 89       	ldd	r21, Y+20	; 0x14
 166:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__addsf3>
 16a:	dc 01       	movw	r26, r24
 16c:	cb 01       	movw	r24, r22
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	9a 83       	std	Y+2, r25	; 0x02
 172:	ab 83       	std	Y+3, r26	; 0x03
 174:	bc 83       	std	Y+4, r27	; 0x04

    return Y;
 20a:	89 81       	ldd	r24, Y+1	; 0x01
 20c:	9a 81       	ldd	r25, Y+2	; 0x02
 20e:	ab 81       	ldd	r26, Y+3	; 0x03
 210:	bc 81       	ldd	r27, Y+4	; 0x04
}
 212:	bc 01       	movw	r22, r24
 214:	cd 01       	movw	r24, r26
 216:	64 96       	adiw	r28, 0x14	; 20
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
 222:	cf 91       	pop	r28
 224:	df 91       	pop	r29
 226:	1f 91       	pop	r17
 228:	0f 91       	pop	r16
 22a:	ff 90       	pop	r15
 22c:	ef 90       	pop	r14
 22e:	df 90       	pop	r13
 230:	cf 90       	pop	r12
 232:	bf 90       	pop	r11
 234:	af 90       	pop	r10
 236:	08 95       	ret

00000238 <init_timer>:

void init_timer(void)
{
 238:	df 93       	push	r29
 23a:	cf 93       	push	r28
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
    ///timmer settup voor stepper motor1
    ///gebruikt timer0 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR0A  = BV(COM0A0) | BV(WGM01);
 240:	e4 e4       	ldi	r30, 0x44	; 68
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	82 e4       	ldi	r24, 0x42	; 66
 246:	80 83       	st	Z, r24
    TCCR0B  = BV(CS02);             // clk/256

 1b4:	e5 e4       	ldi	r30, 0x45	; 69
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	80 83       	st	Z, r24
    OCR0A   = 95;                   //start snelheid
 1bc:	e7 e4       	ldi	r30, 0x47	; 71
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	8f e5       	ldi	r24, 0x5F	; 95
 1c2:	80 83       	st	Z, r24

    SetBit(DDRD, PD6);              //enable output timer D6
 258:	aa e2       	ldi	r26, 0x2A	; 42
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	ea e2       	ldi	r30, 0x2A	; 42
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 64       	ori	r24, 0x40	; 64
 264:	8c 93       	st	X, r24

    ///timmer settup voor stepper motor2
    ///gebruikt timer2 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR2A  = BV(COM2A0) | BV(WGM21);
 266:	e0 eb       	ldi	r30, 0xB0	; 176
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	82 e4       	ldi	r24, 0x42	; 66
 26c:	80 83       	st	Z, r24
    ClearBit(ASSR, AS2);             // interne io klok geselecteerd
 26e:	a6 eb       	ldi	r26, 0xB6	; 182
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	e6 eb       	ldi	r30, 0xB6	; 182
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	8f 7d       	andi	r24, 0xDF	; 223
 27a:	8c 93       	st	X, r24
    TCCR2B  = BV(CS22) | BV(CS21);   // clk/256

 1e8:	e1 eb       	ldi	r30, 0xB1	; 177
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	86 e0       	ldi	r24, 0x06	; 6
 1ee:	80 83       	st	Z, r24
    OCR2A   = 95;                    // start snelheid
 1f0:	e3 eb       	ldi	r30, 0xB3	; 179
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	8f e5       	ldi	r24, 0x5F	; 95
 1f6:	80 83       	st	Z, r24

    SetBit(DDRB, PB3);               // enable output timer D11
 28c:	a4 e2       	ldi	r26, 0x24	; 36
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	e4 e2       	ldi	r30, 0x24	; 36
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	88 60       	ori	r24, 0x08	; 8
 298:	8c 93       	st	X, r24
}
 29a:	cf 91       	pop	r28
 29c:	df 91       	pop	r29
 29e:	08 95       	ret

000002a0 <init_adc>:

void init_adc(void)
{
 2a0:	df 93       	push	r29
 2a2:	cf 93       	push	r28
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
    ADMUX |= (1 << REFS0);                                  // AVCC als referentiespanning

 214:	ac e7       	ldi	r26, 0x7C	; 124
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	ec e7       	ldi	r30, 0x7C	; 124
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	80 64       	ori	r24, 0x40	; 64
 220:	8c 93       	st	X, r24
    ADCSRA = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);    // Prescaler 128 125kHZ
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	80 83       	st	Z, r24
    ADCSRA |= (1 << ADEN);                                  // Aanzetten ADC
 22a:	aa e7       	ldi	r26, 0x7A	; 122
 22c:	b0 e0       	ldi	r27, 0x00	; 0
 22e:	ea e7       	ldi	r30, 0x7A	; 122
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	80 68       	ori	r24, 0x80	; 128
 236:	8c 93       	st	X, r24


    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 238:	ac e7       	ldi	r26, 0x7C	; 124
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	ec e7       	ldi	r30, 0x7C	; 124
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	80 81       	ld	r24, Z
 242:	8e 7f       	andi	r24, 0xFE	; 254
 244:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 246:	aa e7       	ldi	r26, 0x7A	; 122
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	ea e7       	ldi	r30, 0x7A	; 122
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	80 64       	ori	r24, 0x40	; 64
 252:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 254:	ea e7       	ldi	r30, 0x7A	; 122
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	88 2f       	mov	r24, r24
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	80 74       	andi	r24, 0x40	; 64
 260:	90 70       	andi	r25, 0x00	; 0
 262:	00 97       	sbiw	r24, 0x00	; 0
 264:	b9 f7       	brne	.-18     	; 0x254 <init_adc+0x48>
    POT0_BEGIN = ADC;                               // Waarde meegeven aan variabele
 266:	e8 e7       	ldi	r30, 0x78	; 120
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	91 81       	ldd	r25, Z+1	; 0x01
 26e:	90 93 0b 01 	sts	0x010B, r25
 272:	80 93 0a 01 	sts	0x010A, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 276:	ac e7       	ldi	r26, 0x7C	; 124
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	ec e7       	ldi	r30, 0x7C	; 124
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	81 60       	ori	r24, 0x01	; 1
 282:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 284:	aa e7       	ldi	r26, 0x7A	; 122
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	ea e7       	ldi	r30, 0x7A	; 122
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 292:	ea e7       	ldi	r30, 0x7A	; 122
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	88 2f       	mov	r24, r24
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	80 74       	andi	r24, 0x40	; 64
 29e:	90 70       	andi	r25, 0x00	; 0
 2a0:	00 97       	sbiw	r24, 0x00	; 0
 2a2:	b9 f7       	brne	.-18     	; 0x292 <init_adc+0x86>
    POT2_BEGIN = ADC;                             // Waarde meegeven aan variabele
 2a4:	e8 e7       	ldi	r30, 0x78	; 120
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	91 81       	ldd	r25, Z+1	; 0x01
 2ac:	90 93 13 01 	sts	0x0113, r25
 2b0:	80 93 12 01 	sts	0x0112, r24



}
 2b4:	cf 91       	pop	r28
 2b6:	df 91       	pop	r29
 2b8:	08 95       	ret

000002ba <ADC_Check>:

void ADC_Check(void)
{
 2ba:	df 93       	push	r29
 2bc:	cf 93       	push	r28
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 2c2:	ac e7       	ldi	r26, 0x7C	; 124
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	ec e7       	ldi	r30, 0x7C	; 124
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	8e 7f       	andi	r24, 0xFE	; 254
 2ce:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 2d0:	aa e7       	ldi	r26, 0x7A	; 122
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	ea e7       	ldi	r30, 0x7A	; 122
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	80 64       	ori	r24, 0x40	; 64
 2dc:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 2de:	ea e7       	ldi	r30, 0x7A	; 122
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	88 2f       	mov	r24, r24
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	80 74       	andi	r24, 0x40	; 64
 2ea:	90 70       	andi	r25, 0x00	; 0
 2ec:	00 97       	sbiw	r24, 0x00	; 0
 2ee:	b9 f7       	brne	.-18     	; 0x2de <ADC_Check+0x24>
    ADC_waarde_0 = ADC;                               // Waarde meegeven aan variabele
 2f0:	e8 e7       	ldi	r30, 0x78	; 120
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	91 81       	ldd	r25, Z+1	; 0x01
 2f8:	90 93 0f 01 	sts	0x010F, r25
 2fc:	80 93 0e 01 	sts	0x010E, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 300:	ac e7       	ldi	r26, 0x7C	; 124
 302:	b0 e0       	ldi	r27, 0x00	; 0
 304:	ec e7       	ldi	r30, 0x7C	; 124
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	81 60       	ori	r24, 0x01	; 1
 30c:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 30e:	aa e7       	ldi	r26, 0x7A	; 122
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	ea e7       	ldi	r30, 0x7A	; 122
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	80 64       	ori	r24, 0x40	; 64
 31a:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 31c:	ea e7       	ldi	r30, 0x7A	; 122
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	88 2f       	mov	r24, r24
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	80 74       	andi	r24, 0x40	; 64
 328:	90 70       	andi	r25, 0x00	; 0
 32a:	00 97       	sbiw	r24, 0x00	; 0
 32c:	b9 f7       	brne	.-18     	; 0x31c <ADC_Check+0x62>
    ADC_waarde_2 = ADC;                             // Waarde meegeven aan variabele
 32e:	e8 e7       	ldi	r30, 0x78	; 120
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	91 81       	ldd	r25, Z+1	; 0x01
 336:	90 93 09 01 	sts	0x0109, r25
 33a:	80 93 08 01 	sts	0x0108, r24
}
 33e:	cf 91       	pop	r28
 340:	df 91       	pop	r29
 342:	08 95       	ret

00000344 <Navigeer>:



void Navigeer(void)
{
 344:	df 93       	push	r29
 346:	cf 93       	push	r28
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62

    ///links
    if((POT2_BEGIN > ADC_waarde_2) && (POT0_BEGIN < ADC_waarde_0))
 34c:	20 91 12 01 	lds	r18, 0x0112
 350:	30 91 13 01 	lds	r19, 0x0113
 354:	80 91 08 01 	lds	r24, 0x0108
 358:	90 91 09 01 	lds	r25, 0x0109
 35c:	82 17       	cp	r24, r18
 35e:	93 07       	cpc	r25, r19
 360:	08 f0       	brcs	.+2      	; 0x364 <Navigeer+0x20>
 362:	88 c0       	rjmp	.+272    	; 0x474 <Navigeer+0x130>
 364:	20 91 0a 01 	lds	r18, 0x010A
 368:	30 91 0b 01 	lds	r19, 0x010B
 36c:	80 91 0e 01 	lds	r24, 0x010E
 370:	90 91 0f 01 	lds	r25, 0x010F
 374:	28 17       	cp	r18, r24
 376:	39 07       	cpc	r19, r25
 378:	08 f0       	brcs	.+2      	; 0x37c <Navigeer+0x38>
 37a:	7c c0       	rjmp	.+248    	; 0x474 <Navigeer+0x130>
    {
        verschil_2 = POT2_BEGIN - ADC_waarde_2;
 37c:	20 91 12 01 	lds	r18, 0x0112
 380:	30 91 13 01 	lds	r19, 0x0113
 384:	80 91 08 01 	lds	r24, 0x0108
 388:	90 91 09 01 	lds	r25, 0x0109
 38c:	a9 01       	movw	r20, r18
 38e:	48 1b       	sub	r20, r24
 390:	59 0b       	sbc	r21, r25
 392:	ca 01       	movw	r24, r20
 394:	90 93 11 01 	sts	0x0111, r25
 398:	80 93 10 01 	sts	0x0110, r24
		verschil_0 = ADC_waarde_0 - POT0_BEGIN;
 39c:	20 91 0e 01 	lds	r18, 0x010E
 3a0:	30 91 0f 01 	lds	r19, 0x010F
 3a4:	80 91 0a 01 	lds	r24, 0x010A
 3a8:	90 91 0b 01 	lds	r25, 0x010B
 3ac:	a9 01       	movw	r20, r18
 3ae:	48 1b       	sub	r20, r24
 3b0:	59 0b       	sbc	r21, r25
 3b2:	ca 01       	movw	r24, r20
 3b4:	90 93 0d 01 	sts	0x010D, r25
 3b8:	80 93 0c 01 	sts	0x010C, r24

        if(verschil_0 > verschil_2)
 3bc:	20 91 0c 01 	lds	r18, 0x010C
 3c0:	30 91 0d 01 	lds	r19, 0x010D
 3c4:	80 91 10 01 	lds	r24, 0x0110
 3c8:	90 91 11 01 	lds	r25, 0x0111
 3cc:	82 17       	cp	r24, r18
 3ce:	93 07       	cpc	r25, r19
 3d0:	48 f5       	brcc	.+82     	; 0x424 <Navigeer+0xe0>
        {
            if((verschil_0 - verschil_2) >= 20)
 3d2:	80 91 0c 01 	lds	r24, 0x010C
 3d6:	90 91 0d 01 	lds	r25, 0x010D
 3da:	20 91 10 01 	lds	r18, 0x0110
 3de:	30 91 11 01 	lds	r19, 0x0111
 3e2:	82 1b       	sub	r24, r18
 3e4:	93 0b       	sbc	r25, r19
 3e6:	84 31       	cpi	r24, 0x14	; 20
 3e8:	91 05       	cpc	r25, r1
 3ea:	60 f0       	brcs	.+24     	; 0x404 <Navigeer+0xc0>
            {
                OCR0A = 95 ;
 3ec:	e7 e4       	ldi	r30, 0x47	; 71
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	8f e5       	ldi	r24, 0x5F	; 95
 3f2:	80 83       	st	Z, r24
                ClearBit(DDRB, PB3);               // disable output timer D11
 3f4:	a4 e2       	ldi	r26, 0x24	; 36
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e4 e2       	ldi	r30, 0x24	; 36
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	80 81       	ld	r24, Z
 3fe:	87 7f       	andi	r24, 0xF7	; 247
 400:	8c 93       	st	X, r24
 402:	38 c0       	rjmp	.+112    	; 0x474 <Navigeer+0x130>
            }
            else
            {
                SetBit(DDRB, PB3);               // enable output timer D11
 404:	a4 e2       	ldi	r26, 0x24	; 36
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e4 e2       	ldi	r30, 0x24	; 36
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	88 60       	ori	r24, 0x08	; 8
 410:	8c 93       	st	X, r24
                OCR0A = 95 ;
 412:	e7 e4       	ldi	r30, 0x47	; 71
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	8f e5       	ldi	r24, 0x5F	; 95
 418:	80 83       	st	Z, r24
                OCR2A = 95 ;
 41a:	e3 eb       	ldi	r30, 0xB3	; 179
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	8f e5       	ldi	r24, 0x5F	; 95
 420:	80 83       	st	Z, r24
 422:	28 c0       	rjmp	.+80     	; 0x474 <Navigeer+0x130>
            }

        }
        else
        {
            if((verschil_2 - verschil_0) >= 20)
 424:	80 91 10 01 	lds	r24, 0x0110
 428:	90 91 11 01 	lds	r25, 0x0111
 42c:	20 91 0c 01 	lds	r18, 0x010C
 430:	30 91 0d 01 	lds	r19, 0x010D
 434:	82 1b       	sub	r24, r18
 436:	93 0b       	sbc	r25, r19
 438:	84 31       	cpi	r24, 0x14	; 20
 43a:	91 05       	cpc	r25, r1
 43c:	60 f0       	brcs	.+24     	; 0x456 <Navigeer+0x112>
            {
                ClearBit(DDRD, PD6);              //disable output timer D6
 43e:	aa e2       	ldi	r26, 0x2A	; 42
 440:	b0 e0       	ldi	r27, 0x00	; 0
 442:	ea e2       	ldi	r30, 0x2A	; 42
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	8f 7b       	andi	r24, 0xBF	; 191
 44a:	8c 93       	st	X, r24
                OCR2A = 95 ;
 44c:	e3 eb       	ldi	r30, 0xB3	; 179
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	8f e5       	ldi	r24, 0x5F	; 95
 452:	80 83       	st	Z, r24
 454:	0f c0       	rjmp	.+30     	; 0x474 <Navigeer+0x130>
            }
            else
            {
                SetBit(DDRD, PD6);              //enable output timer D6
 456:	aa e2       	ldi	r26, 0x2A	; 42
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	ea e2       	ldi	r30, 0x2A	; 42
 45c:	f0 e0       	ldi	r31, 0x00	; 0
 45e:	80 81       	ld	r24, Z
 460:	80 64       	ori	r24, 0x40	; 64
 462:	8c 93       	st	X, r24

                OCR0A = 95 ;
 464:	e7 e4       	ldi	r30, 0x47	; 71
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	8f e5       	ldi	r24, 0x5F	; 95
 46a:	80 83       	st	Z, r24
                OCR2A = 95 ;
 46c:	e3 eb       	ldi	r30, 0xB3	; 179
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	8f e5       	ldi	r24, 0x5F	; 95
 472:	80 83       	st	Z, r24
            }

        }
    }
}
 474:	cf 91       	pop	r28
 476:	df 91       	pop	r29
 478:	08 95       	ret

0000047a <Bocht_Rechts>:

bool Bocht_Rechts(void)
{
 47a:	df 93       	push	r29
 47c:	cf 93       	push	r28
 47e:	00 d0       	rcall	.+0      	; 0x480 <Bocht_Rechts+0x6>
 480:	0f 92       	push	r0
 482:	cd b7       	in	r28, 0x3d	; 61
 484:	de b7       	in	r29, 0x3e	; 62
    ///maak een bocht met 90 graden naar rechts
    bool Toggle_check;
    int Step_Count;

    ClearBit(DDRB, PB3);               // disable output timer D11
 486:	a4 e2       	ldi	r26, 0x24	; 36
 488:	b0 e0       	ldi	r27, 0x00	; 0
 48a:	e4 e2       	ldi	r30, 0x24	; 36
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	87 7f       	andi	r24, 0xF7	; 247
 492:	8c 93       	st	X, r24
    do
    {
        if(bit_is_set(PINB, PB3) && !Toggle_check)
 494:	e3 e2       	ldi	r30, 0x23	; 35
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	88 2f       	mov	r24, r24
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	88 70       	andi	r24, 0x08	; 8
 4a0:	90 70       	andi	r25, 0x00	; 0
 4a2:	00 97       	sbiw	r24, 0x00	; 0
 4a4:	79 f0       	breq	.+30     	; 0x4c4 <Bocht_Rechts+0x4a>
 4a6:	9b 81       	ldd	r25, Y+3	; 0x03
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	98 27       	eor	r25, r24
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	89 27       	eor	r24, r25
 4b0:	88 23       	and	r24, r24
 4b2:	41 f4       	brne	.+16     	; 0x4c4 <Bocht_Rechts+0x4a>
        {
            Toggle_check = true;
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	8b 83       	std	Y+3, r24	; 0x03
            Step_Count++;
 4b8:	89 81       	ldd	r24, Y+1	; 0x01
 4ba:	9a 81       	ldd	r25, Y+2	; 0x02
 4bc:	01 96       	adiw	r24, 0x01	; 1
 4be:	9a 83       	std	Y+2, r25	; 0x02
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	01 c0       	rjmp	.+2      	; 0x4c6 <Bocht_Rechts+0x4c>
        }
        else
        {
            Toggle_check = false;
 4c4:	1b 82       	std	Y+3, r1	; 0x03
        }

    }while(Step_Count < 50);
 4c6:	89 81       	ldd	r24, Y+1	; 0x01
 4c8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ca:	82 33       	cpi	r24, 0x32	; 50
 4cc:	91 05       	cpc	r25, r1
 4ce:	14 f3       	brlt	.-60     	; 0x494 <Bocht_Rechts+0x1a>

    SetBit(DDRB, PB3);               // enable output timer D11
 4d0:	a4 e2       	ldi	r26, 0x24	; 36
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	e4 e2       	ldi	r30, 0x24	; 36
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	88 60       	ori	r24, 0x08	; 8
 4dc:	8c 93       	st	X, r24
    return(true);
 4de:	81 e0       	ldi	r24, 0x01	; 1
}
 4e0:	0f 90       	pop	r0
 4e2:	0f 90       	pop	r0
 4e4:	0f 90       	pop	r0
 4e6:	cf 91       	pop	r28
 4e8:	df 91       	pop	r29
 4ea:	08 95       	ret

000004ec <main>:

int main(void)
{
 47a:	df 93       	push	r29
 47c:	cf 93       	push	r28
 47e:	cd b7       	in	r28, 0x3d	; 61
 480:	de b7       	in	r29, 0x3e	; 62
    init_timer();
 4f4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <init_timer>
    init_adc();
 4f8:	0e 94 06 01 	call	0x20c	; 0x20c <init_adc>

    // Insert code

    while(1)
        ADC_Check();
 4fc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <ADC_Check>
 500:	fd cf       	rjmp	.-6      	; 0x4fc <main+0x10>

00000502 <_fpadd_parts>:
 502:	a0 e0       	ldi	r26, 0x00	; 0
 504:	b0 e0       	ldi	r27, 0x00	; 0
 506:	e7 e8       	ldi	r30, 0x87	; 135
 508:	f2 e0       	ldi	r31, 0x02	; 2
 50a:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__prologue_saves__>
 50e:	dc 01       	movw	r26, r24
 510:	2b 01       	movw	r4, r22
 512:	fa 01       	movw	r30, r20
 514:	9c 91       	ld	r25, X
 516:	92 30       	cpi	r25, 0x02	; 2
 518:	08 f4       	brcc	.+2      	; 0x51c <_fpadd_parts+0x1a>
 51a:	39 c1       	rjmp	.+626    	; 0x78e <_fpadd_parts+0x28c>
 51c:	eb 01       	movw	r28, r22
 51e:	88 81       	ld	r24, Y
 520:	82 30       	cpi	r24, 0x02	; 2
 522:	08 f4       	brcc	.+2      	; 0x526 <_fpadd_parts+0x24>
 524:	33 c1       	rjmp	.+614    	; 0x78c <_fpadd_parts+0x28a>
 526:	94 30       	cpi	r25, 0x04	; 4
 528:	69 f4       	brne	.+26     	; 0x544 <_fpadd_parts+0x42>
 52a:	84 30       	cpi	r24, 0x04	; 4
 52c:	09 f0       	breq	.+2      	; 0x530 <_fpadd_parts+0x2e>
 52e:	2f c1       	rjmp	.+606    	; 0x78e <_fpadd_parts+0x28c>
 530:	11 96       	adiw	r26, 0x01	; 1
 532:	9c 91       	ld	r25, X
 534:	11 97       	sbiw	r26, 0x01	; 1
 536:	89 81       	ldd	r24, Y+1	; 0x01
 538:	98 17       	cp	r25, r24
 53a:	09 f4       	brne	.+2      	; 0x53e <_fpadd_parts+0x3c>
 53c:	28 c1       	rjmp	.+592    	; 0x78e <_fpadd_parts+0x28c>
 53e:	a0 e0       	ldi	r26, 0x00	; 0
 540:	b1 e0       	ldi	r27, 0x01	; 1
 542:	25 c1       	rjmp	.+586    	; 0x78e <_fpadd_parts+0x28c>
 544:	84 30       	cpi	r24, 0x04	; 4
 546:	09 f4       	brne	.+2      	; 0x54a <_fpadd_parts+0x48>
 548:	21 c1       	rjmp	.+578    	; 0x78c <_fpadd_parts+0x28a>
 54a:	82 30       	cpi	r24, 0x02	; 2
 54c:	a9 f4       	brne	.+42     	; 0x578 <_fpadd_parts+0x76>
 54e:	92 30       	cpi	r25, 0x02	; 2
 550:	09 f0       	breq	.+2      	; 0x554 <_fpadd_parts+0x52>
 552:	1d c1       	rjmp	.+570    	; 0x78e <_fpadd_parts+0x28c>
 554:	9a 01       	movw	r18, r20
 556:	ad 01       	movw	r20, r26
 558:	88 e0       	ldi	r24, 0x08	; 8
 55a:	ea 01       	movw	r28, r20
 55c:	09 90       	ld	r0, Y+
 55e:	ae 01       	movw	r20, r28
 560:	e9 01       	movw	r28, r18
 562:	09 92       	st	Y+, r0
 564:	9e 01       	movw	r18, r28
 566:	81 50       	subi	r24, 0x01	; 1
 568:	c1 f7       	brne	.-16     	; 0x55a <_fpadd_parts+0x58>
 56a:	e2 01       	movw	r28, r4
 56c:	89 81       	ldd	r24, Y+1	; 0x01
 56e:	11 96       	adiw	r26, 0x01	; 1
 570:	9c 91       	ld	r25, X
 572:	89 23       	and	r24, r25
 574:	81 83       	std	Z+1, r24	; 0x01
 576:	08 c1       	rjmp	.+528    	; 0x788 <_fpadd_parts+0x286>
 578:	92 30       	cpi	r25, 0x02	; 2
 57a:	09 f4       	brne	.+2      	; 0x57e <_fpadd_parts+0x7c>
 57c:	07 c1       	rjmp	.+526    	; 0x78c <_fpadd_parts+0x28a>
 57e:	12 96       	adiw	r26, 0x02	; 2
 580:	2d 90       	ld	r2, X+
 582:	3c 90       	ld	r3, X
 584:	13 97       	sbiw	r26, 0x03	; 3
 586:	eb 01       	movw	r28, r22
 588:	8a 81       	ldd	r24, Y+2	; 0x02
 58a:	9b 81       	ldd	r25, Y+3	; 0x03
 58c:	14 96       	adiw	r26, 0x04	; 4
 58e:	ad 90       	ld	r10, X+
 590:	bd 90       	ld	r11, X+
 592:	cd 90       	ld	r12, X+
 594:	dc 90       	ld	r13, X
 596:	17 97       	sbiw	r26, 0x07	; 7
 598:	ec 80       	ldd	r14, Y+4	; 0x04
 59a:	fd 80       	ldd	r15, Y+5	; 0x05
 59c:	0e 81       	ldd	r16, Y+6	; 0x06
 59e:	1f 81       	ldd	r17, Y+7	; 0x07
 5a0:	91 01       	movw	r18, r2
 5a2:	28 1b       	sub	r18, r24
 5a4:	39 0b       	sbc	r19, r25
 5a6:	b9 01       	movw	r22, r18
 5a8:	37 ff       	sbrs	r19, 7
 5aa:	04 c0       	rjmp	.+8      	; 0x5b4 <_fpadd_parts+0xb2>
 5ac:	66 27       	eor	r22, r22
 5ae:	77 27       	eor	r23, r23
 5b0:	62 1b       	sub	r22, r18
 5b2:	73 0b       	sbc	r23, r19
 5b4:	60 32       	cpi	r22, 0x20	; 32
 5b6:	71 05       	cpc	r23, r1
 5b8:	0c f0       	brlt	.+2      	; 0x5bc <_fpadd_parts+0xba>
 5ba:	61 c0       	rjmp	.+194    	; 0x67e <_fpadd_parts+0x17c>
 5bc:	12 16       	cp	r1, r18
 5be:	13 06       	cpc	r1, r19
 5c0:	6c f5       	brge	.+90     	; 0x61c <_fpadd_parts+0x11a>
 5c2:	37 01       	movw	r6, r14
 5c4:	48 01       	movw	r8, r16
 5c6:	06 2e       	mov	r0, r22
 5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <_fpadd_parts+0xd0>
 5ca:	96 94       	lsr	r9
 5cc:	87 94       	ror	r8
 5ce:	77 94       	ror	r7
 5d0:	67 94       	ror	r6
 5d2:	0a 94       	dec	r0
 5d4:	d2 f7       	brpl	.-12     	; 0x5ca <_fpadd_parts+0xc8>
 5d6:	21 e0       	ldi	r18, 0x01	; 1
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	40 e0       	ldi	r20, 0x00	; 0
 5dc:	50 e0       	ldi	r21, 0x00	; 0
 5de:	04 c0       	rjmp	.+8      	; 0x5e8 <_fpadd_parts+0xe6>
 5e0:	22 0f       	add	r18, r18
 5e2:	33 1f       	adc	r19, r19
 5e4:	44 1f       	adc	r20, r20
 5e6:	55 1f       	adc	r21, r21
 5e8:	6a 95       	dec	r22
 5ea:	d2 f7       	brpl	.-12     	; 0x5e0 <_fpadd_parts+0xde>
 5ec:	21 50       	subi	r18, 0x01	; 1
 5ee:	30 40       	sbci	r19, 0x00	; 0
 5f0:	40 40       	sbci	r20, 0x00	; 0
 5f2:	50 40       	sbci	r21, 0x00	; 0
 5f4:	2e 21       	and	r18, r14
 5f6:	3f 21       	and	r19, r15
 5f8:	40 23       	and	r20, r16
 5fa:	51 23       	and	r21, r17
 5fc:	21 15       	cp	r18, r1
 5fe:	31 05       	cpc	r19, r1
 600:	41 05       	cpc	r20, r1
 602:	51 05       	cpc	r21, r1
 604:	21 f0       	breq	.+8      	; 0x60e <_fpadd_parts+0x10c>
 606:	21 e0       	ldi	r18, 0x01	; 1
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	40 e0       	ldi	r20, 0x00	; 0
 60c:	50 e0       	ldi	r21, 0x00	; 0
 60e:	79 01       	movw	r14, r18
 610:	8a 01       	movw	r16, r20
 612:	e6 28       	or	r14, r6
 614:	f7 28       	or	r15, r7
 616:	08 29       	or	r16, r8
 618:	19 29       	or	r17, r9
 61a:	3c c0       	rjmp	.+120    	; 0x694 <_fpadd_parts+0x192>
 61c:	23 2b       	or	r18, r19
 61e:	d1 f1       	breq	.+116    	; 0x694 <_fpadd_parts+0x192>
 620:	26 0e       	add	r2, r22
 622:	37 1e       	adc	r3, r23
 624:	35 01       	movw	r6, r10
 626:	46 01       	movw	r8, r12
 628:	06 2e       	mov	r0, r22
 62a:	04 c0       	rjmp	.+8      	; 0x634 <_fpadd_parts+0x132>
 62c:	96 94       	lsr	r9
 62e:	87 94       	ror	r8
 630:	77 94       	ror	r7
 632:	67 94       	ror	r6
 634:	0a 94       	dec	r0
 636:	d2 f7       	brpl	.-12     	; 0x62c <_fpadd_parts+0x12a>
 638:	21 e0       	ldi	r18, 0x01	; 1
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	40 e0       	ldi	r20, 0x00	; 0
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	04 c0       	rjmp	.+8      	; 0x64a <_fpadd_parts+0x148>
 642:	22 0f       	add	r18, r18
 644:	33 1f       	adc	r19, r19
 646:	44 1f       	adc	r20, r20
 648:	55 1f       	adc	r21, r21
 64a:	6a 95       	dec	r22
 64c:	d2 f7       	brpl	.-12     	; 0x642 <_fpadd_parts+0x140>
 64e:	21 50       	subi	r18, 0x01	; 1
 650:	30 40       	sbci	r19, 0x00	; 0
 652:	40 40       	sbci	r20, 0x00	; 0
 654:	50 40       	sbci	r21, 0x00	; 0
 656:	2a 21       	and	r18, r10
 658:	3b 21       	and	r19, r11
 65a:	4c 21       	and	r20, r12
 65c:	5d 21       	and	r21, r13
 65e:	21 15       	cp	r18, r1
 660:	31 05       	cpc	r19, r1
 662:	41 05       	cpc	r20, r1
 664:	51 05       	cpc	r21, r1
 666:	21 f0       	breq	.+8      	; 0x670 <_fpadd_parts+0x16e>
 668:	21 e0       	ldi	r18, 0x01	; 1
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	40 e0       	ldi	r20, 0x00	; 0
 66e:	50 e0       	ldi	r21, 0x00	; 0
 670:	59 01       	movw	r10, r18
 672:	6a 01       	movw	r12, r20
 674:	a6 28       	or	r10, r6
 676:	b7 28       	or	r11, r7
 678:	c8 28       	or	r12, r8
 67a:	d9 28       	or	r13, r9
 67c:	0b c0       	rjmp	.+22     	; 0x694 <_fpadd_parts+0x192>
 67e:	82 15       	cp	r24, r2
 680:	93 05       	cpc	r25, r3
 682:	2c f0       	brlt	.+10     	; 0x68e <_fpadd_parts+0x18c>
 684:	1c 01       	movw	r2, r24
 686:	aa 24       	eor	r10, r10
 688:	bb 24       	eor	r11, r11
 68a:	65 01       	movw	r12, r10
 68c:	03 c0       	rjmp	.+6      	; 0x694 <_fpadd_parts+0x192>
 68e:	ee 24       	eor	r14, r14
 690:	ff 24       	eor	r15, r15
 692:	87 01       	movw	r16, r14
 694:	11 96       	adiw	r26, 0x01	; 1
 696:	9c 91       	ld	r25, X
 698:	d2 01       	movw	r26, r4
 69a:	11 96       	adiw	r26, 0x01	; 1
 69c:	8c 91       	ld	r24, X
 69e:	98 17       	cp	r25, r24
 6a0:	09 f4       	brne	.+2      	; 0x6a4 <_fpadd_parts+0x1a2>
 6a2:	45 c0       	rjmp	.+138    	; 0x72e <_fpadd_parts+0x22c>
 6a4:	99 23       	and	r25, r25
 6a6:	39 f0       	breq	.+14     	; 0x6b6 <_fpadd_parts+0x1b4>
 6a8:	a8 01       	movw	r20, r16
 6aa:	97 01       	movw	r18, r14
 6ac:	2a 19       	sub	r18, r10
 6ae:	3b 09       	sbc	r19, r11
 6b0:	4c 09       	sbc	r20, r12
 6b2:	5d 09       	sbc	r21, r13
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <_fpadd_parts+0x1c0>
 6b6:	a6 01       	movw	r20, r12
 6b8:	95 01       	movw	r18, r10
 6ba:	2e 19       	sub	r18, r14
 6bc:	3f 09       	sbc	r19, r15
 6be:	40 0b       	sbc	r20, r16
 6c0:	51 0b       	sbc	r21, r17
 6c2:	57 fd       	sbrc	r21, 7
 6c4:	08 c0       	rjmp	.+16     	; 0x6d6 <_fpadd_parts+0x1d4>
 6c6:	11 82       	std	Z+1, r1	; 0x01
 6c8:	33 82       	std	Z+3, r3	; 0x03
 6ca:	22 82       	std	Z+2, r2	; 0x02
 6cc:	24 83       	std	Z+4, r18	; 0x04
 6ce:	35 83       	std	Z+5, r19	; 0x05
 6d0:	46 83       	std	Z+6, r20	; 0x06
 6d2:	57 83       	std	Z+7, r21	; 0x07
 6d4:	1d c0       	rjmp	.+58     	; 0x710 <_fpadd_parts+0x20e>
 6d6:	81 e0       	ldi	r24, 0x01	; 1
 6d8:	81 83       	std	Z+1, r24	; 0x01
 6da:	33 82       	std	Z+3, r3	; 0x03
 6dc:	22 82       	std	Z+2, r2	; 0x02
 6de:	88 27       	eor	r24, r24
 6e0:	99 27       	eor	r25, r25
 6e2:	dc 01       	movw	r26, r24
 6e4:	82 1b       	sub	r24, r18
 6e6:	93 0b       	sbc	r25, r19
 6e8:	a4 0b       	sbc	r26, r20
 6ea:	b5 0b       	sbc	r27, r21
 6ec:	84 83       	std	Z+4, r24	; 0x04
 6ee:	95 83       	std	Z+5, r25	; 0x05
 6f0:	a6 83       	std	Z+6, r26	; 0x06
 6f2:	b7 83       	std	Z+7, r27	; 0x07
 6f4:	0d c0       	rjmp	.+26     	; 0x710 <_fpadd_parts+0x20e>
 6f6:	22 0f       	add	r18, r18
 6f8:	33 1f       	adc	r19, r19
 6fa:	44 1f       	adc	r20, r20
 6fc:	55 1f       	adc	r21, r21
 6fe:	24 83       	std	Z+4, r18	; 0x04
 700:	35 83       	std	Z+5, r19	; 0x05
 702:	46 83       	std	Z+6, r20	; 0x06
 704:	57 83       	std	Z+7, r21	; 0x07
 706:	82 81       	ldd	r24, Z+2	; 0x02
 708:	93 81       	ldd	r25, Z+3	; 0x03
 70a:	01 97       	sbiw	r24, 0x01	; 1
 70c:	93 83       	std	Z+3, r25	; 0x03
 70e:	82 83       	std	Z+2, r24	; 0x02
 710:	24 81       	ldd	r18, Z+4	; 0x04
 712:	35 81       	ldd	r19, Z+5	; 0x05
 714:	46 81       	ldd	r20, Z+6	; 0x06
 716:	57 81       	ldd	r21, Z+7	; 0x07
 718:	da 01       	movw	r26, r20
 71a:	c9 01       	movw	r24, r18
 71c:	01 97       	sbiw	r24, 0x01	; 1
 71e:	a1 09       	sbc	r26, r1
 720:	b1 09       	sbc	r27, r1
 722:	8f 5f       	subi	r24, 0xFF	; 255
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	af 4f       	sbci	r26, 0xFF	; 255
 728:	bf 43       	sbci	r27, 0x3F	; 63
 72a:	28 f3       	brcs	.-54     	; 0x6f6 <_fpadd_parts+0x1f4>
 72c:	0b c0       	rjmp	.+22     	; 0x744 <_fpadd_parts+0x242>
 72e:	91 83       	std	Z+1, r25	; 0x01
 730:	33 82       	std	Z+3, r3	; 0x03
 732:	22 82       	std	Z+2, r2	; 0x02
 734:	ea 0c       	add	r14, r10
 736:	fb 1c       	adc	r15, r11
 738:	0c 1d       	adc	r16, r12
 73a:	1d 1d       	adc	r17, r13
 73c:	e4 82       	std	Z+4, r14	; 0x04
 73e:	f5 82       	std	Z+5, r15	; 0x05
 740:	06 83       	std	Z+6, r16	; 0x06
 742:	17 83       	std	Z+7, r17	; 0x07
 744:	83 e0       	ldi	r24, 0x03	; 3
 746:	80 83       	st	Z, r24
 748:	24 81       	ldd	r18, Z+4	; 0x04
 74a:	35 81       	ldd	r19, Z+5	; 0x05
 74c:	46 81       	ldd	r20, Z+6	; 0x06
 74e:	57 81       	ldd	r21, Z+7	; 0x07
 750:	57 ff       	sbrs	r21, 7
 752:	1a c0       	rjmp	.+52     	; 0x788 <_fpadd_parts+0x286>
 754:	c9 01       	movw	r24, r18
 756:	aa 27       	eor	r26, r26
 758:	97 fd       	sbrc	r25, 7
 75a:	a0 95       	com	r26
 75c:	ba 2f       	mov	r27, r26
 75e:	81 70       	andi	r24, 0x01	; 1
 760:	90 70       	andi	r25, 0x00	; 0
 762:	a0 70       	andi	r26, 0x00	; 0
 764:	b0 70       	andi	r27, 0x00	; 0
 766:	56 95       	lsr	r21
 768:	47 95       	ror	r20
 76a:	37 95       	ror	r19
 76c:	27 95       	ror	r18
 76e:	82 2b       	or	r24, r18
 770:	93 2b       	or	r25, r19
 772:	a4 2b       	or	r26, r20
 774:	b5 2b       	or	r27, r21
 776:	84 83       	std	Z+4, r24	; 0x04
 778:	95 83       	std	Z+5, r25	; 0x05
 77a:	a6 83       	std	Z+6, r26	; 0x06
 77c:	b7 83       	std	Z+7, r27	; 0x07
 77e:	82 81       	ldd	r24, Z+2	; 0x02
 780:	93 81       	ldd	r25, Z+3	; 0x03
 782:	01 96       	adiw	r24, 0x01	; 1
 784:	93 83       	std	Z+3, r25	; 0x03
 786:	82 83       	std	Z+2, r24	; 0x02
 788:	df 01       	movw	r26, r30
 78a:	01 c0       	rjmp	.+2      	; 0x78e <_fpadd_parts+0x28c>
 78c:	d2 01       	movw	r26, r4
 78e:	cd 01       	movw	r24, r26
 790:	cd b7       	in	r28, 0x3d	; 61
 792:	de b7       	in	r29, 0x3e	; 62
 794:	e2 e1       	ldi	r30, 0x12	; 18
 796:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <__epilogue_restores__>

0000079a <__subsf3>:
 79a:	a0 e2       	ldi	r26, 0x20	; 32
 79c:	b0 e0       	ldi	r27, 0x00	; 0
 79e:	e3 ed       	ldi	r30, 0xD3	; 211
 7a0:	f3 e0       	ldi	r31, 0x03	; 3
 7a2:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__prologue_saves__+0x18>
 7a6:	69 83       	std	Y+1, r22	; 0x01
 7a8:	7a 83       	std	Y+2, r23	; 0x02
 7aa:	8b 83       	std	Y+3, r24	; 0x03
 7ac:	9c 83       	std	Y+4, r25	; 0x04
 7ae:	2d 83       	std	Y+5, r18	; 0x05
 7b0:	3e 83       	std	Y+6, r19	; 0x06
 7b2:	4f 83       	std	Y+7, r20	; 0x07
 7b4:	58 87       	std	Y+8, r21	; 0x08
 7b6:	e9 e0       	ldi	r30, 0x09	; 9
 7b8:	ee 2e       	mov	r14, r30
 7ba:	f1 2c       	mov	r15, r1
 7bc:	ec 0e       	add	r14, r28
 7be:	fd 1e       	adc	r15, r29
 7c0:	ce 01       	movw	r24, r28
 7c2:	01 96       	adiw	r24, 0x01	; 1
 7c4:	b7 01       	movw	r22, r14
 7c6:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 7ca:	8e 01       	movw	r16, r28
 7cc:	0f 5e       	subi	r16, 0xEF	; 239
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	ce 01       	movw	r24, r28
 7d2:	05 96       	adiw	r24, 0x05	; 5
 7d4:	b8 01       	movw	r22, r16
 7d6:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 7da:	8a 89       	ldd	r24, Y+18	; 0x12
 7dc:	91 e0       	ldi	r25, 0x01	; 1
 7de:	89 27       	eor	r24, r25
 7e0:	8a 8b       	std	Y+18, r24	; 0x12
 7e2:	c7 01       	movw	r24, r14
 7e4:	b8 01       	movw	r22, r16
 7e6:	ae 01       	movw	r20, r28
 7e8:	47 5e       	subi	r20, 0xE7	; 231
 7ea:	5f 4f       	sbci	r21, 0xFF	; 255
 7ec:	0e 94 81 02 	call	0x502	; 0x502 <_fpadd_parts>
 7f0:	0e 94 d1 05 	call	0xba2	; 0xba2 <__pack_f>
 7f4:	a0 96       	adiw	r28, 0x20	; 32
 7f6:	e6 e0       	ldi	r30, 0x06	; 6
 7f8:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__epilogue_restores__+0x18>

000007fc <__addsf3>:
 7fc:	a0 e2       	ldi	r26, 0x20	; 32
 7fe:	b0 e0       	ldi	r27, 0x00	; 0
 800:	e4 e0       	ldi	r30, 0x04	; 4
 802:	f4 e0       	ldi	r31, 0x04	; 4
 804:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__prologue_saves__+0x18>
 808:	69 83       	std	Y+1, r22	; 0x01
 80a:	7a 83       	std	Y+2, r23	; 0x02
 80c:	8b 83       	std	Y+3, r24	; 0x03
 80e:	9c 83       	std	Y+4, r25	; 0x04
 810:	2d 83       	std	Y+5, r18	; 0x05
 812:	3e 83       	std	Y+6, r19	; 0x06
 814:	4f 83       	std	Y+7, r20	; 0x07
 816:	58 87       	std	Y+8, r21	; 0x08
 818:	f9 e0       	ldi	r31, 0x09	; 9
 81a:	ef 2e       	mov	r14, r31
 81c:	f1 2c       	mov	r15, r1
 81e:	ec 0e       	add	r14, r28
 820:	fd 1e       	adc	r15, r29
 822:	ce 01       	movw	r24, r28
 824:	01 96       	adiw	r24, 0x01	; 1
 826:	b7 01       	movw	r22, r14
 828:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 82c:	8e 01       	movw	r16, r28
 82e:	0f 5e       	subi	r16, 0xEF	; 239
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	ce 01       	movw	r24, r28
 834:	05 96       	adiw	r24, 0x05	; 5
 836:	b8 01       	movw	r22, r16
 838:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 83c:	c7 01       	movw	r24, r14
 83e:	b8 01       	movw	r22, r16
 840:	ae 01       	movw	r20, r28
 842:	47 5e       	subi	r20, 0xE7	; 231
 844:	5f 4f       	sbci	r21, 0xFF	; 255
 846:	0e 94 81 02 	call	0x502	; 0x502 <_fpadd_parts>
 84a:	0e 94 d1 05 	call	0xba2	; 0xba2 <__pack_f>
 84e:	a0 96       	adiw	r28, 0x20	; 32
 850:	e6 e0       	ldi	r30, 0x06	; 6
 852:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__epilogue_restores__+0x18>

00000856 <__mulsf3>:
 856:	a0 e2       	ldi	r26, 0x20	; 32
 858:	b0 e0       	ldi	r27, 0x00	; 0
 85a:	e1 e3       	ldi	r30, 0x31	; 49
 85c:	f4 e0       	ldi	r31, 0x04	; 4
 85e:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__prologue_saves__>
 862:	69 83       	std	Y+1, r22	; 0x01
 864:	7a 83       	std	Y+2, r23	; 0x02
 866:	8b 83       	std	Y+3, r24	; 0x03
 868:	9c 83       	std	Y+4, r25	; 0x04
 86a:	2d 83       	std	Y+5, r18	; 0x05
 86c:	3e 83       	std	Y+6, r19	; 0x06
 86e:	4f 83       	std	Y+7, r20	; 0x07
 870:	58 87       	std	Y+8, r21	; 0x08
 872:	ce 01       	movw	r24, r28
 874:	01 96       	adiw	r24, 0x01	; 1
 876:	be 01       	movw	r22, r28
 878:	67 5f       	subi	r22, 0xF7	; 247
 87a:	7f 4f       	sbci	r23, 0xFF	; 255
 87c:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 880:	ce 01       	movw	r24, r28
 882:	05 96       	adiw	r24, 0x05	; 5
 884:	be 01       	movw	r22, r28
 886:	6f 5e       	subi	r22, 0xEF	; 239
 888:	7f 4f       	sbci	r23, 0xFF	; 255
 88a:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 88e:	99 85       	ldd	r25, Y+9	; 0x09
 890:	92 30       	cpi	r25, 0x02	; 2
 892:	88 f0       	brcs	.+34     	; 0x8b6 <__mulsf3+0x60>
 894:	89 89       	ldd	r24, Y+17	; 0x11
 896:	82 30       	cpi	r24, 0x02	; 2
 898:	c8 f0       	brcs	.+50     	; 0x8cc <__mulsf3+0x76>
 89a:	94 30       	cpi	r25, 0x04	; 4
 89c:	19 f4       	brne	.+6      	; 0x8a4 <__mulsf3+0x4e>
 89e:	82 30       	cpi	r24, 0x02	; 2
 8a0:	51 f4       	brne	.+20     	; 0x8b6 <__mulsf3+0x60>
 8a2:	04 c0       	rjmp	.+8      	; 0x8ac <__mulsf3+0x56>
 8a4:	84 30       	cpi	r24, 0x04	; 4
 8a6:	29 f4       	brne	.+10     	; 0x8b2 <__mulsf3+0x5c>
 8a8:	92 30       	cpi	r25, 0x02	; 2
 8aa:	81 f4       	brne	.+32     	; 0x8cc <__mulsf3+0x76>
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	91 e0       	ldi	r25, 0x01	; 1
 8b0:	c6 c0       	rjmp	.+396    	; 0xa3e <__stack+0x13f>
 8b2:	92 30       	cpi	r25, 0x02	; 2
 8b4:	49 f4       	brne	.+18     	; 0x8c8 <__mulsf3+0x72>
 8b6:	20 e0       	ldi	r18, 0x00	; 0
 8b8:	9a 85       	ldd	r25, Y+10	; 0x0a
 8ba:	8a 89       	ldd	r24, Y+18	; 0x12
 8bc:	98 13       	cpse	r25, r24
 8be:	21 e0       	ldi	r18, 0x01	; 1
 8c0:	2a 87       	std	Y+10, r18	; 0x0a
 8c2:	ce 01       	movw	r24, r28
 8c4:	09 96       	adiw	r24, 0x09	; 9
 8c6:	bb c0       	rjmp	.+374    	; 0xa3e <__stack+0x13f>
 8c8:	82 30       	cpi	r24, 0x02	; 2
 8ca:	49 f4       	brne	.+18     	; 0x8de <__mulsf3+0x88>
 8cc:	20 e0       	ldi	r18, 0x00	; 0
 8ce:	9a 85       	ldd	r25, Y+10	; 0x0a
 8d0:	8a 89       	ldd	r24, Y+18	; 0x12
 8d2:	98 13       	cpse	r25, r24
 8d4:	21 e0       	ldi	r18, 0x01	; 1
 8d6:	2a 8b       	std	Y+18, r18	; 0x12
 8d8:	ce 01       	movw	r24, r28
 8da:	41 96       	adiw	r24, 0x11	; 17
 8dc:	b0 c0       	rjmp	.+352    	; 0xa3e <__stack+0x13f>
 8de:	2d 84       	ldd	r2, Y+13	; 0x0d
 8e0:	3e 84       	ldd	r3, Y+14	; 0x0e
 8e2:	4f 84       	ldd	r4, Y+15	; 0x0f
 8e4:	58 88       	ldd	r5, Y+16	; 0x10
 8e6:	6d 88       	ldd	r6, Y+21	; 0x15
 8e8:	7e 88       	ldd	r7, Y+22	; 0x16
 8ea:	8f 88       	ldd	r8, Y+23	; 0x17
 8ec:	98 8c       	ldd	r9, Y+24	; 0x18
 8ee:	ee 24       	eor	r14, r14
 8f0:	ff 24       	eor	r15, r15
 8f2:	87 01       	movw	r16, r14
 8f4:	aa 24       	eor	r10, r10
 8f6:	bb 24       	eor	r11, r11
 8f8:	65 01       	movw	r12, r10
 8fa:	40 e0       	ldi	r20, 0x00	; 0
 8fc:	50 e0       	ldi	r21, 0x00	; 0
 8fe:	60 e0       	ldi	r22, 0x00	; 0
 900:	70 e0       	ldi	r23, 0x00	; 0
 902:	e0 e0       	ldi	r30, 0x00	; 0
 904:	f0 e0       	ldi	r31, 0x00	; 0
 906:	c1 01       	movw	r24, r2
 908:	81 70       	andi	r24, 0x01	; 1
 90a:	90 70       	andi	r25, 0x00	; 0
 90c:	89 2b       	or	r24, r25
 90e:	e9 f0       	breq	.+58     	; 0x94a <__stack+0x4b>
 910:	e6 0c       	add	r14, r6
 912:	f7 1c       	adc	r15, r7
 914:	08 1d       	adc	r16, r8
 916:	19 1d       	adc	r17, r9
 918:	9a 01       	movw	r18, r20
 91a:	ab 01       	movw	r20, r22
 91c:	2a 0d       	add	r18, r10
 91e:	3b 1d       	adc	r19, r11
 920:	4c 1d       	adc	r20, r12
 922:	5d 1d       	adc	r21, r13
 924:	80 e0       	ldi	r24, 0x00	; 0
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	a0 e0       	ldi	r26, 0x00	; 0
 92a:	b0 e0       	ldi	r27, 0x00	; 0
 92c:	e6 14       	cp	r14, r6
 92e:	f7 04       	cpc	r15, r7
 930:	08 05       	cpc	r16, r8
 932:	19 05       	cpc	r17, r9
 934:	20 f4       	brcc	.+8      	; 0x93e <__stack+0x3f>
 936:	81 e0       	ldi	r24, 0x01	; 1
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	a0 e0       	ldi	r26, 0x00	; 0
 93c:	b0 e0       	ldi	r27, 0x00	; 0
 93e:	ba 01       	movw	r22, r20
 940:	a9 01       	movw	r20, r18
 942:	48 0f       	add	r20, r24
 944:	59 1f       	adc	r21, r25
 946:	6a 1f       	adc	r22, r26
 948:	7b 1f       	adc	r23, r27
 94a:	aa 0c       	add	r10, r10
 94c:	bb 1c       	adc	r11, r11
 94e:	cc 1c       	adc	r12, r12
 950:	dd 1c       	adc	r13, r13
 952:	97 fe       	sbrs	r9, 7
 954:	08 c0       	rjmp	.+16     	; 0x966 <__stack+0x67>
 956:	81 e0       	ldi	r24, 0x01	; 1
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	a0 e0       	ldi	r26, 0x00	; 0
 95c:	b0 e0       	ldi	r27, 0x00	; 0
 95e:	a8 2a       	or	r10, r24
 960:	b9 2a       	or	r11, r25
 962:	ca 2a       	or	r12, r26
 964:	db 2a       	or	r13, r27
 966:	31 96       	adiw	r30, 0x01	; 1
 968:	e0 32       	cpi	r30, 0x20	; 32
 96a:	f1 05       	cpc	r31, r1
 96c:	49 f0       	breq	.+18     	; 0x980 <__stack+0x81>
 96e:	66 0c       	add	r6, r6
 970:	77 1c       	adc	r7, r7
 972:	88 1c       	adc	r8, r8
 974:	99 1c       	adc	r9, r9
 976:	56 94       	lsr	r5
 978:	47 94       	ror	r4
 97a:	37 94       	ror	r3
 97c:	27 94       	ror	r2
 97e:	c3 cf       	rjmp	.-122    	; 0x906 <__stack+0x7>
 980:	fa 85       	ldd	r31, Y+10	; 0x0a
 982:	ea 89       	ldd	r30, Y+18	; 0x12
 984:	2b 89       	ldd	r18, Y+19	; 0x13
 986:	3c 89       	ldd	r19, Y+20	; 0x14
 988:	8b 85       	ldd	r24, Y+11	; 0x0b
 98a:	9c 85       	ldd	r25, Y+12	; 0x0c
 98c:	28 0f       	add	r18, r24
 98e:	39 1f       	adc	r19, r25
 990:	2e 5f       	subi	r18, 0xFE	; 254
 992:	3f 4f       	sbci	r19, 0xFF	; 255
 994:	17 c0       	rjmp	.+46     	; 0x9c4 <__stack+0xc5>
 996:	ca 01       	movw	r24, r20
 998:	81 70       	andi	r24, 0x01	; 1
 99a:	90 70       	andi	r25, 0x00	; 0
 99c:	89 2b       	or	r24, r25
 99e:	61 f0       	breq	.+24     	; 0x9b8 <__stack+0xb9>
 9a0:	16 95       	lsr	r17
 9a2:	07 95       	ror	r16
 9a4:	f7 94       	ror	r15
 9a6:	e7 94       	ror	r14
 9a8:	80 e0       	ldi	r24, 0x00	; 0
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	a0 e0       	ldi	r26, 0x00	; 0
 9ae:	b0 e8       	ldi	r27, 0x80	; 128
 9b0:	e8 2a       	or	r14, r24
 9b2:	f9 2a       	or	r15, r25
 9b4:	0a 2b       	or	r16, r26
 9b6:	1b 2b       	or	r17, r27
 9b8:	76 95       	lsr	r23
 9ba:	67 95       	ror	r22
 9bc:	57 95       	ror	r21
 9be:	47 95       	ror	r20
 9c0:	2f 5f       	subi	r18, 0xFF	; 255
 9c2:	3f 4f       	sbci	r19, 0xFF	; 255
 9c4:	77 fd       	sbrc	r23, 7
 9c6:	e7 cf       	rjmp	.-50     	; 0x996 <__stack+0x97>
 9c8:	0c c0       	rjmp	.+24     	; 0x9e2 <__stack+0xe3>
 9ca:	44 0f       	add	r20, r20
 9cc:	55 1f       	adc	r21, r21
 9ce:	66 1f       	adc	r22, r22
 9d0:	77 1f       	adc	r23, r23
 9d2:	17 fd       	sbrc	r17, 7
 9d4:	41 60       	ori	r20, 0x01	; 1
 9d6:	ee 0c       	add	r14, r14
 9d8:	ff 1c       	adc	r15, r15
 9da:	00 1f       	adc	r16, r16
 9dc:	11 1f       	adc	r17, r17
 9de:	21 50       	subi	r18, 0x01	; 1
 9e0:	30 40       	sbci	r19, 0x00	; 0
 9e2:	40 30       	cpi	r20, 0x00	; 0
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	59 07       	cpc	r21, r25
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	69 07       	cpc	r22, r25
 9ec:	90 e4       	ldi	r25, 0x40	; 64
 9ee:	79 07       	cpc	r23, r25
 9f0:	60 f3       	brcs	.-40     	; 0x9ca <__stack+0xcb>
 9f2:	2b 8f       	std	Y+27, r18	; 0x1b
 9f4:	3c 8f       	std	Y+28, r19	; 0x1c
 9f6:	db 01       	movw	r26, r22
 9f8:	ca 01       	movw	r24, r20
 9fa:	8f 77       	andi	r24, 0x7F	; 127
 9fc:	90 70       	andi	r25, 0x00	; 0
 9fe:	a0 70       	andi	r26, 0x00	; 0
 a00:	b0 70       	andi	r27, 0x00	; 0
 a02:	80 34       	cpi	r24, 0x40	; 64
 a04:	91 05       	cpc	r25, r1
 a06:	a1 05       	cpc	r26, r1
 a08:	b1 05       	cpc	r27, r1
 a0a:	61 f4       	brne	.+24     	; 0xa24 <__stack+0x125>
 a0c:	47 fd       	sbrc	r20, 7
 a0e:	0a c0       	rjmp	.+20     	; 0xa24 <__stack+0x125>
 a10:	e1 14       	cp	r14, r1
 a12:	f1 04       	cpc	r15, r1
 a14:	01 05       	cpc	r16, r1
 a16:	11 05       	cpc	r17, r1
 a18:	29 f0       	breq	.+10     	; 0xa24 <__stack+0x125>
 a1a:	40 5c       	subi	r20, 0xC0	; 192
 a1c:	5f 4f       	sbci	r21, 0xFF	; 255
 a1e:	6f 4f       	sbci	r22, 0xFF	; 255
 a20:	7f 4f       	sbci	r23, 0xFF	; 255
 a22:	40 78       	andi	r20, 0x80	; 128
 a24:	1a 8e       	std	Y+26, r1	; 0x1a
 a26:	fe 17       	cp	r31, r30
 a28:	11 f0       	breq	.+4      	; 0xa2e <__stack+0x12f>
 a2a:	81 e0       	ldi	r24, 0x01	; 1
 a2c:	8a 8f       	std	Y+26, r24	; 0x1a
 a2e:	4d 8f       	std	Y+29, r20	; 0x1d
 a30:	5e 8f       	std	Y+30, r21	; 0x1e
 a32:	6f 8f       	std	Y+31, r22	; 0x1f
 a34:	78 a3       	std	Y+32, r23	; 0x20
 a36:	83 e0       	ldi	r24, 0x03	; 3
 a38:	89 8f       	std	Y+25, r24	; 0x19
 a3a:	ce 01       	movw	r24, r28
 a3c:	49 96       	adiw	r24, 0x19	; 25
 a3e:	0e 94 d1 05 	call	0xba2	; 0xba2 <__pack_f>
 a42:	a0 96       	adiw	r28, 0x20	; 32
 a44:	e2 e1       	ldi	r30, 0x12	; 18
 a46:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <__epilogue_restores__>

00000a4a <__divsf3>:
 a4a:	a8 e1       	ldi	r26, 0x18	; 24
 a4c:	b0 e0       	ldi	r27, 0x00	; 0
 a4e:	eb e2       	ldi	r30, 0x2B	; 43
 a50:	f5 e0       	ldi	r31, 0x05	; 5
 a52:	0c 94 26 07 	jmp	0xe4c	; 0xe4c <__prologue_saves__+0x10>
 a56:	69 83       	std	Y+1, r22	; 0x01
 a58:	7a 83       	std	Y+2, r23	; 0x02
 a5a:	8b 83       	std	Y+3, r24	; 0x03
 a5c:	9c 83       	std	Y+4, r25	; 0x04
 a5e:	2d 83       	std	Y+5, r18	; 0x05
 a60:	3e 83       	std	Y+6, r19	; 0x06
 a62:	4f 83       	std	Y+7, r20	; 0x07
 a64:	58 87       	std	Y+8, r21	; 0x08
 a66:	b9 e0       	ldi	r27, 0x09	; 9
 a68:	eb 2e       	mov	r14, r27
 a6a:	f1 2c       	mov	r15, r1
 a6c:	ec 0e       	add	r14, r28
 a6e:	fd 1e       	adc	r15, r29
 a70:	ce 01       	movw	r24, r28
 a72:	01 96       	adiw	r24, 0x01	; 1
 a74:	b7 01       	movw	r22, r14
 a76:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 a7a:	8e 01       	movw	r16, r28
 a7c:	0f 5e       	subi	r16, 0xEF	; 239
 a7e:	1f 4f       	sbci	r17, 0xFF	; 255
 a80:	ce 01       	movw	r24, r28
 a82:	05 96       	adiw	r24, 0x05	; 5
 a84:	b8 01       	movw	r22, r16
 a86:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__unpack_f>
 a8a:	29 85       	ldd	r18, Y+9	; 0x09
 a8c:	22 30       	cpi	r18, 0x02	; 2
 a8e:	08 f4       	brcc	.+2      	; 0xa92 <__divsf3+0x48>
 a90:	7e c0       	rjmp	.+252    	; 0xb8e <__divsf3+0x144>
 a92:	39 89       	ldd	r19, Y+17	; 0x11
 a94:	32 30       	cpi	r19, 0x02	; 2
 a96:	10 f4       	brcc	.+4      	; 0xa9c <__divsf3+0x52>
 a98:	b8 01       	movw	r22, r16
 a9a:	7c c0       	rjmp	.+248    	; 0xb94 <__divsf3+0x14a>
 a9c:	8a 85       	ldd	r24, Y+10	; 0x0a
 a9e:	9a 89       	ldd	r25, Y+18	; 0x12
 aa0:	89 27       	eor	r24, r25
 aa2:	8a 87       	std	Y+10, r24	; 0x0a
 aa4:	24 30       	cpi	r18, 0x04	; 4
 aa6:	11 f0       	breq	.+4      	; 0xaac <__divsf3+0x62>
 aa8:	22 30       	cpi	r18, 0x02	; 2
 aaa:	31 f4       	brne	.+12     	; 0xab8 <__divsf3+0x6e>
 aac:	23 17       	cp	r18, r19
 aae:	09 f0       	breq	.+2      	; 0xab2 <__divsf3+0x68>
 ab0:	6e c0       	rjmp	.+220    	; 0xb8e <__divsf3+0x144>
 ab2:	60 e0       	ldi	r22, 0x00	; 0
 ab4:	71 e0       	ldi	r23, 0x01	; 1
 ab6:	6e c0       	rjmp	.+220    	; 0xb94 <__divsf3+0x14a>
 ab8:	34 30       	cpi	r19, 0x04	; 4
 aba:	39 f4       	brne	.+14     	; 0xaca <__divsf3+0x80>
 abc:	1d 86       	std	Y+13, r1	; 0x0d
 abe:	1e 86       	std	Y+14, r1	; 0x0e
 ac0:	1f 86       	std	Y+15, r1	; 0x0f
 ac2:	18 8a       	std	Y+16, r1	; 0x10
 ac4:	1c 86       	std	Y+12, r1	; 0x0c
 ac6:	1b 86       	std	Y+11, r1	; 0x0b
 ac8:	04 c0       	rjmp	.+8      	; 0xad2 <__divsf3+0x88>
 aca:	32 30       	cpi	r19, 0x02	; 2
 acc:	21 f4       	brne	.+8      	; 0xad6 <__divsf3+0x8c>
 ace:	84 e0       	ldi	r24, 0x04	; 4
 ad0:	89 87       	std	Y+9, r24	; 0x09
 ad2:	b7 01       	movw	r22, r14
 ad4:	5f c0       	rjmp	.+190    	; 0xb94 <__divsf3+0x14a>
 ad6:	2b 85       	ldd	r18, Y+11	; 0x0b
 ad8:	3c 85       	ldd	r19, Y+12	; 0x0c
 ada:	8b 89       	ldd	r24, Y+19	; 0x13
 adc:	9c 89       	ldd	r25, Y+20	; 0x14
 ade:	28 1b       	sub	r18, r24
 ae0:	39 0b       	sbc	r19, r25
 ae2:	3c 87       	std	Y+12, r19	; 0x0c
 ae4:	2b 87       	std	Y+11, r18	; 0x0b
 ae6:	ed 84       	ldd	r14, Y+13	; 0x0d
 ae8:	fe 84       	ldd	r15, Y+14	; 0x0e
 aea:	0f 85       	ldd	r16, Y+15	; 0x0f
 aec:	18 89       	ldd	r17, Y+16	; 0x10
 aee:	ad 88       	ldd	r10, Y+21	; 0x15
 af0:	be 88       	ldd	r11, Y+22	; 0x16
 af2:	cf 88       	ldd	r12, Y+23	; 0x17
 af4:	d8 8c       	ldd	r13, Y+24	; 0x18
 af6:	ea 14       	cp	r14, r10
 af8:	fb 04       	cpc	r15, r11
 afa:	0c 05       	cpc	r16, r12
 afc:	1d 05       	cpc	r17, r13
 afe:	40 f4       	brcc	.+16     	; 0xb10 <__divsf3+0xc6>
 b00:	ee 0c       	add	r14, r14
 b02:	ff 1c       	adc	r15, r15
 b04:	00 1f       	adc	r16, r16
 b06:	11 1f       	adc	r17, r17
 b08:	21 50       	subi	r18, 0x01	; 1
 b0a:	30 40       	sbci	r19, 0x00	; 0
 b0c:	3c 87       	std	Y+12, r19	; 0x0c
 b0e:	2b 87       	std	Y+11, r18	; 0x0b
 b10:	20 e0       	ldi	r18, 0x00	; 0
 b12:	30 e0       	ldi	r19, 0x00	; 0
 b14:	40 e0       	ldi	r20, 0x00	; 0
 b16:	50 e0       	ldi	r21, 0x00	; 0
 b18:	80 e0       	ldi	r24, 0x00	; 0
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	a0 e0       	ldi	r26, 0x00	; 0
 b1e:	b0 e4       	ldi	r27, 0x40	; 64
 b20:	60 e0       	ldi	r22, 0x00	; 0
 b22:	70 e0       	ldi	r23, 0x00	; 0
 b24:	ea 14       	cp	r14, r10
 b26:	fb 04       	cpc	r15, r11
 b28:	0c 05       	cpc	r16, r12
 b2a:	1d 05       	cpc	r17, r13
 b2c:	40 f0       	brcs	.+16     	; 0xb3e <__divsf3+0xf4>
 b2e:	28 2b       	or	r18, r24
 b30:	39 2b       	or	r19, r25
 b32:	4a 2b       	or	r20, r26
 b34:	5b 2b       	or	r21, r27
 b36:	ea 18       	sub	r14, r10
 b38:	fb 08       	sbc	r15, r11
 b3a:	0c 09       	sbc	r16, r12
 b3c:	1d 09       	sbc	r17, r13
 b3e:	b6 95       	lsr	r27
 b40:	a7 95       	ror	r26
 b42:	97 95       	ror	r25
 b44:	87 95       	ror	r24
 b46:	ee 0c       	add	r14, r14
 b48:	ff 1c       	adc	r15, r15
 b4a:	00 1f       	adc	r16, r16
 b4c:	11 1f       	adc	r17, r17
 b4e:	6f 5f       	subi	r22, 0xFF	; 255
 b50:	7f 4f       	sbci	r23, 0xFF	; 255
 b52:	6f 31       	cpi	r22, 0x1F	; 31
 b54:	71 05       	cpc	r23, r1
 b56:	31 f7       	brne	.-52     	; 0xb24 <__divsf3+0xda>
 b58:	da 01       	movw	r26, r20
 b5a:	c9 01       	movw	r24, r18
 b5c:	8f 77       	andi	r24, 0x7F	; 127
 b5e:	90 70       	andi	r25, 0x00	; 0
 b60:	a0 70       	andi	r26, 0x00	; 0
 b62:	b0 70       	andi	r27, 0x00	; 0
 b64:	80 34       	cpi	r24, 0x40	; 64
 b66:	91 05       	cpc	r25, r1
 b68:	a1 05       	cpc	r26, r1
 b6a:	b1 05       	cpc	r27, r1
 b6c:	61 f4       	brne	.+24     	; 0xb86 <__divsf3+0x13c>
 b6e:	27 fd       	sbrc	r18, 7
 b70:	0a c0       	rjmp	.+20     	; 0xb86 <__divsf3+0x13c>
 b72:	e1 14       	cp	r14, r1
 b74:	f1 04       	cpc	r15, r1
 b76:	01 05       	cpc	r16, r1
 b78:	11 05       	cpc	r17, r1
 b7a:	29 f0       	breq	.+10     	; 0xb86 <__divsf3+0x13c>
 b7c:	20 5c       	subi	r18, 0xC0	; 192
 b7e:	3f 4f       	sbci	r19, 0xFF	; 255
 b80:	4f 4f       	sbci	r20, 0xFF	; 255
 b82:	5f 4f       	sbci	r21, 0xFF	; 255
 b84:	20 78       	andi	r18, 0x80	; 128
 b86:	2d 87       	std	Y+13, r18	; 0x0d
 b88:	3e 87       	std	Y+14, r19	; 0x0e
 b8a:	4f 87       	std	Y+15, r20	; 0x0f
 b8c:	58 8b       	std	Y+16, r21	; 0x10
 b8e:	be 01       	movw	r22, r28
 b90:	67 5f       	subi	r22, 0xF7	; 247
 b92:	7f 4f       	sbci	r23, 0xFF	; 255
 b94:	cb 01       	movw	r24, r22
 b96:	0e 94 d1 05 	call	0xba2	; 0xba2 <__pack_f>
 b9a:	68 96       	adiw	r28, 0x18	; 24
 b9c:	ea e0       	ldi	r30, 0x0A	; 10
 b9e:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__epilogue_restores__+0x10>

00000ba2 <__pack_f>:
 ba2:	df 92       	push	r13
 ba4:	ef 92       	push	r14
 ba6:	ff 92       	push	r15
 ba8:	0f 93       	push	r16
 baa:	1f 93       	push	r17
 bac:	fc 01       	movw	r30, r24
 bae:	e4 80       	ldd	r14, Z+4	; 0x04
 bb0:	f5 80       	ldd	r15, Z+5	; 0x05
 bb2:	06 81       	ldd	r16, Z+6	; 0x06
 bb4:	17 81       	ldd	r17, Z+7	; 0x07
 bb6:	d1 80       	ldd	r13, Z+1	; 0x01
 bb8:	80 81       	ld	r24, Z
 bba:	82 30       	cpi	r24, 0x02	; 2
 bbc:	48 f4       	brcc	.+18     	; 0xbd0 <__pack_f+0x2e>
 bbe:	80 e0       	ldi	r24, 0x00	; 0
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	a0 e1       	ldi	r26, 0x10	; 16
 bc4:	b0 e0       	ldi	r27, 0x00	; 0
 bc6:	e8 2a       	or	r14, r24
 bc8:	f9 2a       	or	r15, r25
 bca:	0a 2b       	or	r16, r26
 bcc:	1b 2b       	or	r17, r27
 bce:	a5 c0       	rjmp	.+330    	; 0xd1a <__pack_f+0x178>
 bd0:	84 30       	cpi	r24, 0x04	; 4
 bd2:	09 f4       	brne	.+2      	; 0xbd6 <__pack_f+0x34>
 bd4:	9f c0       	rjmp	.+318    	; 0xd14 <__pack_f+0x172>
 bd6:	82 30       	cpi	r24, 0x02	; 2
 bd8:	21 f4       	brne	.+8      	; 0xbe2 <__pack_f+0x40>
 bda:	ee 24       	eor	r14, r14
 bdc:	ff 24       	eor	r15, r15
 bde:	87 01       	movw	r16, r14
 be0:	05 c0       	rjmp	.+10     	; 0xbec <__pack_f+0x4a>
 be2:	e1 14       	cp	r14, r1
 be4:	f1 04       	cpc	r15, r1
 be6:	01 05       	cpc	r16, r1
 be8:	11 05       	cpc	r17, r1
 bea:	19 f4       	brne	.+6      	; 0xbf2 <__pack_f+0x50>
 bec:	e0 e0       	ldi	r30, 0x00	; 0
 bee:	f0 e0       	ldi	r31, 0x00	; 0
 bf0:	96 c0       	rjmp	.+300    	; 0xd1e <__pack_f+0x17c>
 bf2:	62 81       	ldd	r22, Z+2	; 0x02
 bf4:	73 81       	ldd	r23, Z+3	; 0x03
 bf6:	9f ef       	ldi	r25, 0xFF	; 255
 bf8:	62 38       	cpi	r22, 0x82	; 130
 bfa:	79 07       	cpc	r23, r25
 bfc:	0c f0       	brlt	.+2      	; 0xc00 <__pack_f+0x5e>
 bfe:	5b c0       	rjmp	.+182    	; 0xcb6 <__pack_f+0x114>
 c00:	22 e8       	ldi	r18, 0x82	; 130
 c02:	3f ef       	ldi	r19, 0xFF	; 255
 c04:	26 1b       	sub	r18, r22
 c06:	37 0b       	sbc	r19, r23
 c08:	2a 31       	cpi	r18, 0x1A	; 26
 c0a:	31 05       	cpc	r19, r1
 c0c:	2c f0       	brlt	.+10     	; 0xc18 <__pack_f+0x76>
 c0e:	20 e0       	ldi	r18, 0x00	; 0
 c10:	30 e0       	ldi	r19, 0x00	; 0
 c12:	40 e0       	ldi	r20, 0x00	; 0
 c14:	50 e0       	ldi	r21, 0x00	; 0
 c16:	2a c0       	rjmp	.+84     	; 0xc6c <__pack_f+0xca>
 c18:	b8 01       	movw	r22, r16
 c1a:	a7 01       	movw	r20, r14
 c1c:	02 2e       	mov	r0, r18
 c1e:	04 c0       	rjmp	.+8      	; 0xc28 <__pack_f+0x86>
 c20:	76 95       	lsr	r23
 c22:	67 95       	ror	r22
 c24:	57 95       	ror	r21
 c26:	47 95       	ror	r20
 c28:	0a 94       	dec	r0
 c2a:	d2 f7       	brpl	.-12     	; 0xc20 <__pack_f+0x7e>
 c2c:	81 e0       	ldi	r24, 0x01	; 1
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	a0 e0       	ldi	r26, 0x00	; 0
 c32:	b0 e0       	ldi	r27, 0x00	; 0
 c34:	04 c0       	rjmp	.+8      	; 0xc3e <__pack_f+0x9c>
 c36:	88 0f       	add	r24, r24
 c38:	99 1f       	adc	r25, r25
 c3a:	aa 1f       	adc	r26, r26
 c3c:	bb 1f       	adc	r27, r27
 c3e:	2a 95       	dec	r18
 c40:	d2 f7       	brpl	.-12     	; 0xc36 <__pack_f+0x94>
 c42:	01 97       	sbiw	r24, 0x01	; 1
 c44:	a1 09       	sbc	r26, r1
 c46:	b1 09       	sbc	r27, r1
 c48:	8e 21       	and	r24, r14
 c4a:	9f 21       	and	r25, r15
 c4c:	a0 23       	and	r26, r16
 c4e:	b1 23       	and	r27, r17
 c50:	00 97       	sbiw	r24, 0x00	; 0
 c52:	a1 05       	cpc	r26, r1
 c54:	b1 05       	cpc	r27, r1
 c56:	21 f0       	breq	.+8      	; 0xc60 <__pack_f+0xbe>
 c58:	81 e0       	ldi	r24, 0x01	; 1
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	a0 e0       	ldi	r26, 0x00	; 0
 c5e:	b0 e0       	ldi	r27, 0x00	; 0
 c60:	9a 01       	movw	r18, r20
 c62:	ab 01       	movw	r20, r22
 c64:	28 2b       	or	r18, r24
 c66:	39 2b       	or	r19, r25
 c68:	4a 2b       	or	r20, r26
 c6a:	5b 2b       	or	r21, r27
 c6c:	da 01       	movw	r26, r20
 c6e:	c9 01       	movw	r24, r18
 c70:	8f 77       	andi	r24, 0x7F	; 127
 c72:	90 70       	andi	r25, 0x00	; 0
 c74:	a0 70       	andi	r26, 0x00	; 0
 c76:	b0 70       	andi	r27, 0x00	; 0
 c78:	80 34       	cpi	r24, 0x40	; 64
 c7a:	91 05       	cpc	r25, r1
 c7c:	a1 05       	cpc	r26, r1
 c7e:	b1 05       	cpc	r27, r1
 c80:	39 f4       	brne	.+14     	; 0xc90 <__pack_f+0xee>
 c82:	27 ff       	sbrs	r18, 7
 c84:	09 c0       	rjmp	.+18     	; 0xc98 <__pack_f+0xf6>
 c86:	20 5c       	subi	r18, 0xC0	; 192
 c88:	3f 4f       	sbci	r19, 0xFF	; 255
 c8a:	4f 4f       	sbci	r20, 0xFF	; 255
 c8c:	5f 4f       	sbci	r21, 0xFF	; 255
 c8e:	04 c0       	rjmp	.+8      	; 0xc98 <__pack_f+0xf6>
 c90:	21 5c       	subi	r18, 0xC1	; 193
 c92:	3f 4f       	sbci	r19, 0xFF	; 255
 c94:	4f 4f       	sbci	r20, 0xFF	; 255
 c96:	5f 4f       	sbci	r21, 0xFF	; 255
 c98:	e0 e0       	ldi	r30, 0x00	; 0
 c9a:	f0 e0       	ldi	r31, 0x00	; 0
 c9c:	20 30       	cpi	r18, 0x00	; 0
 c9e:	a0 e0       	ldi	r26, 0x00	; 0
 ca0:	3a 07       	cpc	r19, r26
 ca2:	a0 e0       	ldi	r26, 0x00	; 0
 ca4:	4a 07       	cpc	r20, r26
 ca6:	a0 e4       	ldi	r26, 0x40	; 64
 ca8:	5a 07       	cpc	r21, r26
 caa:	10 f0       	brcs	.+4      	; 0xcb0 <__pack_f+0x10e>
 cac:	e1 e0       	ldi	r30, 0x01	; 1
 cae:	f0 e0       	ldi	r31, 0x00	; 0
 cb0:	79 01       	movw	r14, r18
 cb2:	8a 01       	movw	r16, r20
 cb4:	27 c0       	rjmp	.+78     	; 0xd04 <__pack_f+0x162>
 cb6:	60 38       	cpi	r22, 0x80	; 128
 cb8:	71 05       	cpc	r23, r1
 cba:	64 f5       	brge	.+88     	; 0xd14 <__pack_f+0x172>
 cbc:	fb 01       	movw	r30, r22
 cbe:	e1 58       	subi	r30, 0x81	; 129
 cc0:	ff 4f       	sbci	r31, 0xFF	; 255
 cc2:	d8 01       	movw	r26, r16
 cc4:	c7 01       	movw	r24, r14
 cc6:	8f 77       	andi	r24, 0x7F	; 127
 cc8:	90 70       	andi	r25, 0x00	; 0
 cca:	a0 70       	andi	r26, 0x00	; 0
 ccc:	b0 70       	andi	r27, 0x00	; 0
 cce:	80 34       	cpi	r24, 0x40	; 64
 cd0:	91 05       	cpc	r25, r1
 cd2:	a1 05       	cpc	r26, r1
 cd4:	b1 05       	cpc	r27, r1
 cd6:	39 f4       	brne	.+14     	; 0xce6 <__pack_f+0x144>
 cd8:	e7 fe       	sbrs	r14, 7
 cda:	0d c0       	rjmp	.+26     	; 0xcf6 <__pack_f+0x154>
 cdc:	80 e4       	ldi	r24, 0x40	; 64
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	a0 e0       	ldi	r26, 0x00	; 0
 ce2:	b0 e0       	ldi	r27, 0x00	; 0
 ce4:	04 c0       	rjmp	.+8      	; 0xcee <__pack_f+0x14c>
 ce6:	8f e3       	ldi	r24, 0x3F	; 63
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	a0 e0       	ldi	r26, 0x00	; 0
 cec:	b0 e0       	ldi	r27, 0x00	; 0
 cee:	e8 0e       	add	r14, r24
 cf0:	f9 1e       	adc	r15, r25
 cf2:	0a 1f       	adc	r16, r26
 cf4:	1b 1f       	adc	r17, r27
 cf6:	17 ff       	sbrs	r17, 7
 cf8:	05 c0       	rjmp	.+10     	; 0xd04 <__pack_f+0x162>
 cfa:	16 95       	lsr	r17
 cfc:	07 95       	ror	r16
 cfe:	f7 94       	ror	r15
 d00:	e7 94       	ror	r14
 d02:	31 96       	adiw	r30, 0x01	; 1
 d04:	87 e0       	ldi	r24, 0x07	; 7
 d06:	16 95       	lsr	r17
 d08:	07 95       	ror	r16
 d0a:	f7 94       	ror	r15
 d0c:	e7 94       	ror	r14
 d0e:	8a 95       	dec	r24
 d10:	d1 f7       	brne	.-12     	; 0xd06 <__pack_f+0x164>
 d12:	05 c0       	rjmp	.+10     	; 0xd1e <__pack_f+0x17c>
 d14:	ee 24       	eor	r14, r14
 d16:	ff 24       	eor	r15, r15
 d18:	87 01       	movw	r16, r14
 d1a:	ef ef       	ldi	r30, 0xFF	; 255
 d1c:	f0 e0       	ldi	r31, 0x00	; 0
 d1e:	6e 2f       	mov	r22, r30
 d20:	67 95       	ror	r22
 d22:	66 27       	eor	r22, r22
 d24:	67 95       	ror	r22
 d26:	90 2f       	mov	r25, r16
 d28:	9f 77       	andi	r25, 0x7F	; 127
 d2a:	d7 94       	ror	r13
 d2c:	dd 24       	eor	r13, r13
 d2e:	d7 94       	ror	r13
 d30:	8e 2f       	mov	r24, r30
 d32:	86 95       	lsr	r24
 d34:	49 2f       	mov	r20, r25
 d36:	46 2b       	or	r20, r22
 d38:	58 2f       	mov	r21, r24
 d3a:	5d 29       	or	r21, r13
 d3c:	b7 01       	movw	r22, r14
 d3e:	ca 01       	movw	r24, r20
 d40:	1f 91       	pop	r17
 d42:	0f 91       	pop	r16
 d44:	ff 90       	pop	r15
 d46:	ef 90       	pop	r14
 d48:	df 90       	pop	r13
 d4a:	08 95       	ret

00000d4c <__unpack_f>:
 d4c:	fc 01       	movw	r30, r24
 d4e:	db 01       	movw	r26, r22
 d50:	40 81       	ld	r20, Z
 d52:	51 81       	ldd	r21, Z+1	; 0x01
 d54:	22 81       	ldd	r18, Z+2	; 0x02
 d56:	62 2f       	mov	r22, r18
 d58:	6f 77       	andi	r22, 0x7F	; 127
 d5a:	70 e0       	ldi	r23, 0x00	; 0
 d5c:	22 1f       	adc	r18, r18
 d5e:	22 27       	eor	r18, r18
 d60:	22 1f       	adc	r18, r18
 d62:	93 81       	ldd	r25, Z+3	; 0x03
 d64:	89 2f       	mov	r24, r25
 d66:	88 0f       	add	r24, r24
 d68:	82 2b       	or	r24, r18
 d6a:	28 2f       	mov	r18, r24
 d6c:	30 e0       	ldi	r19, 0x00	; 0
 d6e:	99 1f       	adc	r25, r25
 d70:	99 27       	eor	r25, r25
 d72:	99 1f       	adc	r25, r25
 d74:	11 96       	adiw	r26, 0x01	; 1
 d76:	9c 93       	st	X, r25
 d78:	11 97       	sbiw	r26, 0x01	; 1
 d7a:	21 15       	cp	r18, r1
 d7c:	31 05       	cpc	r19, r1
 d7e:	a9 f5       	brne	.+106    	; 0xdea <__unpack_f+0x9e>
 d80:	41 15       	cp	r20, r1
 d82:	51 05       	cpc	r21, r1
 d84:	61 05       	cpc	r22, r1
 d86:	71 05       	cpc	r23, r1
 d88:	11 f4       	brne	.+4      	; 0xd8e <__unpack_f+0x42>
 d8a:	82 e0       	ldi	r24, 0x02	; 2
 d8c:	37 c0       	rjmp	.+110    	; 0xdfc <__unpack_f+0xb0>
 d8e:	82 e8       	ldi	r24, 0x82	; 130
 d90:	9f ef       	ldi	r25, 0xFF	; 255
 d92:	13 96       	adiw	r26, 0x03	; 3
 d94:	9c 93       	st	X, r25
 d96:	8e 93       	st	-X, r24
 d98:	12 97       	sbiw	r26, 0x02	; 2
 d9a:	9a 01       	movw	r18, r20
 d9c:	ab 01       	movw	r20, r22
 d9e:	67 e0       	ldi	r22, 0x07	; 7
 da0:	22 0f       	add	r18, r18
 da2:	33 1f       	adc	r19, r19
 da4:	44 1f       	adc	r20, r20
 da6:	55 1f       	adc	r21, r21
 da8:	6a 95       	dec	r22
 daa:	d1 f7       	brne	.-12     	; 0xda0 <__unpack_f+0x54>
 dac:	83 e0       	ldi	r24, 0x03	; 3
 dae:	8c 93       	st	X, r24
 db0:	0d c0       	rjmp	.+26     	; 0xdcc <__unpack_f+0x80>
 db2:	22 0f       	add	r18, r18
 db4:	33 1f       	adc	r19, r19
 db6:	44 1f       	adc	r20, r20
 db8:	55 1f       	adc	r21, r21
 dba:	12 96       	adiw	r26, 0x02	; 2
 dbc:	8d 91       	ld	r24, X+
 dbe:	9c 91       	ld	r25, X
 dc0:	13 97       	sbiw	r26, 0x03	; 3
 dc2:	01 97       	sbiw	r24, 0x01	; 1
 dc4:	13 96       	adiw	r26, 0x03	; 3
 dc6:	9c 93       	st	X, r25
 dc8:	8e 93       	st	-X, r24
 dca:	12 97       	sbiw	r26, 0x02	; 2
 dcc:	20 30       	cpi	r18, 0x00	; 0
 dce:	80 e0       	ldi	r24, 0x00	; 0
 dd0:	38 07       	cpc	r19, r24
 dd2:	80 e0       	ldi	r24, 0x00	; 0
 dd4:	48 07       	cpc	r20, r24
 dd6:	80 e4       	ldi	r24, 0x40	; 64
 dd8:	58 07       	cpc	r21, r24
 dda:	58 f3       	brcs	.-42     	; 0xdb2 <__unpack_f+0x66>
 ddc:	14 96       	adiw	r26, 0x04	; 4
 dde:	2d 93       	st	X+, r18
 de0:	3d 93       	st	X+, r19
 de2:	4d 93       	st	X+, r20
 de4:	5c 93       	st	X, r21
 de6:	17 97       	sbiw	r26, 0x07	; 7
 de8:	08 95       	ret
 dea:	2f 3f       	cpi	r18, 0xFF	; 255
 dec:	31 05       	cpc	r19, r1
 dee:	79 f4       	brne	.+30     	; 0xe0e <__unpack_f+0xc2>
 df0:	41 15       	cp	r20, r1
 df2:	51 05       	cpc	r21, r1
 df4:	61 05       	cpc	r22, r1
 df6:	71 05       	cpc	r23, r1
 df8:	19 f4       	brne	.+6      	; 0xe00 <__unpack_f+0xb4>
 dfa:	84 e0       	ldi	r24, 0x04	; 4
 dfc:	8c 93       	st	X, r24
 dfe:	08 95       	ret
 e00:	64 ff       	sbrs	r22, 4
 e02:	03 c0       	rjmp	.+6      	; 0xe0a <__unpack_f+0xbe>
 e04:	81 e0       	ldi	r24, 0x01	; 1
 e06:	8c 93       	st	X, r24
 e08:	12 c0       	rjmp	.+36     	; 0xe2e <__unpack_f+0xe2>
 e0a:	1c 92       	st	X, r1
 e0c:	10 c0       	rjmp	.+32     	; 0xe2e <__unpack_f+0xe2>
 e0e:	2f 57       	subi	r18, 0x7F	; 127
 e10:	30 40       	sbci	r19, 0x00	; 0
 e12:	13 96       	adiw	r26, 0x03	; 3
 e14:	3c 93       	st	X, r19
 e16:	2e 93       	st	-X, r18
 e18:	12 97       	sbiw	r26, 0x02	; 2
 e1a:	83 e0       	ldi	r24, 0x03	; 3
 e1c:	8c 93       	st	X, r24
 e1e:	87 e0       	ldi	r24, 0x07	; 7
 e20:	44 0f       	add	r20, r20
 e22:	55 1f       	adc	r21, r21
 e24:	66 1f       	adc	r22, r22
 e26:	77 1f       	adc	r23, r23
 e28:	8a 95       	dec	r24
 e2a:	d1 f7       	brne	.-12     	; 0xe20 <__unpack_f+0xd4>
 e2c:	70 64       	ori	r23, 0x40	; 64
 e2e:	14 96       	adiw	r26, 0x04	; 4
 e30:	4d 93       	st	X+, r20
 e32:	5d 93       	st	X+, r21
 e34:	6d 93       	st	X+, r22
 e36:	7c 93       	st	X, r23
 e38:	17 97       	sbiw	r26, 0x07	; 7
 e3a:	08 95       	ret

00000e3c <__prologue_saves__>:
 e3c:	2f 92       	push	r2
 e3e:	3f 92       	push	r3
 e40:	4f 92       	push	r4
 e42:	5f 92       	push	r5
 e44:	6f 92       	push	r6
 e46:	7f 92       	push	r7
 e48:	8f 92       	push	r8
 e4a:	9f 92       	push	r9
 e4c:	af 92       	push	r10
 e4e:	bf 92       	push	r11
 e50:	cf 92       	push	r12
 e52:	df 92       	push	r13
 e54:	ef 92       	push	r14
 e56:	ff 92       	push	r15
 e58:	0f 93       	push	r16
 e5a:	1f 93       	push	r17
 e5c:	cf 93       	push	r28
 e5e:	df 93       	push	r29
 e60:	cd b7       	in	r28, 0x3d	; 61
 e62:	de b7       	in	r29, 0x3e	; 62
 e64:	ca 1b       	sub	r28, r26
 e66:	db 0b       	sbc	r29, r27
 e68:	0f b6       	in	r0, 0x3f	; 63
 e6a:	f8 94       	cli
 e6c:	de bf       	out	0x3e, r29	; 62
 e6e:	0f be       	out	0x3f, r0	; 63
 e70:	cd bf       	out	0x3d, r28	; 61
 e72:	09 94       	ijmp

00000e74 <__epilogue_restores__>:
 e74:	2a 88       	ldd	r2, Y+18	; 0x12
 e76:	39 88       	ldd	r3, Y+17	; 0x11
 e78:	48 88       	ldd	r4, Y+16	; 0x10
 e7a:	5f 84       	ldd	r5, Y+15	; 0x0f
 e7c:	6e 84       	ldd	r6, Y+14	; 0x0e
 e7e:	7d 84       	ldd	r7, Y+13	; 0x0d
 e80:	8c 84       	ldd	r8, Y+12	; 0x0c
 e82:	9b 84       	ldd	r9, Y+11	; 0x0b
 e84:	aa 84       	ldd	r10, Y+10	; 0x0a
 e86:	b9 84       	ldd	r11, Y+9	; 0x09
 e88:	c8 84       	ldd	r12, Y+8	; 0x08
 e8a:	df 80       	ldd	r13, Y+7	; 0x07
 e8c:	ee 80       	ldd	r14, Y+6	; 0x06
 e8e:	fd 80       	ldd	r15, Y+5	; 0x05
 e90:	0c 81       	ldd	r16, Y+4	; 0x04
 e92:	1b 81       	ldd	r17, Y+3	; 0x03
 e94:	aa 81       	ldd	r26, Y+2	; 0x02
 e96:	b9 81       	ldd	r27, Y+1	; 0x01
 e98:	ce 0f       	add	r28, r30
 e9a:	d1 1d       	adc	r29, r1
 e9c:	0f b6       	in	r0, 0x3f	; 63
 e9e:	f8 94       	cli
 ea0:	de bf       	out	0x3e, r29	; 62
 ea2:	0f be       	out	0x3f, r0	; 63
 ea4:	cd bf       	out	0x3d, r28	; 61
 ea6:	ed 01       	movw	r28, r26
 ea8:	08 95       	ret

00000eaa <_exit>:
 eaa:	f8 94       	cli

00000eac <__stop_program>:
 eac:	ff cf       	rjmp	.-2      	; 0xeac <__stop_program>
