
bin\Debug\AGV_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn

  0 .data         00000008  00800100  00000e3c  00000ef0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e3c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800108  00800108  00000ef8  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000ef8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000000c0  00000000  00000000  00000efb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001a6  00000000  00000000  00000fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015b7  00000000  00000000  00001161  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b01  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf4  00000000  00000000  00003219  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00003f10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031d  00000000  00000000  00004040  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d8  00000000  00000000  0000435d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00004a35  2**0

                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a8 e0       	ldi	r26, 0x08	; 8
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:

  7e:	a4 31       	cpi	r26, 0x14	; 20

  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1

  8a:	ec e3       	ldi	r30, 0x3C	; 60
  8c:	fe e0       	ldi	r31, 0x0E	; 14

  8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>

  9a:	0e 94 3d 02 	call	0x47a	; 0x47a <main>
  9e:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <_exit>


000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>


000000a6 <MapRange>:
volatile uint16_t ADC_waarde_2;
volatile uint16_t verschil_0;
volatile uint16_t verschil_2;

double MapRange(double X, double A1, double A2, double B1, double B2)
{
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	df 93       	push	r29
 14c:	cf 93       	push	r28
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	64 97       	sbiw	r28, 0x14	; 20
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61
 15e:	6d 83       	std	Y+5, r22	; 0x05
 160:	7e 83       	std	Y+6, r23	; 0x06
 162:	8f 83       	std	Y+7, r24	; 0x07
 164:	98 87       	std	Y+8, r25	; 0x08
 166:	29 87       	std	Y+9, r18	; 0x09
 168:	3a 87       	std	Y+10, r19	; 0x0a
 16a:	4b 87       	std	Y+11, r20	; 0x0b
 16c:	5c 87       	std	Y+12, r21	; 0x0c
 16e:	ed 86       	std	Y+13, r14	; 0x0d
 170:	fe 86       	std	Y+14, r15	; 0x0e
 172:	0f 87       	std	Y+15, r16	; 0x0f
 174:	18 8b       	std	Y+16, r17	; 0x10
 176:	a9 8a       	std	Y+17, r10	; 0x11
 178:	ba 8a       	std	Y+18, r11	; 0x12
 17a:	cb 8a       	std	Y+19, r12	; 0x13
 17c:	dc 8a       	std	Y+20, r13	; 0x14
    double Y = B1 + (X-A1)*((B2-B1)/(A2-A1));

  ea:	6d 81       	ldd	r22, Y+5	; 0x05
  ec:	7e 81       	ldd	r23, Y+6	; 0x06
  ee:	8f 81       	ldd	r24, Y+7	; 0x07
  f0:	98 85       	ldd	r25, Y+8	; 0x08
  f2:	29 85       	ldd	r18, Y+9	; 0x09
  f4:	3a 85       	ldd	r19, Y+10	; 0x0a
  f6:	4b 85       	ldd	r20, Y+11	; 0x0b
  f8:	5c 85       	ldd	r21, Y+12	; 0x0c
  fa:	0e 94 94 03 	call	0x728	; 0x728 <__subsf3>
  fe:	dc 01       	movw	r26, r24
 100:	cb 01       	movw	r24, r22
 102:	5c 01       	movw	r10, r24
 104:	6d 01       	movw	r12, r26
 106:	69 a1       	ldd	r22, Y+33	; 0x21
 108:	7a a1       	ldd	r23, Y+34	; 0x22
 10a:	8b a1       	ldd	r24, Y+35	; 0x23
 10c:	9c a1       	ldd	r25, Y+36	; 0x24
 10e:	29 89       	ldd	r18, Y+17	; 0x11
 110:	3a 89       	ldd	r19, Y+18	; 0x12
 112:	4b 89       	ldd	r20, Y+19	; 0x13
 114:	5c 89       	ldd	r21, Y+20	; 0x14
 116:	0e 94 94 03 	call	0x728	; 0x728 <__subsf3>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	7c 01       	movw	r14, r24
 120:	8d 01       	movw	r16, r26
 122:	6d 85       	ldd	r22, Y+13	; 0x0d
 124:	7e 85       	ldd	r23, Y+14	; 0x0e
 126:	8f 85       	ldd	r24, Y+15	; 0x0f
 128:	98 89       	ldd	r25, Y+16	; 0x10
 12a:	29 85       	ldd	r18, Y+9	; 0x09
 12c:	3a 85       	ldd	r19, Y+10	; 0x0a
 12e:	4b 85       	ldd	r20, Y+11	; 0x0b
 130:	5c 85       	ldd	r21, Y+12	; 0x0c
 132:	0e 94 94 03 	call	0x728	; 0x728 <__subsf3>
 136:	dc 01       	movw	r26, r24
 138:	cb 01       	movw	r24, r22
 13a:	9c 01       	movw	r18, r24
 13c:	ad 01       	movw	r20, r26
 13e:	c8 01       	movw	r24, r16
 140:	b7 01       	movw	r22, r14
 142:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__divsf3>
 146:	dc 01       	movw	r26, r24
 148:	cb 01       	movw	r24, r22
 14a:	9c 01       	movw	r18, r24
 14c:	ad 01       	movw	r20, r26
 14e:	c6 01       	movw	r24, r12
 150:	b5 01       	movw	r22, r10
 152:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__mulsf3>
 156:	dc 01       	movw	r26, r24
 158:	cb 01       	movw	r24, r22
 15a:	bc 01       	movw	r22, r24
 15c:	cd 01       	movw	r24, r26
 15e:	29 89       	ldd	r18, Y+17	; 0x11
 160:	3a 89       	ldd	r19, Y+18	; 0x12
 162:	4b 89       	ldd	r20, Y+19	; 0x13
 164:	5c 89       	ldd	r21, Y+20	; 0x14
 166:	0e 94 c5 03 	call	0x78a	; 0x78a <__addsf3>
 16a:	dc 01       	movw	r26, r24
 16c:	cb 01       	movw	r24, r22
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	9a 83       	std	Y+2, r25	; 0x02
 172:	ab 83       	std	Y+3, r26	; 0x03
 174:	bc 83       	std	Y+4, r27	; 0x04

    return Y;
 20a:	89 81       	ldd	r24, Y+1	; 0x01
 20c:	9a 81       	ldd	r25, Y+2	; 0x02
 20e:	ab 81       	ldd	r26, Y+3	; 0x03
 210:	bc 81       	ldd	r27, Y+4	; 0x04
}
 212:	bc 01       	movw	r22, r24
 214:	cd 01       	movw	r24, r26
 216:	64 96       	adiw	r28, 0x14	; 20
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
 222:	cf 91       	pop	r28
 224:	df 91       	pop	r29
 226:	1f 91       	pop	r17
 228:	0f 91       	pop	r16
 22a:	ff 90       	pop	r15
 22c:	ef 90       	pop	r14
 22e:	df 90       	pop	r13
 230:	cf 90       	pop	r12
 232:	bf 90       	pop	r11
 234:	af 90       	pop	r10
 236:	08 95       	ret

00000238 <init_timer>:

void init_timer(void)
{
 238:	df 93       	push	r29
 23a:	cf 93       	push	r28
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
    ///timmer settup voor stepper motor1
    ///gebruikt timer0 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR0A  = BV(COM0A0) | BV(WGM01);
 240:	e4 e4       	ldi	r30, 0x44	; 68
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	82 e4       	ldi	r24, 0x42	; 66
 246:	80 83       	st	Z, r24
    TCCR0B  = BV(CS02);             // clk/256

 1b4:	e5 e4       	ldi	r30, 0x45	; 69
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	80 83       	st	Z, r24
    OCR0A   = 95;                   //start snelheid
 1bc:	e7 e4       	ldi	r30, 0x47	; 71
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	8f e5       	ldi	r24, 0x5F	; 95
 1c2:	80 83       	st	Z, r24

    SetBit(DDRD, PD6);              //enable output timer D6
 258:	aa e2       	ldi	r26, 0x2A	; 42
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	ea e2       	ldi	r30, 0x2A	; 42
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 64       	ori	r24, 0x40	; 64
 264:	8c 93       	st	X, r24

    ///timmer settup voor stepper motor2
    ///gebruikt timer2 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR2A  = BV(COM2A0) | BV(WGM21);
 266:	e0 eb       	ldi	r30, 0xB0	; 176
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	82 e4       	ldi	r24, 0x42	; 66
 26c:	80 83       	st	Z, r24
    ClearBit(ASSR, AS2);             // interne io klok geselecteerd
 26e:	a6 eb       	ldi	r26, 0xB6	; 182
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	e6 eb       	ldi	r30, 0xB6	; 182
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	8f 7d       	andi	r24, 0xDF	; 223
 27a:	8c 93       	st	X, r24
    TCCR2B  = BV(CS22) | BV(CS21);   // clk/256

 1e8:	e1 eb       	ldi	r30, 0xB1	; 177
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	86 e0       	ldi	r24, 0x06	; 6
 1ee:	80 83       	st	Z, r24
    OCR2A   = 95;                    // start snelheid
 1f0:	e3 eb       	ldi	r30, 0xB3	; 179
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	8f e5       	ldi	r24, 0x5F	; 95
 1f6:	80 83       	st	Z, r24

    SetBit(DDRB, PB3);               // enable output timer D11
 28c:	a4 e2       	ldi	r26, 0x24	; 36
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	e4 e2       	ldi	r30, 0x24	; 36
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	88 60       	ori	r24, 0x08	; 8
 298:	8c 93       	st	X, r24
}
 29a:	cf 91       	pop	r28
 29c:	df 91       	pop	r29
 29e:	08 95       	ret

000002a0 <init_adc>:

void init_adc(void)
{
 2a0:	df 93       	push	r29
 2a2:	cf 93       	push	r28
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
    ADMUX |= (1 << REFS0);                                  // AVCC als referentiespanning

 214:	ac e7       	ldi	r26, 0x7C	; 124
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	ec e7       	ldi	r30, 0x7C	; 124
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	80 64       	ori	r24, 0x40	; 64
 220:	8c 93       	st	X, r24
    ADCSRA = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);    // Prescaler 128 125kHZ
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	80 83       	st	Z, r24
    ADCSRA |= (1 << ADEN);                                  // Aanzetten ADC
 22a:	aa e7       	ldi	r26, 0x7A	; 122
 22c:	b0 e0       	ldi	r27, 0x00	; 0
 22e:	ea e7       	ldi	r30, 0x7A	; 122
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	80 68       	ori	r24, 0x80	; 128
 236:	8c 93       	st	X, r24


    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 238:	ac e7       	ldi	r26, 0x7C	; 124
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	ec e7       	ldi	r30, 0x7C	; 124
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	80 81       	ld	r24, Z
 242:	8e 7f       	andi	r24, 0xFE	; 254
 244:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 246:	aa e7       	ldi	r26, 0x7A	; 122
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	ea e7       	ldi	r30, 0x7A	; 122
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	80 64       	ori	r24, 0x40	; 64
 252:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 254:	ea e7       	ldi	r30, 0x7A	; 122
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	88 2f       	mov	r24, r24
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	80 74       	andi	r24, 0x40	; 64
 260:	90 70       	andi	r25, 0x00	; 0
 262:	00 97       	sbiw	r24, 0x00	; 0
 264:	b9 f7       	brne	.-18     	; 0x254 <init_adc+0x48>
    POT0_BEGIN = ADC;                               // Waarde meegeven aan variabele
 266:	e8 e7       	ldi	r30, 0x78	; 120
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	91 81       	ldd	r25, Z+1	; 0x01
 26e:	90 93 0b 01 	sts	0x010B, r25
 272:	80 93 0a 01 	sts	0x010A, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 276:	ac e7       	ldi	r26, 0x7C	; 124
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	ec e7       	ldi	r30, 0x7C	; 124
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	81 60       	ori	r24, 0x01	; 1
 282:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 284:	aa e7       	ldi	r26, 0x7A	; 122
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	ea e7       	ldi	r30, 0x7A	; 122
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 292:	ea e7       	ldi	r30, 0x7A	; 122
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	88 2f       	mov	r24, r24
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	80 74       	andi	r24, 0x40	; 64
 29e:	90 70       	andi	r25, 0x00	; 0
 2a0:	00 97       	sbiw	r24, 0x00	; 0
 2a2:	b9 f7       	brne	.-18     	; 0x292 <init_adc+0x86>
    POT2_BEGIN = ADC;                             // Waarde meegeven aan variabele
 2a4:	e8 e7       	ldi	r30, 0x78	; 120
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	91 81       	ldd	r25, Z+1	; 0x01
 2ac:	90 93 13 01 	sts	0x0113, r25
 2b0:	80 93 12 01 	sts	0x0112, r24



}
 2b4:	cf 91       	pop	r28
 2b6:	df 91       	pop	r29
 2b8:	08 95       	ret

000002ba <ADC_Check>:

void ADC_Check(void)
{
 2ba:	df 93       	push	r29
 2bc:	cf 93       	push	r28
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 2c2:	ac e7       	ldi	r26, 0x7C	; 124
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	ec e7       	ldi	r30, 0x7C	; 124
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	8e 7f       	andi	r24, 0xFE	; 254
 2ce:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 2d0:	aa e7       	ldi	r26, 0x7A	; 122
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	ea e7       	ldi	r30, 0x7A	; 122
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	80 64       	ori	r24, 0x40	; 64
 2dc:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 2de:	ea e7       	ldi	r30, 0x7A	; 122
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	88 2f       	mov	r24, r24
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	80 74       	andi	r24, 0x40	; 64
 2ea:	90 70       	andi	r25, 0x00	; 0
 2ec:	00 97       	sbiw	r24, 0x00	; 0
 2ee:	b9 f7       	brne	.-18     	; 0x2de <ADC_Check+0x24>
    ADC_waarde_0 = ADC;                               // Waarde meegeven aan variabele
 2f0:	e8 e7       	ldi	r30, 0x78	; 120
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	91 81       	ldd	r25, Z+1	; 0x01
 2f8:	90 93 0f 01 	sts	0x010F, r25
 2fc:	80 93 0e 01 	sts	0x010E, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 300:	ac e7       	ldi	r26, 0x7C	; 124
 302:	b0 e0       	ldi	r27, 0x00	; 0
 304:	ec e7       	ldi	r30, 0x7C	; 124
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	81 60       	ori	r24, 0x01	; 1
 30c:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 30e:	aa e7       	ldi	r26, 0x7A	; 122
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	ea e7       	ldi	r30, 0x7A	; 122
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	80 64       	ori	r24, 0x40	; 64
 31a:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 31c:	ea e7       	ldi	r30, 0x7A	; 122
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	88 2f       	mov	r24, r24
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	80 74       	andi	r24, 0x40	; 64
 328:	90 70       	andi	r25, 0x00	; 0
 32a:	00 97       	sbiw	r24, 0x00	; 0
 32c:	b9 f7       	brne	.-18     	; 0x31c <ADC_Check+0x62>
    ADC_waarde_2 = ADC;                             // Waarde meegeven aan variabele
 32e:	e8 e7       	ldi	r30, 0x78	; 120
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	91 81       	ldd	r25, Z+1	; 0x01
 336:	90 93 09 01 	sts	0x0109, r25
 33a:	80 93 08 01 	sts	0x0108, r24
}
 33e:	cf 91       	pop	r28
 340:	df 91       	pop	r29
 342:	08 95       	ret

00000344 <Navigeer>:



void Navigeer(void)
{
 344:	df 93       	push	r29
 346:	cf 93       	push	r28
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62

    ///links
    if((POT2_BEGIN > ADC_waarde_2) && (POT0_BEGIN < ADC_waarde_0))
 34c:	20 91 12 01 	lds	r18, 0x0112
 350:	30 91 13 01 	lds	r19, 0x0113
 354:	80 91 08 01 	lds	r24, 0x0108
 358:	90 91 09 01 	lds	r25, 0x0109
 35c:	82 17       	cp	r24, r18
 35e:	93 07       	cpc	r25, r19
 360:	08 f0       	brcs	.+2      	; 0x364 <Navigeer+0x20>
 362:	88 c0       	rjmp	.+272    	; 0x474 <Navigeer+0x130>
 364:	20 91 0a 01 	lds	r18, 0x010A
 368:	30 91 0b 01 	lds	r19, 0x010B
 36c:	80 91 0e 01 	lds	r24, 0x010E
 370:	90 91 0f 01 	lds	r25, 0x010F
 374:	28 17       	cp	r18, r24
 376:	39 07       	cpc	r19, r25
 378:	08 f0       	brcs	.+2      	; 0x37c <Navigeer+0x38>
 37a:	7c c0       	rjmp	.+248    	; 0x474 <Navigeer+0x130>
    {
        verschil_2 = POT2_BEGIN - ADC_waarde_2;
 37c:	20 91 12 01 	lds	r18, 0x0112
 380:	30 91 13 01 	lds	r19, 0x0113
 384:	80 91 08 01 	lds	r24, 0x0108
 388:	90 91 09 01 	lds	r25, 0x0109
 38c:	a9 01       	movw	r20, r18
 38e:	48 1b       	sub	r20, r24
 390:	59 0b       	sbc	r21, r25
 392:	ca 01       	movw	r24, r20
 394:	90 93 11 01 	sts	0x0111, r25
 398:	80 93 10 01 	sts	0x0110, r24
		verschil_0 = ADC_waarde_0 - POT0_BEGIN;
 39c:	20 91 0e 01 	lds	r18, 0x010E
 3a0:	30 91 0f 01 	lds	r19, 0x010F
 3a4:	80 91 0a 01 	lds	r24, 0x010A
 3a8:	90 91 0b 01 	lds	r25, 0x010B
 3ac:	a9 01       	movw	r20, r18
 3ae:	48 1b       	sub	r20, r24
 3b0:	59 0b       	sbc	r21, r25
 3b2:	ca 01       	movw	r24, r20
 3b4:	90 93 0d 01 	sts	0x010D, r25
 3b8:	80 93 0c 01 	sts	0x010C, r24

        if(verschil_0 > verschil_2)
 3bc:	20 91 0c 01 	lds	r18, 0x010C
 3c0:	30 91 0d 01 	lds	r19, 0x010D
 3c4:	80 91 10 01 	lds	r24, 0x0110
 3c8:	90 91 11 01 	lds	r25, 0x0111
 3cc:	82 17       	cp	r24, r18
 3ce:	93 07       	cpc	r25, r19
 3d0:	48 f5       	brcc	.+82     	; 0x424 <Navigeer+0xe0>
        {
            if((verschil_0 - verschil_2) >= 20)
 3d2:	80 91 0c 01 	lds	r24, 0x010C
 3d6:	90 91 0d 01 	lds	r25, 0x010D
 3da:	20 91 10 01 	lds	r18, 0x0110
 3de:	30 91 11 01 	lds	r19, 0x0111
 3e2:	82 1b       	sub	r24, r18
 3e4:	93 0b       	sbc	r25, r19
 3e6:	84 31       	cpi	r24, 0x14	; 20
 3e8:	91 05       	cpc	r25, r1
 3ea:	60 f0       	brcs	.+24     	; 0x404 <Navigeer+0xc0>
            {
                OCR0A = 95 ;
 3ec:	e7 e4       	ldi	r30, 0x47	; 71
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	8f e5       	ldi	r24, 0x5F	; 95
 3f2:	80 83       	st	Z, r24
                ClearBit(DDRB, PB3);               // disable output timer D11
 3f4:	a4 e2       	ldi	r26, 0x24	; 36
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e4 e2       	ldi	r30, 0x24	; 36
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	80 81       	ld	r24, Z
 3fe:	87 7f       	andi	r24, 0xF7	; 247
 400:	8c 93       	st	X, r24
 402:	38 c0       	rjmp	.+112    	; 0x474 <Navigeer+0x130>
            }
            else
            {
                SetBit(DDRB, PB3);               // enable output timer D11
 404:	a4 e2       	ldi	r26, 0x24	; 36
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e4 e2       	ldi	r30, 0x24	; 36
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	88 60       	ori	r24, 0x08	; 8
 410:	8c 93       	st	X, r24
                OCR0A = 95 ;
 412:	e7 e4       	ldi	r30, 0x47	; 71
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	8f e5       	ldi	r24, 0x5F	; 95
 418:	80 83       	st	Z, r24
                OCR2A = 95 ;
 41a:	e3 eb       	ldi	r30, 0xB3	; 179
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	8f e5       	ldi	r24, 0x5F	; 95
 420:	80 83       	st	Z, r24
 422:	28 c0       	rjmp	.+80     	; 0x474 <Navigeer+0x130>
            }

        }
        else
        {
            if((verschil_2 - verschil_0) >= 20)
 424:	80 91 10 01 	lds	r24, 0x0110
 428:	90 91 11 01 	lds	r25, 0x0111
 42c:	20 91 0c 01 	lds	r18, 0x010C
 430:	30 91 0d 01 	lds	r19, 0x010D
 434:	82 1b       	sub	r24, r18
 436:	93 0b       	sbc	r25, r19
 438:	84 31       	cpi	r24, 0x14	; 20
 43a:	91 05       	cpc	r25, r1
 43c:	60 f0       	brcs	.+24     	; 0x456 <Navigeer+0x112>
            {
                ClearBit(DDRD, PD6);              //disable output timer D6
 43e:	aa e2       	ldi	r26, 0x2A	; 42
 440:	b0 e0       	ldi	r27, 0x00	; 0
 442:	ea e2       	ldi	r30, 0x2A	; 42
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	8f 7b       	andi	r24, 0xBF	; 191
 44a:	8c 93       	st	X, r24
                OCR2A = 95 ;
 44c:	e3 eb       	ldi	r30, 0xB3	; 179
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	8f e5       	ldi	r24, 0x5F	; 95
 452:	80 83       	st	Z, r24
 454:	0f c0       	rjmp	.+30     	; 0x474 <Navigeer+0x130>
            }
            else
            {
                SetBit(DDRD, PD6);              //enable output timer D6
 456:	aa e2       	ldi	r26, 0x2A	; 42
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	ea e2       	ldi	r30, 0x2A	; 42
 45c:	f0 e0       	ldi	r31, 0x00	; 0
 45e:	80 81       	ld	r24, Z
 460:	80 64       	ori	r24, 0x40	; 64
 462:	8c 93       	st	X, r24

                OCR0A = 95 ;
 464:	e7 e4       	ldi	r30, 0x47	; 71
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	8f e5       	ldi	r24, 0x5F	; 95
 46a:	80 83       	st	Z, r24
                OCR2A = 95 ;
 46c:	e3 eb       	ldi	r30, 0xB3	; 179
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	8f e5       	ldi	r24, 0x5F	; 95
 472:	80 83       	st	Z, r24
            }

        }
    }
}
 474:	cf 91       	pop	r28
 476:	df 91       	pop	r29
 478:	08 95       	ret

0000047a <main>:


int main(void)
{

 47a:	df 93       	push	r29
 47c:	cf 93       	push	r28
 47e:	cd b7       	in	r28, 0x3d	; 61
 480:	de b7       	in	r29, 0x3e	; 62
    init_timer();
 482:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <init_timer>
    init_adc();
 486:	0e 94 06 01 	call	0x20c	; 0x20c <init_adc>

    // Insert code

    while(1)
        ADC_Check();
 48a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <ADC_Check>
 48e:	fd cf       	rjmp	.-6      	; 0x48a <main+0x10>

00000490 <_fpadd_parts>:
 490:	a0 e0       	ldi	r26, 0x00	; 0
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	ee e4       	ldi	r30, 0x4E	; 78
 496:	f2 e0       	ldi	r31, 0x02	; 2
 498:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__prologue_saves__>
 49c:	dc 01       	movw	r26, r24
 49e:	2b 01       	movw	r4, r22
 4a0:	fa 01       	movw	r30, r20
 4a2:	9c 91       	ld	r25, X
 4a4:	92 30       	cpi	r25, 0x02	; 2
 4a6:	08 f4       	brcc	.+2      	; 0x4aa <_fpadd_parts+0x1a>
 4a8:	39 c1       	rjmp	.+626    	; 0x71c <_fpadd_parts+0x28c>
 4aa:	eb 01       	movw	r28, r22
 4ac:	88 81       	ld	r24, Y
 4ae:	82 30       	cpi	r24, 0x02	; 2
 4b0:	08 f4       	brcc	.+2      	; 0x4b4 <_fpadd_parts+0x24>
 4b2:	33 c1       	rjmp	.+614    	; 0x71a <_fpadd_parts+0x28a>
 4b4:	94 30       	cpi	r25, 0x04	; 4
 4b6:	69 f4       	brne	.+26     	; 0x4d2 <_fpadd_parts+0x42>
 4b8:	84 30       	cpi	r24, 0x04	; 4
 4ba:	09 f0       	breq	.+2      	; 0x4be <_fpadd_parts+0x2e>
 4bc:	2f c1       	rjmp	.+606    	; 0x71c <_fpadd_parts+0x28c>
 4be:	11 96       	adiw	r26, 0x01	; 1
 4c0:	9c 91       	ld	r25, X
 4c2:	11 97       	sbiw	r26, 0x01	; 1
 4c4:	89 81       	ldd	r24, Y+1	; 0x01
 4c6:	98 17       	cp	r25, r24
 4c8:	09 f4       	brne	.+2      	; 0x4cc <_fpadd_parts+0x3c>
 4ca:	28 c1       	rjmp	.+592    	; 0x71c <_fpadd_parts+0x28c>
 4cc:	a0 e0       	ldi	r26, 0x00	; 0
 4ce:	b1 e0       	ldi	r27, 0x01	; 1
 4d0:	25 c1       	rjmp	.+586    	; 0x71c <_fpadd_parts+0x28c>
 4d2:	84 30       	cpi	r24, 0x04	; 4
 4d4:	09 f4       	brne	.+2      	; 0x4d8 <_fpadd_parts+0x48>
 4d6:	21 c1       	rjmp	.+578    	; 0x71a <_fpadd_parts+0x28a>
 4d8:	82 30       	cpi	r24, 0x02	; 2
 4da:	a9 f4       	brne	.+42     	; 0x506 <_fpadd_parts+0x76>
 4dc:	92 30       	cpi	r25, 0x02	; 2
 4de:	09 f0       	breq	.+2      	; 0x4e2 <_fpadd_parts+0x52>
 4e0:	1d c1       	rjmp	.+570    	; 0x71c <_fpadd_parts+0x28c>
 4e2:	9a 01       	movw	r18, r20
 4e4:	ad 01       	movw	r20, r26
 4e6:	88 e0       	ldi	r24, 0x08	; 8
 4e8:	ea 01       	movw	r28, r20
 4ea:	09 90       	ld	r0, Y+
 4ec:	ae 01       	movw	r20, r28
 4ee:	e9 01       	movw	r28, r18
 4f0:	09 92       	st	Y+, r0
 4f2:	9e 01       	movw	r18, r28
 4f4:	81 50       	subi	r24, 0x01	; 1
 4f6:	c1 f7       	brne	.-16     	; 0x4e8 <_fpadd_parts+0x58>
 4f8:	e2 01       	movw	r28, r4
 4fa:	89 81       	ldd	r24, Y+1	; 0x01
 4fc:	11 96       	adiw	r26, 0x01	; 1
 4fe:	9c 91       	ld	r25, X
 500:	89 23       	and	r24, r25
 502:	81 83       	std	Z+1, r24	; 0x01
 504:	08 c1       	rjmp	.+528    	; 0x716 <_fpadd_parts+0x286>
 506:	92 30       	cpi	r25, 0x02	; 2
 508:	09 f4       	brne	.+2      	; 0x50c <_fpadd_parts+0x7c>
 50a:	07 c1       	rjmp	.+526    	; 0x71a <_fpadd_parts+0x28a>
 50c:	12 96       	adiw	r26, 0x02	; 2
 50e:	2d 90       	ld	r2, X+
 510:	3c 90       	ld	r3, X
 512:	13 97       	sbiw	r26, 0x03	; 3
 514:	eb 01       	movw	r28, r22
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	9b 81       	ldd	r25, Y+3	; 0x03
 51a:	14 96       	adiw	r26, 0x04	; 4
 51c:	ad 90       	ld	r10, X+
 51e:	bd 90       	ld	r11, X+
 520:	cd 90       	ld	r12, X+
 522:	dc 90       	ld	r13, X
 524:	17 97       	sbiw	r26, 0x07	; 7
 526:	ec 80       	ldd	r14, Y+4	; 0x04
 528:	fd 80       	ldd	r15, Y+5	; 0x05
 52a:	0e 81       	ldd	r16, Y+6	; 0x06
 52c:	1f 81       	ldd	r17, Y+7	; 0x07
 52e:	91 01       	movw	r18, r2
 530:	28 1b       	sub	r18, r24
 532:	39 0b       	sbc	r19, r25
 534:	b9 01       	movw	r22, r18
 536:	37 ff       	sbrs	r19, 7
 538:	04 c0       	rjmp	.+8      	; 0x542 <_fpadd_parts+0xb2>
 53a:	66 27       	eor	r22, r22
 53c:	77 27       	eor	r23, r23
 53e:	62 1b       	sub	r22, r18
 540:	73 0b       	sbc	r23, r19
 542:	60 32       	cpi	r22, 0x20	; 32
 544:	71 05       	cpc	r23, r1
 546:	0c f0       	brlt	.+2      	; 0x54a <_fpadd_parts+0xba>
 548:	61 c0       	rjmp	.+194    	; 0x60c <_fpadd_parts+0x17c>
 54a:	12 16       	cp	r1, r18
 54c:	13 06       	cpc	r1, r19
 54e:	6c f5       	brge	.+90     	; 0x5aa <_fpadd_parts+0x11a>
 550:	37 01       	movw	r6, r14
 552:	48 01       	movw	r8, r16
 554:	06 2e       	mov	r0, r22
 556:	04 c0       	rjmp	.+8      	; 0x560 <_fpadd_parts+0xd0>
 558:	96 94       	lsr	r9
 55a:	87 94       	ror	r8
 55c:	77 94       	ror	r7
 55e:	67 94       	ror	r6
 560:	0a 94       	dec	r0
 562:	d2 f7       	brpl	.-12     	; 0x558 <_fpadd_parts+0xc8>
 564:	21 e0       	ldi	r18, 0x01	; 1
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	40 e0       	ldi	r20, 0x00	; 0
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	04 c0       	rjmp	.+8      	; 0x576 <_fpadd_parts+0xe6>
 56e:	22 0f       	add	r18, r18
 570:	33 1f       	adc	r19, r19
 572:	44 1f       	adc	r20, r20
 574:	55 1f       	adc	r21, r21
 576:	6a 95       	dec	r22
 578:	d2 f7       	brpl	.-12     	; 0x56e <_fpadd_parts+0xde>
 57a:	21 50       	subi	r18, 0x01	; 1
 57c:	30 40       	sbci	r19, 0x00	; 0
 57e:	40 40       	sbci	r20, 0x00	; 0
 580:	50 40       	sbci	r21, 0x00	; 0
 582:	2e 21       	and	r18, r14
 584:	3f 21       	and	r19, r15
 586:	40 23       	and	r20, r16
 588:	51 23       	and	r21, r17
 58a:	21 15       	cp	r18, r1
 58c:	31 05       	cpc	r19, r1
 58e:	41 05       	cpc	r20, r1
 590:	51 05       	cpc	r21, r1
 592:	21 f0       	breq	.+8      	; 0x59c <_fpadd_parts+0x10c>
 594:	21 e0       	ldi	r18, 0x01	; 1
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	40 e0       	ldi	r20, 0x00	; 0
 59a:	50 e0       	ldi	r21, 0x00	; 0
 59c:	79 01       	movw	r14, r18
 59e:	8a 01       	movw	r16, r20
 5a0:	e6 28       	or	r14, r6
 5a2:	f7 28       	or	r15, r7
 5a4:	08 29       	or	r16, r8
 5a6:	19 29       	or	r17, r9
 5a8:	3c c0       	rjmp	.+120    	; 0x622 <_fpadd_parts+0x192>
 5aa:	23 2b       	or	r18, r19
 5ac:	d1 f1       	breq	.+116    	; 0x622 <_fpadd_parts+0x192>
 5ae:	26 0e       	add	r2, r22
 5b0:	37 1e       	adc	r3, r23
 5b2:	35 01       	movw	r6, r10
 5b4:	46 01       	movw	r8, r12
 5b6:	06 2e       	mov	r0, r22
 5b8:	04 c0       	rjmp	.+8      	; 0x5c2 <_fpadd_parts+0x132>
 5ba:	96 94       	lsr	r9
 5bc:	87 94       	ror	r8
 5be:	77 94       	ror	r7
 5c0:	67 94       	ror	r6
 5c2:	0a 94       	dec	r0
 5c4:	d2 f7       	brpl	.-12     	; 0x5ba <_fpadd_parts+0x12a>
 5c6:	21 e0       	ldi	r18, 0x01	; 1
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	40 e0       	ldi	r20, 0x00	; 0
 5cc:	50 e0       	ldi	r21, 0x00	; 0
 5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <_fpadd_parts+0x148>
 5d0:	22 0f       	add	r18, r18
 5d2:	33 1f       	adc	r19, r19
 5d4:	44 1f       	adc	r20, r20
 5d6:	55 1f       	adc	r21, r21
 5d8:	6a 95       	dec	r22
 5da:	d2 f7       	brpl	.-12     	; 0x5d0 <_fpadd_parts+0x140>
 5dc:	21 50       	subi	r18, 0x01	; 1
 5de:	30 40       	sbci	r19, 0x00	; 0
 5e0:	40 40       	sbci	r20, 0x00	; 0
 5e2:	50 40       	sbci	r21, 0x00	; 0
 5e4:	2a 21       	and	r18, r10
 5e6:	3b 21       	and	r19, r11
 5e8:	4c 21       	and	r20, r12
 5ea:	5d 21       	and	r21, r13
 5ec:	21 15       	cp	r18, r1
 5ee:	31 05       	cpc	r19, r1
 5f0:	41 05       	cpc	r20, r1
 5f2:	51 05       	cpc	r21, r1
 5f4:	21 f0       	breq	.+8      	; 0x5fe <_fpadd_parts+0x16e>
 5f6:	21 e0       	ldi	r18, 0x01	; 1
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	59 01       	movw	r10, r18
 600:	6a 01       	movw	r12, r20
 602:	a6 28       	or	r10, r6
 604:	b7 28       	or	r11, r7
 606:	c8 28       	or	r12, r8
 608:	d9 28       	or	r13, r9
 60a:	0b c0       	rjmp	.+22     	; 0x622 <_fpadd_parts+0x192>
 60c:	82 15       	cp	r24, r2
 60e:	93 05       	cpc	r25, r3
 610:	2c f0       	brlt	.+10     	; 0x61c <_fpadd_parts+0x18c>
 612:	1c 01       	movw	r2, r24
 614:	aa 24       	eor	r10, r10
 616:	bb 24       	eor	r11, r11
 618:	65 01       	movw	r12, r10
 61a:	03 c0       	rjmp	.+6      	; 0x622 <_fpadd_parts+0x192>
 61c:	ee 24       	eor	r14, r14
 61e:	ff 24       	eor	r15, r15
 620:	87 01       	movw	r16, r14
 622:	11 96       	adiw	r26, 0x01	; 1
 624:	9c 91       	ld	r25, X
 626:	d2 01       	movw	r26, r4
 628:	11 96       	adiw	r26, 0x01	; 1
 62a:	8c 91       	ld	r24, X
 62c:	98 17       	cp	r25, r24
 62e:	09 f4       	brne	.+2      	; 0x632 <_fpadd_parts+0x1a2>
 630:	45 c0       	rjmp	.+138    	; 0x6bc <_fpadd_parts+0x22c>
 632:	99 23       	and	r25, r25
 634:	39 f0       	breq	.+14     	; 0x644 <_fpadd_parts+0x1b4>
 636:	a8 01       	movw	r20, r16
 638:	97 01       	movw	r18, r14
 63a:	2a 19       	sub	r18, r10
 63c:	3b 09       	sbc	r19, r11
 63e:	4c 09       	sbc	r20, r12
 640:	5d 09       	sbc	r21, r13
 642:	06 c0       	rjmp	.+12     	; 0x650 <_fpadd_parts+0x1c0>
 644:	a6 01       	movw	r20, r12
 646:	95 01       	movw	r18, r10
 648:	2e 19       	sub	r18, r14
 64a:	3f 09       	sbc	r19, r15
 64c:	40 0b       	sbc	r20, r16
 64e:	51 0b       	sbc	r21, r17
 650:	57 fd       	sbrc	r21, 7
 652:	08 c0       	rjmp	.+16     	; 0x664 <_fpadd_parts+0x1d4>
 654:	11 82       	std	Z+1, r1	; 0x01
 656:	33 82       	std	Z+3, r3	; 0x03
 658:	22 82       	std	Z+2, r2	; 0x02
 65a:	24 83       	std	Z+4, r18	; 0x04
 65c:	35 83       	std	Z+5, r19	; 0x05
 65e:	46 83       	std	Z+6, r20	; 0x06
 660:	57 83       	std	Z+7, r21	; 0x07
 662:	1d c0       	rjmp	.+58     	; 0x69e <_fpadd_parts+0x20e>
 664:	81 e0       	ldi	r24, 0x01	; 1
 666:	81 83       	std	Z+1, r24	; 0x01
 668:	33 82       	std	Z+3, r3	; 0x03
 66a:	22 82       	std	Z+2, r2	; 0x02
 66c:	88 27       	eor	r24, r24
 66e:	99 27       	eor	r25, r25
 670:	dc 01       	movw	r26, r24
 672:	82 1b       	sub	r24, r18
 674:	93 0b       	sbc	r25, r19
 676:	a4 0b       	sbc	r26, r20
 678:	b5 0b       	sbc	r27, r21
 67a:	84 83       	std	Z+4, r24	; 0x04
 67c:	95 83       	std	Z+5, r25	; 0x05
 67e:	a6 83       	std	Z+6, r26	; 0x06
 680:	b7 83       	std	Z+7, r27	; 0x07
 682:	0d c0       	rjmp	.+26     	; 0x69e <_fpadd_parts+0x20e>
 684:	22 0f       	add	r18, r18
 686:	33 1f       	adc	r19, r19
 688:	44 1f       	adc	r20, r20
 68a:	55 1f       	adc	r21, r21
 68c:	24 83       	std	Z+4, r18	; 0x04
 68e:	35 83       	std	Z+5, r19	; 0x05
 690:	46 83       	std	Z+6, r20	; 0x06
 692:	57 83       	std	Z+7, r21	; 0x07
 694:	82 81       	ldd	r24, Z+2	; 0x02
 696:	93 81       	ldd	r25, Z+3	; 0x03
 698:	01 97       	sbiw	r24, 0x01	; 1
 69a:	93 83       	std	Z+3, r25	; 0x03
 69c:	82 83       	std	Z+2, r24	; 0x02
 69e:	24 81       	ldd	r18, Z+4	; 0x04
 6a0:	35 81       	ldd	r19, Z+5	; 0x05
 6a2:	46 81       	ldd	r20, Z+6	; 0x06
 6a4:	57 81       	ldd	r21, Z+7	; 0x07
 6a6:	da 01       	movw	r26, r20
 6a8:	c9 01       	movw	r24, r18
 6aa:	01 97       	sbiw	r24, 0x01	; 1
 6ac:	a1 09       	sbc	r26, r1
 6ae:	b1 09       	sbc	r27, r1
 6b0:	8f 5f       	subi	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	af 4f       	sbci	r26, 0xFF	; 255
 6b6:	bf 43       	sbci	r27, 0x3F	; 63
 6b8:	28 f3       	brcs	.-54     	; 0x684 <_fpadd_parts+0x1f4>
 6ba:	0b c0       	rjmp	.+22     	; 0x6d2 <_fpadd_parts+0x242>
 6bc:	91 83       	std	Z+1, r25	; 0x01
 6be:	33 82       	std	Z+3, r3	; 0x03
 6c0:	22 82       	std	Z+2, r2	; 0x02
 6c2:	ea 0c       	add	r14, r10
 6c4:	fb 1c       	adc	r15, r11
 6c6:	0c 1d       	adc	r16, r12
 6c8:	1d 1d       	adc	r17, r13
 6ca:	e4 82       	std	Z+4, r14	; 0x04
 6cc:	f5 82       	std	Z+5, r15	; 0x05
 6ce:	06 83       	std	Z+6, r16	; 0x06
 6d0:	17 83       	std	Z+7, r17	; 0x07
 6d2:	83 e0       	ldi	r24, 0x03	; 3
 6d4:	80 83       	st	Z, r24
 6d6:	24 81       	ldd	r18, Z+4	; 0x04
 6d8:	35 81       	ldd	r19, Z+5	; 0x05
 6da:	46 81       	ldd	r20, Z+6	; 0x06
 6dc:	57 81       	ldd	r21, Z+7	; 0x07
 6de:	57 ff       	sbrs	r21, 7
 6e0:	1a c0       	rjmp	.+52     	; 0x716 <_fpadd_parts+0x286>
 6e2:	c9 01       	movw	r24, r18
 6e4:	aa 27       	eor	r26, r26
 6e6:	97 fd       	sbrc	r25, 7
 6e8:	a0 95       	com	r26
 6ea:	ba 2f       	mov	r27, r26
 6ec:	81 70       	andi	r24, 0x01	; 1
 6ee:	90 70       	andi	r25, 0x00	; 0
 6f0:	a0 70       	andi	r26, 0x00	; 0
 6f2:	b0 70       	andi	r27, 0x00	; 0
 6f4:	56 95       	lsr	r21
 6f6:	47 95       	ror	r20
 6f8:	37 95       	ror	r19
 6fa:	27 95       	ror	r18
 6fc:	82 2b       	or	r24, r18
 6fe:	93 2b       	or	r25, r19
 700:	a4 2b       	or	r26, r20
 702:	b5 2b       	or	r27, r21
 704:	84 83       	std	Z+4, r24	; 0x04
 706:	95 83       	std	Z+5, r25	; 0x05
 708:	a6 83       	std	Z+6, r26	; 0x06
 70a:	b7 83       	std	Z+7, r27	; 0x07
 70c:	82 81       	ldd	r24, Z+2	; 0x02
 70e:	93 81       	ldd	r25, Z+3	; 0x03
 710:	01 96       	adiw	r24, 0x01	; 1
 712:	93 83       	std	Z+3, r25	; 0x03
 714:	82 83       	std	Z+2, r24	; 0x02
 716:	df 01       	movw	r26, r30
 718:	01 c0       	rjmp	.+2      	; 0x71c <_fpadd_parts+0x28c>
 71a:	d2 01       	movw	r26, r4
 71c:	cd 01       	movw	r24, r26
 71e:	cd b7       	in	r28, 0x3d	; 61
 720:	de b7       	in	r29, 0x3e	; 62
 722:	e2 e1       	ldi	r30, 0x12	; 18
 724:	0c 94 01 07 	jmp	0xe02	; 0xe02 <__epilogue_restores__>

00000728 <__subsf3>:
 728:	a0 e2       	ldi	r26, 0x20	; 32
 72a:	b0 e0       	ldi	r27, 0x00	; 0
 72c:	ea e9       	ldi	r30, 0x9A	; 154
 72e:	f3 e0       	ldi	r31, 0x03	; 3
 730:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <__prologue_saves__+0x18>
 734:	69 83       	std	Y+1, r22	; 0x01
 736:	7a 83       	std	Y+2, r23	; 0x02
 738:	8b 83       	std	Y+3, r24	; 0x03
 73a:	9c 83       	std	Y+4, r25	; 0x04
 73c:	2d 83       	std	Y+5, r18	; 0x05
 73e:	3e 83       	std	Y+6, r19	; 0x06
 740:	4f 83       	std	Y+7, r20	; 0x07
 742:	58 87       	std	Y+8, r21	; 0x08
 744:	e9 e0       	ldi	r30, 0x09	; 9
 746:	ee 2e       	mov	r14, r30
 748:	f1 2c       	mov	r15, r1
 74a:	ec 0e       	add	r14, r28
 74c:	fd 1e       	adc	r15, r29
 74e:	ce 01       	movw	r24, r28
 750:	01 96       	adiw	r24, 0x01	; 1
 752:	b7 01       	movw	r22, r14
 754:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 758:	8e 01       	movw	r16, r28
 75a:	0f 5e       	subi	r16, 0xEF	; 239
 75c:	1f 4f       	sbci	r17, 0xFF	; 255
 75e:	ce 01       	movw	r24, r28
 760:	05 96       	adiw	r24, 0x05	; 5
 762:	b8 01       	movw	r22, r16
 764:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 768:	8a 89       	ldd	r24, Y+18	; 0x12
 76a:	91 e0       	ldi	r25, 0x01	; 1
 76c:	89 27       	eor	r24, r25
 76e:	8a 8b       	std	Y+18, r24	; 0x12
 770:	c7 01       	movw	r24, r14
 772:	b8 01       	movw	r22, r16
 774:	ae 01       	movw	r20, r28
 776:	47 5e       	subi	r20, 0xE7	; 231
 778:	5f 4f       	sbci	r21, 0xFF	; 255
 77a:	0e 94 48 02 	call	0x490	; 0x490 <_fpadd_parts>
 77e:	0e 94 98 05 	call	0xb30	; 0xb30 <__pack_f>
 782:	a0 96       	adiw	r28, 0x20	; 32
 784:	e6 e0       	ldi	r30, 0x06	; 6
 786:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__epilogue_restores__+0x18>

0000078a <__addsf3>:
 78a:	a0 e2       	ldi	r26, 0x20	; 32
 78c:	b0 e0       	ldi	r27, 0x00	; 0
 78e:	eb ec       	ldi	r30, 0xCB	; 203
 790:	f3 e0       	ldi	r31, 0x03	; 3
 792:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <__prologue_saves__+0x18>
 796:	69 83       	std	Y+1, r22	; 0x01
 798:	7a 83       	std	Y+2, r23	; 0x02
 79a:	8b 83       	std	Y+3, r24	; 0x03
 79c:	9c 83       	std	Y+4, r25	; 0x04
 79e:	2d 83       	std	Y+5, r18	; 0x05
 7a0:	3e 83       	std	Y+6, r19	; 0x06
 7a2:	4f 83       	std	Y+7, r20	; 0x07
 7a4:	58 87       	std	Y+8, r21	; 0x08
 7a6:	f9 e0       	ldi	r31, 0x09	; 9
 7a8:	ef 2e       	mov	r14, r31
 7aa:	f1 2c       	mov	r15, r1
 7ac:	ec 0e       	add	r14, r28
 7ae:	fd 1e       	adc	r15, r29
 7b0:	ce 01       	movw	r24, r28
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	b7 01       	movw	r22, r14
 7b6:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 7ba:	8e 01       	movw	r16, r28
 7bc:	0f 5e       	subi	r16, 0xEF	; 239
 7be:	1f 4f       	sbci	r17, 0xFF	; 255
 7c0:	ce 01       	movw	r24, r28
 7c2:	05 96       	adiw	r24, 0x05	; 5
 7c4:	b8 01       	movw	r22, r16
 7c6:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 7ca:	c7 01       	movw	r24, r14
 7cc:	b8 01       	movw	r22, r16
 7ce:	ae 01       	movw	r20, r28
 7d0:	47 5e       	subi	r20, 0xE7	; 231
 7d2:	5f 4f       	sbci	r21, 0xFF	; 255
 7d4:	0e 94 48 02 	call	0x490	; 0x490 <_fpadd_parts>
 7d8:	0e 94 98 05 	call	0xb30	; 0xb30 <__pack_f>
 7dc:	a0 96       	adiw	r28, 0x20	; 32
 7de:	e6 e0       	ldi	r30, 0x06	; 6
 7e0:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__epilogue_restores__+0x18>

000007e4 <__mulsf3>:
 7e4:	a0 e2       	ldi	r26, 0x20	; 32
 7e6:	b0 e0       	ldi	r27, 0x00	; 0
 7e8:	e8 ef       	ldi	r30, 0xF8	; 248
 7ea:	f3 e0       	ldi	r31, 0x03	; 3
 7ec:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__prologue_saves__>
 7f0:	69 83       	std	Y+1, r22	; 0x01
 7f2:	7a 83       	std	Y+2, r23	; 0x02
 7f4:	8b 83       	std	Y+3, r24	; 0x03
 7f6:	9c 83       	std	Y+4, r25	; 0x04
 7f8:	2d 83       	std	Y+5, r18	; 0x05
 7fa:	3e 83       	std	Y+6, r19	; 0x06
 7fc:	4f 83       	std	Y+7, r20	; 0x07
 7fe:	58 87       	std	Y+8, r21	; 0x08
 800:	ce 01       	movw	r24, r28
 802:	01 96       	adiw	r24, 0x01	; 1
 804:	be 01       	movw	r22, r28
 806:	67 5f       	subi	r22, 0xF7	; 247
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 80e:	ce 01       	movw	r24, r28
 810:	05 96       	adiw	r24, 0x05	; 5
 812:	be 01       	movw	r22, r28
 814:	6f 5e       	subi	r22, 0xEF	; 239
 816:	7f 4f       	sbci	r23, 0xFF	; 255
 818:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 81c:	99 85       	ldd	r25, Y+9	; 0x09
 81e:	92 30       	cpi	r25, 0x02	; 2
 820:	88 f0       	brcs	.+34     	; 0x844 <__mulsf3+0x60>
 822:	89 89       	ldd	r24, Y+17	; 0x11
 824:	82 30       	cpi	r24, 0x02	; 2
 826:	c8 f0       	brcs	.+50     	; 0x85a <__mulsf3+0x76>
 828:	94 30       	cpi	r25, 0x04	; 4
 82a:	19 f4       	brne	.+6      	; 0x832 <__mulsf3+0x4e>
 82c:	82 30       	cpi	r24, 0x02	; 2
 82e:	51 f4       	brne	.+20     	; 0x844 <__mulsf3+0x60>
 830:	04 c0       	rjmp	.+8      	; 0x83a <__mulsf3+0x56>
 832:	84 30       	cpi	r24, 0x04	; 4
 834:	29 f4       	brne	.+10     	; 0x840 <__mulsf3+0x5c>
 836:	92 30       	cpi	r25, 0x02	; 2
 838:	81 f4       	brne	.+32     	; 0x85a <__mulsf3+0x76>
 83a:	80 e0       	ldi	r24, 0x00	; 0
 83c:	91 e0       	ldi	r25, 0x01	; 1
 83e:	c6 c0       	rjmp	.+396    	; 0x9cc <__stack+0xcd>
 840:	92 30       	cpi	r25, 0x02	; 2
 842:	49 f4       	brne	.+18     	; 0x856 <__mulsf3+0x72>
 844:	20 e0       	ldi	r18, 0x00	; 0
 846:	9a 85       	ldd	r25, Y+10	; 0x0a
 848:	8a 89       	ldd	r24, Y+18	; 0x12
 84a:	98 13       	cpse	r25, r24
 84c:	21 e0       	ldi	r18, 0x01	; 1
 84e:	2a 87       	std	Y+10, r18	; 0x0a
 850:	ce 01       	movw	r24, r28
 852:	09 96       	adiw	r24, 0x09	; 9
 854:	bb c0       	rjmp	.+374    	; 0x9cc <__stack+0xcd>
 856:	82 30       	cpi	r24, 0x02	; 2
 858:	49 f4       	brne	.+18     	; 0x86c <__mulsf3+0x88>
 85a:	20 e0       	ldi	r18, 0x00	; 0
 85c:	9a 85       	ldd	r25, Y+10	; 0x0a
 85e:	8a 89       	ldd	r24, Y+18	; 0x12
 860:	98 13       	cpse	r25, r24
 862:	21 e0       	ldi	r18, 0x01	; 1
 864:	2a 8b       	std	Y+18, r18	; 0x12
 866:	ce 01       	movw	r24, r28
 868:	41 96       	adiw	r24, 0x11	; 17
 86a:	b0 c0       	rjmp	.+352    	; 0x9cc <__stack+0xcd>
 86c:	2d 84       	ldd	r2, Y+13	; 0x0d
 86e:	3e 84       	ldd	r3, Y+14	; 0x0e
 870:	4f 84       	ldd	r4, Y+15	; 0x0f
 872:	58 88       	ldd	r5, Y+16	; 0x10
 874:	6d 88       	ldd	r6, Y+21	; 0x15
 876:	7e 88       	ldd	r7, Y+22	; 0x16
 878:	8f 88       	ldd	r8, Y+23	; 0x17
 87a:	98 8c       	ldd	r9, Y+24	; 0x18
 87c:	ee 24       	eor	r14, r14
 87e:	ff 24       	eor	r15, r15
 880:	87 01       	movw	r16, r14
 882:	aa 24       	eor	r10, r10
 884:	bb 24       	eor	r11, r11
 886:	65 01       	movw	r12, r10
 888:	40 e0       	ldi	r20, 0x00	; 0
 88a:	50 e0       	ldi	r21, 0x00	; 0
 88c:	60 e0       	ldi	r22, 0x00	; 0
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	e0 e0       	ldi	r30, 0x00	; 0
 892:	f0 e0       	ldi	r31, 0x00	; 0
 894:	c1 01       	movw	r24, r2
 896:	81 70       	andi	r24, 0x01	; 1
 898:	90 70       	andi	r25, 0x00	; 0
 89a:	89 2b       	or	r24, r25
 89c:	e9 f0       	breq	.+58     	; 0x8d8 <__mulsf3+0xf4>
 89e:	e6 0c       	add	r14, r6
 8a0:	f7 1c       	adc	r15, r7
 8a2:	08 1d       	adc	r16, r8
 8a4:	19 1d       	adc	r17, r9
 8a6:	9a 01       	movw	r18, r20
 8a8:	ab 01       	movw	r20, r22
 8aa:	2a 0d       	add	r18, r10
 8ac:	3b 1d       	adc	r19, r11
 8ae:	4c 1d       	adc	r20, r12
 8b0:	5d 1d       	adc	r21, r13
 8b2:	80 e0       	ldi	r24, 0x00	; 0
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	a0 e0       	ldi	r26, 0x00	; 0
 8b8:	b0 e0       	ldi	r27, 0x00	; 0
 8ba:	e6 14       	cp	r14, r6
 8bc:	f7 04       	cpc	r15, r7
 8be:	08 05       	cpc	r16, r8
 8c0:	19 05       	cpc	r17, r9
 8c2:	20 f4       	brcc	.+8      	; 0x8cc <__mulsf3+0xe8>
 8c4:	81 e0       	ldi	r24, 0x01	; 1
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	a0 e0       	ldi	r26, 0x00	; 0
 8ca:	b0 e0       	ldi	r27, 0x00	; 0
 8cc:	ba 01       	movw	r22, r20
 8ce:	a9 01       	movw	r20, r18
 8d0:	48 0f       	add	r20, r24
 8d2:	59 1f       	adc	r21, r25
 8d4:	6a 1f       	adc	r22, r26
 8d6:	7b 1f       	adc	r23, r27
 8d8:	aa 0c       	add	r10, r10
 8da:	bb 1c       	adc	r11, r11
 8dc:	cc 1c       	adc	r12, r12
 8de:	dd 1c       	adc	r13, r13
 8e0:	97 fe       	sbrs	r9, 7
 8e2:	08 c0       	rjmp	.+16     	; 0x8f4 <__mulsf3+0x110>
 8e4:	81 e0       	ldi	r24, 0x01	; 1
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	a0 e0       	ldi	r26, 0x00	; 0
 8ea:	b0 e0       	ldi	r27, 0x00	; 0
 8ec:	a8 2a       	or	r10, r24
 8ee:	b9 2a       	or	r11, r25
 8f0:	ca 2a       	or	r12, r26
 8f2:	db 2a       	or	r13, r27
 8f4:	31 96       	adiw	r30, 0x01	; 1
 8f6:	e0 32       	cpi	r30, 0x20	; 32
 8f8:	f1 05       	cpc	r31, r1
 8fa:	49 f0       	breq	.+18     	; 0x90e <__stack+0xf>
 8fc:	66 0c       	add	r6, r6
 8fe:	77 1c       	adc	r7, r7
 900:	88 1c       	adc	r8, r8
 902:	99 1c       	adc	r9, r9
 904:	56 94       	lsr	r5
 906:	47 94       	ror	r4
 908:	37 94       	ror	r3
 90a:	27 94       	ror	r2
 90c:	c3 cf       	rjmp	.-122    	; 0x894 <__mulsf3+0xb0>
 90e:	fa 85       	ldd	r31, Y+10	; 0x0a
 910:	ea 89       	ldd	r30, Y+18	; 0x12
 912:	2b 89       	ldd	r18, Y+19	; 0x13
 914:	3c 89       	ldd	r19, Y+20	; 0x14
 916:	8b 85       	ldd	r24, Y+11	; 0x0b
 918:	9c 85       	ldd	r25, Y+12	; 0x0c
 91a:	28 0f       	add	r18, r24
 91c:	39 1f       	adc	r19, r25
 91e:	2e 5f       	subi	r18, 0xFE	; 254
 920:	3f 4f       	sbci	r19, 0xFF	; 255
 922:	17 c0       	rjmp	.+46     	; 0x952 <__stack+0x53>
 924:	ca 01       	movw	r24, r20
 926:	81 70       	andi	r24, 0x01	; 1
 928:	90 70       	andi	r25, 0x00	; 0
 92a:	89 2b       	or	r24, r25
 92c:	61 f0       	breq	.+24     	; 0x946 <__stack+0x47>
 92e:	16 95       	lsr	r17
 930:	07 95       	ror	r16
 932:	f7 94       	ror	r15
 934:	e7 94       	ror	r14
 936:	80 e0       	ldi	r24, 0x00	; 0
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	a0 e0       	ldi	r26, 0x00	; 0
 93c:	b0 e8       	ldi	r27, 0x80	; 128
 93e:	e8 2a       	or	r14, r24
 940:	f9 2a       	or	r15, r25
 942:	0a 2b       	or	r16, r26
 944:	1b 2b       	or	r17, r27
 946:	76 95       	lsr	r23
 948:	67 95       	ror	r22
 94a:	57 95       	ror	r21
 94c:	47 95       	ror	r20
 94e:	2f 5f       	subi	r18, 0xFF	; 255
 950:	3f 4f       	sbci	r19, 0xFF	; 255
 952:	77 fd       	sbrc	r23, 7
 954:	e7 cf       	rjmp	.-50     	; 0x924 <__stack+0x25>
 956:	0c c0       	rjmp	.+24     	; 0x970 <__stack+0x71>
 958:	44 0f       	add	r20, r20
 95a:	55 1f       	adc	r21, r21
 95c:	66 1f       	adc	r22, r22
 95e:	77 1f       	adc	r23, r23
 960:	17 fd       	sbrc	r17, 7
 962:	41 60       	ori	r20, 0x01	; 1
 964:	ee 0c       	add	r14, r14
 966:	ff 1c       	adc	r15, r15
 968:	00 1f       	adc	r16, r16
 96a:	11 1f       	adc	r17, r17
 96c:	21 50       	subi	r18, 0x01	; 1
 96e:	30 40       	sbci	r19, 0x00	; 0
 970:	40 30       	cpi	r20, 0x00	; 0
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	59 07       	cpc	r21, r25
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	69 07       	cpc	r22, r25
 97a:	90 e4       	ldi	r25, 0x40	; 64
 97c:	79 07       	cpc	r23, r25
 97e:	60 f3       	brcs	.-40     	; 0x958 <__stack+0x59>
 980:	2b 8f       	std	Y+27, r18	; 0x1b
 982:	3c 8f       	std	Y+28, r19	; 0x1c
 984:	db 01       	movw	r26, r22
 986:	ca 01       	movw	r24, r20
 988:	8f 77       	andi	r24, 0x7F	; 127
 98a:	90 70       	andi	r25, 0x00	; 0
 98c:	a0 70       	andi	r26, 0x00	; 0
 98e:	b0 70       	andi	r27, 0x00	; 0
 990:	80 34       	cpi	r24, 0x40	; 64
 992:	91 05       	cpc	r25, r1
 994:	a1 05       	cpc	r26, r1
 996:	b1 05       	cpc	r27, r1
 998:	61 f4       	brne	.+24     	; 0x9b2 <__stack+0xb3>
 99a:	47 fd       	sbrc	r20, 7
 99c:	0a c0       	rjmp	.+20     	; 0x9b2 <__stack+0xb3>
 99e:	e1 14       	cp	r14, r1
 9a0:	f1 04       	cpc	r15, r1
 9a2:	01 05       	cpc	r16, r1
 9a4:	11 05       	cpc	r17, r1
 9a6:	29 f0       	breq	.+10     	; 0x9b2 <__stack+0xb3>
 9a8:	40 5c       	subi	r20, 0xC0	; 192
 9aa:	5f 4f       	sbci	r21, 0xFF	; 255
 9ac:	6f 4f       	sbci	r22, 0xFF	; 255
 9ae:	7f 4f       	sbci	r23, 0xFF	; 255
 9b0:	40 78       	andi	r20, 0x80	; 128
 9b2:	1a 8e       	std	Y+26, r1	; 0x1a
 9b4:	fe 17       	cp	r31, r30
 9b6:	11 f0       	breq	.+4      	; 0x9bc <__stack+0xbd>
 9b8:	81 e0       	ldi	r24, 0x01	; 1
 9ba:	8a 8f       	std	Y+26, r24	; 0x1a
 9bc:	4d 8f       	std	Y+29, r20	; 0x1d
 9be:	5e 8f       	std	Y+30, r21	; 0x1e
 9c0:	6f 8f       	std	Y+31, r22	; 0x1f
 9c2:	78 a3       	std	Y+32, r23	; 0x20
 9c4:	83 e0       	ldi	r24, 0x03	; 3
 9c6:	89 8f       	std	Y+25, r24	; 0x19
 9c8:	ce 01       	movw	r24, r28
 9ca:	49 96       	adiw	r24, 0x19	; 25
 9cc:	0e 94 98 05 	call	0xb30	; 0xb30 <__pack_f>
 9d0:	a0 96       	adiw	r28, 0x20	; 32
 9d2:	e2 e1       	ldi	r30, 0x12	; 18
 9d4:	0c 94 01 07 	jmp	0xe02	; 0xe02 <__epilogue_restores__>

000009d8 <__divsf3>:
 9d8:	a8 e1       	ldi	r26, 0x18	; 24
 9da:	b0 e0       	ldi	r27, 0x00	; 0
 9dc:	e2 ef       	ldi	r30, 0xF2	; 242
 9de:	f4 e0       	ldi	r31, 0x04	; 4
 9e0:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__prologue_saves__+0x10>
 9e4:	69 83       	std	Y+1, r22	; 0x01
 9e6:	7a 83       	std	Y+2, r23	; 0x02
 9e8:	8b 83       	std	Y+3, r24	; 0x03
 9ea:	9c 83       	std	Y+4, r25	; 0x04
 9ec:	2d 83       	std	Y+5, r18	; 0x05
 9ee:	3e 83       	std	Y+6, r19	; 0x06
 9f0:	4f 83       	std	Y+7, r20	; 0x07
 9f2:	58 87       	std	Y+8, r21	; 0x08
 9f4:	b9 e0       	ldi	r27, 0x09	; 9
 9f6:	eb 2e       	mov	r14, r27
 9f8:	f1 2c       	mov	r15, r1
 9fa:	ec 0e       	add	r14, r28
 9fc:	fd 1e       	adc	r15, r29
 9fe:	ce 01       	movw	r24, r28
 a00:	01 96       	adiw	r24, 0x01	; 1
 a02:	b7 01       	movw	r22, r14
 a04:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 a08:	8e 01       	movw	r16, r28
 a0a:	0f 5e       	subi	r16, 0xEF	; 239
 a0c:	1f 4f       	sbci	r17, 0xFF	; 255
 a0e:	ce 01       	movw	r24, r28
 a10:	05 96       	adiw	r24, 0x05	; 5
 a12:	b8 01       	movw	r22, r16
 a14:	0e 94 6d 06 	call	0xcda	; 0xcda <__unpack_f>
 a18:	29 85       	ldd	r18, Y+9	; 0x09
 a1a:	22 30       	cpi	r18, 0x02	; 2
 a1c:	08 f4       	brcc	.+2      	; 0xa20 <__divsf3+0x48>
 a1e:	7e c0       	rjmp	.+252    	; 0xb1c <__divsf3+0x144>
 a20:	39 89       	ldd	r19, Y+17	; 0x11
 a22:	32 30       	cpi	r19, 0x02	; 2
 a24:	10 f4       	brcc	.+4      	; 0xa2a <__divsf3+0x52>
 a26:	b8 01       	movw	r22, r16
 a28:	7c c0       	rjmp	.+248    	; 0xb22 <__divsf3+0x14a>
 a2a:	8a 85       	ldd	r24, Y+10	; 0x0a
 a2c:	9a 89       	ldd	r25, Y+18	; 0x12
 a2e:	89 27       	eor	r24, r25
 a30:	8a 87       	std	Y+10, r24	; 0x0a
 a32:	24 30       	cpi	r18, 0x04	; 4
 a34:	11 f0       	breq	.+4      	; 0xa3a <__divsf3+0x62>
 a36:	22 30       	cpi	r18, 0x02	; 2
 a38:	31 f4       	brne	.+12     	; 0xa46 <__divsf3+0x6e>
 a3a:	23 17       	cp	r18, r19
 a3c:	09 f0       	breq	.+2      	; 0xa40 <__divsf3+0x68>
 a3e:	6e c0       	rjmp	.+220    	; 0xb1c <__divsf3+0x144>
 a40:	60 e0       	ldi	r22, 0x00	; 0
 a42:	71 e0       	ldi	r23, 0x01	; 1
 a44:	6e c0       	rjmp	.+220    	; 0xb22 <__divsf3+0x14a>
 a46:	34 30       	cpi	r19, 0x04	; 4
 a48:	39 f4       	brne	.+14     	; 0xa58 <__divsf3+0x80>
 a4a:	1d 86       	std	Y+13, r1	; 0x0d
 a4c:	1e 86       	std	Y+14, r1	; 0x0e
 a4e:	1f 86       	std	Y+15, r1	; 0x0f
 a50:	18 8a       	std	Y+16, r1	; 0x10
 a52:	1c 86       	std	Y+12, r1	; 0x0c
 a54:	1b 86       	std	Y+11, r1	; 0x0b
 a56:	04 c0       	rjmp	.+8      	; 0xa60 <__divsf3+0x88>
 a58:	32 30       	cpi	r19, 0x02	; 2
 a5a:	21 f4       	brne	.+8      	; 0xa64 <__divsf3+0x8c>
 a5c:	84 e0       	ldi	r24, 0x04	; 4
 a5e:	89 87       	std	Y+9, r24	; 0x09
 a60:	b7 01       	movw	r22, r14
 a62:	5f c0       	rjmp	.+190    	; 0xb22 <__divsf3+0x14a>
 a64:	2b 85       	ldd	r18, Y+11	; 0x0b
 a66:	3c 85       	ldd	r19, Y+12	; 0x0c
 a68:	8b 89       	ldd	r24, Y+19	; 0x13
 a6a:	9c 89       	ldd	r25, Y+20	; 0x14
 a6c:	28 1b       	sub	r18, r24
 a6e:	39 0b       	sbc	r19, r25
 a70:	3c 87       	std	Y+12, r19	; 0x0c
 a72:	2b 87       	std	Y+11, r18	; 0x0b
 a74:	ed 84       	ldd	r14, Y+13	; 0x0d
 a76:	fe 84       	ldd	r15, Y+14	; 0x0e
 a78:	0f 85       	ldd	r16, Y+15	; 0x0f
 a7a:	18 89       	ldd	r17, Y+16	; 0x10
 a7c:	ad 88       	ldd	r10, Y+21	; 0x15
 a7e:	be 88       	ldd	r11, Y+22	; 0x16
 a80:	cf 88       	ldd	r12, Y+23	; 0x17
 a82:	d8 8c       	ldd	r13, Y+24	; 0x18
 a84:	ea 14       	cp	r14, r10
 a86:	fb 04       	cpc	r15, r11
 a88:	0c 05       	cpc	r16, r12
 a8a:	1d 05       	cpc	r17, r13
 a8c:	40 f4       	brcc	.+16     	; 0xa9e <__divsf3+0xc6>
 a8e:	ee 0c       	add	r14, r14
 a90:	ff 1c       	adc	r15, r15
 a92:	00 1f       	adc	r16, r16
 a94:	11 1f       	adc	r17, r17
 a96:	21 50       	subi	r18, 0x01	; 1
 a98:	30 40       	sbci	r19, 0x00	; 0
 a9a:	3c 87       	std	Y+12, r19	; 0x0c
 a9c:	2b 87       	std	Y+11, r18	; 0x0b
 a9e:	20 e0       	ldi	r18, 0x00	; 0
 aa0:	30 e0       	ldi	r19, 0x00	; 0
 aa2:	40 e0       	ldi	r20, 0x00	; 0
 aa4:	50 e0       	ldi	r21, 0x00	; 0
 aa6:	80 e0       	ldi	r24, 0x00	; 0
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	a0 e0       	ldi	r26, 0x00	; 0
 aac:	b0 e4       	ldi	r27, 0x40	; 64
 aae:	60 e0       	ldi	r22, 0x00	; 0
 ab0:	70 e0       	ldi	r23, 0x00	; 0
 ab2:	ea 14       	cp	r14, r10
 ab4:	fb 04       	cpc	r15, r11
 ab6:	0c 05       	cpc	r16, r12
 ab8:	1d 05       	cpc	r17, r13
 aba:	40 f0       	brcs	.+16     	; 0xacc <__divsf3+0xf4>
 abc:	28 2b       	or	r18, r24
 abe:	39 2b       	or	r19, r25
 ac0:	4a 2b       	or	r20, r26
 ac2:	5b 2b       	or	r21, r27
 ac4:	ea 18       	sub	r14, r10
 ac6:	fb 08       	sbc	r15, r11
 ac8:	0c 09       	sbc	r16, r12
 aca:	1d 09       	sbc	r17, r13
 acc:	b6 95       	lsr	r27
 ace:	a7 95       	ror	r26
 ad0:	97 95       	ror	r25
 ad2:	87 95       	ror	r24
 ad4:	ee 0c       	add	r14, r14
 ad6:	ff 1c       	adc	r15, r15
 ad8:	00 1f       	adc	r16, r16
 ada:	11 1f       	adc	r17, r17
 adc:	6f 5f       	subi	r22, 0xFF	; 255
 ade:	7f 4f       	sbci	r23, 0xFF	; 255
 ae0:	6f 31       	cpi	r22, 0x1F	; 31
 ae2:	71 05       	cpc	r23, r1
 ae4:	31 f7       	brne	.-52     	; 0xab2 <__divsf3+0xda>
 ae6:	da 01       	movw	r26, r20
 ae8:	c9 01       	movw	r24, r18
 aea:	8f 77       	andi	r24, 0x7F	; 127
 aec:	90 70       	andi	r25, 0x00	; 0
 aee:	a0 70       	andi	r26, 0x00	; 0
 af0:	b0 70       	andi	r27, 0x00	; 0
 af2:	80 34       	cpi	r24, 0x40	; 64
 af4:	91 05       	cpc	r25, r1
 af6:	a1 05       	cpc	r26, r1
 af8:	b1 05       	cpc	r27, r1
 afa:	61 f4       	brne	.+24     	; 0xb14 <__divsf3+0x13c>
 afc:	27 fd       	sbrc	r18, 7
 afe:	0a c0       	rjmp	.+20     	; 0xb14 <__divsf3+0x13c>
 b00:	e1 14       	cp	r14, r1
 b02:	f1 04       	cpc	r15, r1
 b04:	01 05       	cpc	r16, r1
 b06:	11 05       	cpc	r17, r1
 b08:	29 f0       	breq	.+10     	; 0xb14 <__divsf3+0x13c>
 b0a:	20 5c       	subi	r18, 0xC0	; 192
 b0c:	3f 4f       	sbci	r19, 0xFF	; 255
 b0e:	4f 4f       	sbci	r20, 0xFF	; 255
 b10:	5f 4f       	sbci	r21, 0xFF	; 255
 b12:	20 78       	andi	r18, 0x80	; 128
 b14:	2d 87       	std	Y+13, r18	; 0x0d
 b16:	3e 87       	std	Y+14, r19	; 0x0e
 b18:	4f 87       	std	Y+15, r20	; 0x0f
 b1a:	58 8b       	std	Y+16, r21	; 0x10
 b1c:	be 01       	movw	r22, r28
 b1e:	67 5f       	subi	r22, 0xF7	; 247
 b20:	7f 4f       	sbci	r23, 0xFF	; 255
 b22:	cb 01       	movw	r24, r22
 b24:	0e 94 98 05 	call	0xb30	; 0xb30 <__pack_f>
 b28:	68 96       	adiw	r28, 0x18	; 24
 b2a:	ea e0       	ldi	r30, 0x0A	; 10
 b2c:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__epilogue_restores__+0x10>

00000b30 <__pack_f>:
 b30:	df 92       	push	r13
 b32:	ef 92       	push	r14
 b34:	ff 92       	push	r15
 b36:	0f 93       	push	r16
 b38:	1f 93       	push	r17
 b3a:	fc 01       	movw	r30, r24
 b3c:	e4 80       	ldd	r14, Z+4	; 0x04
 b3e:	f5 80       	ldd	r15, Z+5	; 0x05
 b40:	06 81       	ldd	r16, Z+6	; 0x06
 b42:	17 81       	ldd	r17, Z+7	; 0x07
 b44:	d1 80       	ldd	r13, Z+1	; 0x01
 b46:	80 81       	ld	r24, Z
 b48:	82 30       	cpi	r24, 0x02	; 2
 b4a:	48 f4       	brcc	.+18     	; 0xb5e <__pack_f+0x2e>
 b4c:	80 e0       	ldi	r24, 0x00	; 0
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	a0 e1       	ldi	r26, 0x10	; 16
 b52:	b0 e0       	ldi	r27, 0x00	; 0
 b54:	e8 2a       	or	r14, r24
 b56:	f9 2a       	or	r15, r25
 b58:	0a 2b       	or	r16, r26
 b5a:	1b 2b       	or	r17, r27
 b5c:	a5 c0       	rjmp	.+330    	; 0xca8 <__pack_f+0x178>
 b5e:	84 30       	cpi	r24, 0x04	; 4
 b60:	09 f4       	brne	.+2      	; 0xb64 <__pack_f+0x34>
 b62:	9f c0       	rjmp	.+318    	; 0xca2 <__pack_f+0x172>
 b64:	82 30       	cpi	r24, 0x02	; 2
 b66:	21 f4       	brne	.+8      	; 0xb70 <__pack_f+0x40>
 b68:	ee 24       	eor	r14, r14
 b6a:	ff 24       	eor	r15, r15
 b6c:	87 01       	movw	r16, r14
 b6e:	05 c0       	rjmp	.+10     	; 0xb7a <__pack_f+0x4a>
 b70:	e1 14       	cp	r14, r1
 b72:	f1 04       	cpc	r15, r1
 b74:	01 05       	cpc	r16, r1
 b76:	11 05       	cpc	r17, r1
 b78:	19 f4       	brne	.+6      	; 0xb80 <__pack_f+0x50>
 b7a:	e0 e0       	ldi	r30, 0x00	; 0
 b7c:	f0 e0       	ldi	r31, 0x00	; 0
 b7e:	96 c0       	rjmp	.+300    	; 0xcac <__pack_f+0x17c>
 b80:	62 81       	ldd	r22, Z+2	; 0x02
 b82:	73 81       	ldd	r23, Z+3	; 0x03
 b84:	9f ef       	ldi	r25, 0xFF	; 255
 b86:	62 38       	cpi	r22, 0x82	; 130
 b88:	79 07       	cpc	r23, r25
 b8a:	0c f0       	brlt	.+2      	; 0xb8e <__pack_f+0x5e>
 b8c:	5b c0       	rjmp	.+182    	; 0xc44 <__pack_f+0x114>
 b8e:	22 e8       	ldi	r18, 0x82	; 130
 b90:	3f ef       	ldi	r19, 0xFF	; 255
 b92:	26 1b       	sub	r18, r22
 b94:	37 0b       	sbc	r19, r23
 b96:	2a 31       	cpi	r18, 0x1A	; 26
 b98:	31 05       	cpc	r19, r1
 b9a:	2c f0       	brlt	.+10     	; 0xba6 <__pack_f+0x76>
 b9c:	20 e0       	ldi	r18, 0x00	; 0
 b9e:	30 e0       	ldi	r19, 0x00	; 0
 ba0:	40 e0       	ldi	r20, 0x00	; 0
 ba2:	50 e0       	ldi	r21, 0x00	; 0
 ba4:	2a c0       	rjmp	.+84     	; 0xbfa <__pack_f+0xca>
 ba6:	b8 01       	movw	r22, r16
 ba8:	a7 01       	movw	r20, r14
 baa:	02 2e       	mov	r0, r18
 bac:	04 c0       	rjmp	.+8      	; 0xbb6 <__pack_f+0x86>
 bae:	76 95       	lsr	r23
 bb0:	67 95       	ror	r22
 bb2:	57 95       	ror	r21
 bb4:	47 95       	ror	r20
 bb6:	0a 94       	dec	r0
 bb8:	d2 f7       	brpl	.-12     	; 0xbae <__pack_f+0x7e>
 bba:	81 e0       	ldi	r24, 0x01	; 1
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	a0 e0       	ldi	r26, 0x00	; 0
 bc0:	b0 e0       	ldi	r27, 0x00	; 0
 bc2:	04 c0       	rjmp	.+8      	; 0xbcc <__pack_f+0x9c>
 bc4:	88 0f       	add	r24, r24
 bc6:	99 1f       	adc	r25, r25
 bc8:	aa 1f       	adc	r26, r26
 bca:	bb 1f       	adc	r27, r27
 bcc:	2a 95       	dec	r18
 bce:	d2 f7       	brpl	.-12     	; 0xbc4 <__pack_f+0x94>
 bd0:	01 97       	sbiw	r24, 0x01	; 1
 bd2:	a1 09       	sbc	r26, r1
 bd4:	b1 09       	sbc	r27, r1
 bd6:	8e 21       	and	r24, r14
 bd8:	9f 21       	and	r25, r15
 bda:	a0 23       	and	r26, r16
 bdc:	b1 23       	and	r27, r17
 bde:	00 97       	sbiw	r24, 0x00	; 0
 be0:	a1 05       	cpc	r26, r1
 be2:	b1 05       	cpc	r27, r1
 be4:	21 f0       	breq	.+8      	; 0xbee <__pack_f+0xbe>
 be6:	81 e0       	ldi	r24, 0x01	; 1
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	a0 e0       	ldi	r26, 0x00	; 0
 bec:	b0 e0       	ldi	r27, 0x00	; 0
 bee:	9a 01       	movw	r18, r20
 bf0:	ab 01       	movw	r20, r22
 bf2:	28 2b       	or	r18, r24
 bf4:	39 2b       	or	r19, r25
 bf6:	4a 2b       	or	r20, r26
 bf8:	5b 2b       	or	r21, r27
 bfa:	da 01       	movw	r26, r20
 bfc:	c9 01       	movw	r24, r18
 bfe:	8f 77       	andi	r24, 0x7F	; 127
 c00:	90 70       	andi	r25, 0x00	; 0
 c02:	a0 70       	andi	r26, 0x00	; 0
 c04:	b0 70       	andi	r27, 0x00	; 0
 c06:	80 34       	cpi	r24, 0x40	; 64
 c08:	91 05       	cpc	r25, r1
 c0a:	a1 05       	cpc	r26, r1
 c0c:	b1 05       	cpc	r27, r1
 c0e:	39 f4       	brne	.+14     	; 0xc1e <__pack_f+0xee>
 c10:	27 ff       	sbrs	r18, 7
 c12:	09 c0       	rjmp	.+18     	; 0xc26 <__pack_f+0xf6>
 c14:	20 5c       	subi	r18, 0xC0	; 192
 c16:	3f 4f       	sbci	r19, 0xFF	; 255
 c18:	4f 4f       	sbci	r20, 0xFF	; 255
 c1a:	5f 4f       	sbci	r21, 0xFF	; 255
 c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__pack_f+0xf6>
 c1e:	21 5c       	subi	r18, 0xC1	; 193
 c20:	3f 4f       	sbci	r19, 0xFF	; 255
 c22:	4f 4f       	sbci	r20, 0xFF	; 255
 c24:	5f 4f       	sbci	r21, 0xFF	; 255
 c26:	e0 e0       	ldi	r30, 0x00	; 0
 c28:	f0 e0       	ldi	r31, 0x00	; 0
 c2a:	20 30       	cpi	r18, 0x00	; 0
 c2c:	a0 e0       	ldi	r26, 0x00	; 0
 c2e:	3a 07       	cpc	r19, r26
 c30:	a0 e0       	ldi	r26, 0x00	; 0
 c32:	4a 07       	cpc	r20, r26
 c34:	a0 e4       	ldi	r26, 0x40	; 64
 c36:	5a 07       	cpc	r21, r26
 c38:	10 f0       	brcs	.+4      	; 0xc3e <__pack_f+0x10e>
 c3a:	e1 e0       	ldi	r30, 0x01	; 1
 c3c:	f0 e0       	ldi	r31, 0x00	; 0
 c3e:	79 01       	movw	r14, r18
 c40:	8a 01       	movw	r16, r20
 c42:	27 c0       	rjmp	.+78     	; 0xc92 <__pack_f+0x162>
 c44:	60 38       	cpi	r22, 0x80	; 128
 c46:	71 05       	cpc	r23, r1
 c48:	64 f5       	brge	.+88     	; 0xca2 <__pack_f+0x172>
 c4a:	fb 01       	movw	r30, r22
 c4c:	e1 58       	subi	r30, 0x81	; 129
 c4e:	ff 4f       	sbci	r31, 0xFF	; 255
 c50:	d8 01       	movw	r26, r16
 c52:	c7 01       	movw	r24, r14
 c54:	8f 77       	andi	r24, 0x7F	; 127
 c56:	90 70       	andi	r25, 0x00	; 0
 c58:	a0 70       	andi	r26, 0x00	; 0
 c5a:	b0 70       	andi	r27, 0x00	; 0
 c5c:	80 34       	cpi	r24, 0x40	; 64
 c5e:	91 05       	cpc	r25, r1
 c60:	a1 05       	cpc	r26, r1
 c62:	b1 05       	cpc	r27, r1
 c64:	39 f4       	brne	.+14     	; 0xc74 <__pack_f+0x144>
 c66:	e7 fe       	sbrs	r14, 7
 c68:	0d c0       	rjmp	.+26     	; 0xc84 <__pack_f+0x154>
 c6a:	80 e4       	ldi	r24, 0x40	; 64
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	a0 e0       	ldi	r26, 0x00	; 0
 c70:	b0 e0       	ldi	r27, 0x00	; 0
 c72:	04 c0       	rjmp	.+8      	; 0xc7c <__pack_f+0x14c>
 c74:	8f e3       	ldi	r24, 0x3F	; 63
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	a0 e0       	ldi	r26, 0x00	; 0
 c7a:	b0 e0       	ldi	r27, 0x00	; 0
 c7c:	e8 0e       	add	r14, r24
 c7e:	f9 1e       	adc	r15, r25
 c80:	0a 1f       	adc	r16, r26
 c82:	1b 1f       	adc	r17, r27
 c84:	17 ff       	sbrs	r17, 7
 c86:	05 c0       	rjmp	.+10     	; 0xc92 <__pack_f+0x162>
 c88:	16 95       	lsr	r17
 c8a:	07 95       	ror	r16
 c8c:	f7 94       	ror	r15
 c8e:	e7 94       	ror	r14
 c90:	31 96       	adiw	r30, 0x01	; 1
 c92:	87 e0       	ldi	r24, 0x07	; 7
 c94:	16 95       	lsr	r17
 c96:	07 95       	ror	r16
 c98:	f7 94       	ror	r15
 c9a:	e7 94       	ror	r14
 c9c:	8a 95       	dec	r24
 c9e:	d1 f7       	brne	.-12     	; 0xc94 <__pack_f+0x164>
 ca0:	05 c0       	rjmp	.+10     	; 0xcac <__pack_f+0x17c>
 ca2:	ee 24       	eor	r14, r14
 ca4:	ff 24       	eor	r15, r15
 ca6:	87 01       	movw	r16, r14
 ca8:	ef ef       	ldi	r30, 0xFF	; 255
 caa:	f0 e0       	ldi	r31, 0x00	; 0
 cac:	6e 2f       	mov	r22, r30
 cae:	67 95       	ror	r22
 cb0:	66 27       	eor	r22, r22
 cb2:	67 95       	ror	r22
 cb4:	90 2f       	mov	r25, r16
 cb6:	9f 77       	andi	r25, 0x7F	; 127
 cb8:	d7 94       	ror	r13
 cba:	dd 24       	eor	r13, r13
 cbc:	d7 94       	ror	r13
 cbe:	8e 2f       	mov	r24, r30
 cc0:	86 95       	lsr	r24
 cc2:	49 2f       	mov	r20, r25
 cc4:	46 2b       	or	r20, r22
 cc6:	58 2f       	mov	r21, r24
 cc8:	5d 29       	or	r21, r13
 cca:	b7 01       	movw	r22, r14
 ccc:	ca 01       	movw	r24, r20
 cce:	1f 91       	pop	r17
 cd0:	0f 91       	pop	r16
 cd2:	ff 90       	pop	r15
 cd4:	ef 90       	pop	r14
 cd6:	df 90       	pop	r13
 cd8:	08 95       	ret

00000cda <__unpack_f>:
 cda:	fc 01       	movw	r30, r24
 cdc:	db 01       	movw	r26, r22
 cde:	40 81       	ld	r20, Z
 ce0:	51 81       	ldd	r21, Z+1	; 0x01
 ce2:	22 81       	ldd	r18, Z+2	; 0x02
 ce4:	62 2f       	mov	r22, r18
 ce6:	6f 77       	andi	r22, 0x7F	; 127
 ce8:	70 e0       	ldi	r23, 0x00	; 0
 cea:	22 1f       	adc	r18, r18
 cec:	22 27       	eor	r18, r18
 cee:	22 1f       	adc	r18, r18
 cf0:	93 81       	ldd	r25, Z+3	; 0x03
 cf2:	89 2f       	mov	r24, r25
 cf4:	88 0f       	add	r24, r24
 cf6:	82 2b       	or	r24, r18
 cf8:	28 2f       	mov	r18, r24
 cfa:	30 e0       	ldi	r19, 0x00	; 0
 cfc:	99 1f       	adc	r25, r25
 cfe:	99 27       	eor	r25, r25
 d00:	99 1f       	adc	r25, r25
 d02:	11 96       	adiw	r26, 0x01	; 1
 d04:	9c 93       	st	X, r25
 d06:	11 97       	sbiw	r26, 0x01	; 1
 d08:	21 15       	cp	r18, r1
 d0a:	31 05       	cpc	r19, r1
 d0c:	a9 f5       	brne	.+106    	; 0xd78 <__unpack_f+0x9e>
 d0e:	41 15       	cp	r20, r1
 d10:	51 05       	cpc	r21, r1
 d12:	61 05       	cpc	r22, r1
 d14:	71 05       	cpc	r23, r1
 d16:	11 f4       	brne	.+4      	; 0xd1c <__unpack_f+0x42>
 d18:	82 e0       	ldi	r24, 0x02	; 2
 d1a:	37 c0       	rjmp	.+110    	; 0xd8a <__unpack_f+0xb0>
 d1c:	82 e8       	ldi	r24, 0x82	; 130
 d1e:	9f ef       	ldi	r25, 0xFF	; 255
 d20:	13 96       	adiw	r26, 0x03	; 3
 d22:	9c 93       	st	X, r25
 d24:	8e 93       	st	-X, r24
 d26:	12 97       	sbiw	r26, 0x02	; 2
 d28:	9a 01       	movw	r18, r20
 d2a:	ab 01       	movw	r20, r22
 d2c:	67 e0       	ldi	r22, 0x07	; 7
 d2e:	22 0f       	add	r18, r18
 d30:	33 1f       	adc	r19, r19
 d32:	44 1f       	adc	r20, r20
 d34:	55 1f       	adc	r21, r21
 d36:	6a 95       	dec	r22
 d38:	d1 f7       	brne	.-12     	; 0xd2e <__unpack_f+0x54>
 d3a:	83 e0       	ldi	r24, 0x03	; 3
 d3c:	8c 93       	st	X, r24
 d3e:	0d c0       	rjmp	.+26     	; 0xd5a <__unpack_f+0x80>
 d40:	22 0f       	add	r18, r18
 d42:	33 1f       	adc	r19, r19
 d44:	44 1f       	adc	r20, r20
 d46:	55 1f       	adc	r21, r21
 d48:	12 96       	adiw	r26, 0x02	; 2
 d4a:	8d 91       	ld	r24, X+
 d4c:	9c 91       	ld	r25, X
 d4e:	13 97       	sbiw	r26, 0x03	; 3
 d50:	01 97       	sbiw	r24, 0x01	; 1
 d52:	13 96       	adiw	r26, 0x03	; 3
 d54:	9c 93       	st	X, r25
 d56:	8e 93       	st	-X, r24
 d58:	12 97       	sbiw	r26, 0x02	; 2
 d5a:	20 30       	cpi	r18, 0x00	; 0
 d5c:	80 e0       	ldi	r24, 0x00	; 0
 d5e:	38 07       	cpc	r19, r24
 d60:	80 e0       	ldi	r24, 0x00	; 0
 d62:	48 07       	cpc	r20, r24
 d64:	80 e4       	ldi	r24, 0x40	; 64
 d66:	58 07       	cpc	r21, r24
 d68:	58 f3       	brcs	.-42     	; 0xd40 <__unpack_f+0x66>
 d6a:	14 96       	adiw	r26, 0x04	; 4
 d6c:	2d 93       	st	X+, r18
 d6e:	3d 93       	st	X+, r19
 d70:	4d 93       	st	X+, r20
 d72:	5c 93       	st	X, r21
 d74:	17 97       	sbiw	r26, 0x07	; 7
 d76:	08 95       	ret
 d78:	2f 3f       	cpi	r18, 0xFF	; 255
 d7a:	31 05       	cpc	r19, r1
 d7c:	79 f4       	brne	.+30     	; 0xd9c <__unpack_f+0xc2>
 d7e:	41 15       	cp	r20, r1
 d80:	51 05       	cpc	r21, r1
 d82:	61 05       	cpc	r22, r1
 d84:	71 05       	cpc	r23, r1
 d86:	19 f4       	brne	.+6      	; 0xd8e <__unpack_f+0xb4>
 d88:	84 e0       	ldi	r24, 0x04	; 4
 d8a:	8c 93       	st	X, r24
 d8c:	08 95       	ret
 d8e:	64 ff       	sbrs	r22, 4
 d90:	03 c0       	rjmp	.+6      	; 0xd98 <__unpack_f+0xbe>
 d92:	81 e0       	ldi	r24, 0x01	; 1
 d94:	8c 93       	st	X, r24
 d96:	12 c0       	rjmp	.+36     	; 0xdbc <__unpack_f+0xe2>
 d98:	1c 92       	st	X, r1
 d9a:	10 c0       	rjmp	.+32     	; 0xdbc <__unpack_f+0xe2>
 d9c:	2f 57       	subi	r18, 0x7F	; 127
 d9e:	30 40       	sbci	r19, 0x00	; 0
 da0:	13 96       	adiw	r26, 0x03	; 3
 da2:	3c 93       	st	X, r19
 da4:	2e 93       	st	-X, r18
 da6:	12 97       	sbiw	r26, 0x02	; 2
 da8:	83 e0       	ldi	r24, 0x03	; 3
 daa:	8c 93       	st	X, r24
 dac:	87 e0       	ldi	r24, 0x07	; 7
 dae:	44 0f       	add	r20, r20
 db0:	55 1f       	adc	r21, r21
 db2:	66 1f       	adc	r22, r22
 db4:	77 1f       	adc	r23, r23
 db6:	8a 95       	dec	r24
 db8:	d1 f7       	brne	.-12     	; 0xdae <__unpack_f+0xd4>
 dba:	70 64       	ori	r23, 0x40	; 64
 dbc:	14 96       	adiw	r26, 0x04	; 4
 dbe:	4d 93       	st	X+, r20
 dc0:	5d 93       	st	X+, r21
 dc2:	6d 93       	st	X+, r22
 dc4:	7c 93       	st	X, r23
 dc6:	17 97       	sbiw	r26, 0x07	; 7
 dc8:	08 95       	ret

00000dca <__prologue_saves__>:
 dca:	2f 92       	push	r2
 dcc:	3f 92       	push	r3
 dce:	4f 92       	push	r4
 dd0:	5f 92       	push	r5
 dd2:	6f 92       	push	r6
 dd4:	7f 92       	push	r7
 dd6:	8f 92       	push	r8
 dd8:	9f 92       	push	r9
 dda:	af 92       	push	r10
 ddc:	bf 92       	push	r11
 dde:	cf 92       	push	r12
 de0:	df 92       	push	r13
 de2:	ef 92       	push	r14
 de4:	ff 92       	push	r15
 de6:	0f 93       	push	r16
 de8:	1f 93       	push	r17
 dea:	cf 93       	push	r28
 dec:	df 93       	push	r29
 dee:	cd b7       	in	r28, 0x3d	; 61
 df0:	de b7       	in	r29, 0x3e	; 62
 df2:	ca 1b       	sub	r28, r26
 df4:	db 0b       	sbc	r29, r27
 df6:	0f b6       	in	r0, 0x3f	; 63
 df8:	f8 94       	cli
 dfa:	de bf       	out	0x3e, r29	; 62
 dfc:	0f be       	out	0x3f, r0	; 63
 dfe:	cd bf       	out	0x3d, r28	; 61
 e00:	09 94       	ijmp

00000e02 <__epilogue_restores__>:
 e02:	2a 88       	ldd	r2, Y+18	; 0x12
 e04:	39 88       	ldd	r3, Y+17	; 0x11
 e06:	48 88       	ldd	r4, Y+16	; 0x10
 e08:	5f 84       	ldd	r5, Y+15	; 0x0f
 e0a:	6e 84       	ldd	r6, Y+14	; 0x0e
 e0c:	7d 84       	ldd	r7, Y+13	; 0x0d
 e0e:	8c 84       	ldd	r8, Y+12	; 0x0c
 e10:	9b 84       	ldd	r9, Y+11	; 0x0b
 e12:	aa 84       	ldd	r10, Y+10	; 0x0a
 e14:	b9 84       	ldd	r11, Y+9	; 0x09
 e16:	c8 84       	ldd	r12, Y+8	; 0x08
 e18:	df 80       	ldd	r13, Y+7	; 0x07
 e1a:	ee 80       	ldd	r14, Y+6	; 0x06
 e1c:	fd 80       	ldd	r15, Y+5	; 0x05
 e1e:	0c 81       	ldd	r16, Y+4	; 0x04
 e20:	1b 81       	ldd	r17, Y+3	; 0x03
 e22:	aa 81       	ldd	r26, Y+2	; 0x02
 e24:	b9 81       	ldd	r27, Y+1	; 0x01
 e26:	ce 0f       	add	r28, r30
 e28:	d1 1d       	adc	r29, r1
 e2a:	0f b6       	in	r0, 0x3f	; 63
 e2c:	f8 94       	cli
 e2e:	de bf       	out	0x3e, r29	; 62
 e30:	0f be       	out	0x3f, r0	; 63
 e32:	cd bf       	out	0x3d, r28	; 61
 e34:	ed 01       	movw	r28, r26
 e36:	08 95       	ret

00000e38 <_exit>:
 e38:	f8 94       	cli

00000e3a <__stop_program>:
 e3a:	ff cf       	rjmp	.-2      	; 0xe3a <__stop_program>
