
bin\Debug\AGV_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000e04  00000eb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e04  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800108  00800108  00000ec0  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000ec0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000000c0  00000000  00000000  00000ec3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000199  00000000  00000000  00000f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001595  00000000  00000000  0000111c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b01  00000000  00000000  000026b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cea  00000000  00000000  000031b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00003e9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000334  00000000  00000000  00003fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d8  00000000  00000000  000042f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000049c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a8 e0       	ldi	r26, 0x08	; 8
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 31       	cpi	r26, 0x14	; 20
  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	e4 e0       	ldi	r30, 0x04	; 4
  8c:	fe e0       	ldi	r31, 0x0E	; 14
  8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
  9a:	0e 94 21 02 	call	0x442	; 0x442 <main>
  9e:	0c 94 00 07 	jmp	0xe00	; 0xe00 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <MapRange>:
volatile uint16_t ADC_waarde_2;
volatile uint16_t verschil_0;
volatile uint16_t verschil_2;

double MapRange(double X, double A1, double A2, double B1, double B2)
{
  a6:	af 92       	push	r10
  a8:	bf 92       	push	r11
  aa:	cf 92       	push	r12
  ac:	df 92       	push	r13
  ae:	ef 92       	push	r14
  b0:	ff 92       	push	r15
  b2:	0f 93       	push	r16
  b4:	1f 93       	push	r17
  b6:	df 93       	push	r29
  b8:	cf 93       	push	r28
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
  be:	64 97       	sbiw	r28, 0x14	; 20
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	f8 94       	cli
  c4:	de bf       	out	0x3e, r29	; 62
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	cd bf       	out	0x3d, r28	; 61
  ca:	6d 83       	std	Y+5, r22	; 0x05
  cc:	7e 83       	std	Y+6, r23	; 0x06
  ce:	8f 83       	std	Y+7, r24	; 0x07
  d0:	98 87       	std	Y+8, r25	; 0x08
  d2:	29 87       	std	Y+9, r18	; 0x09
  d4:	3a 87       	std	Y+10, r19	; 0x0a
  d6:	4b 87       	std	Y+11, r20	; 0x0b
  d8:	5c 87       	std	Y+12, r21	; 0x0c
  da:	ed 86       	std	Y+13, r14	; 0x0d
  dc:	fe 86       	std	Y+14, r15	; 0x0e
  de:	0f 87       	std	Y+15, r16	; 0x0f
  e0:	18 8b       	std	Y+16, r17	; 0x10
  e2:	a9 8a       	std	Y+17, r10	; 0x11
  e4:	ba 8a       	std	Y+18, r11	; 0x12
  e6:	cb 8a       	std	Y+19, r12	; 0x13
  e8:	dc 8a       	std	Y+20, r13	; 0x14
    double Y = B1 + (X-A1)*((B2-B1)/(A2-A1));
  ea:	6d 81       	ldd	r22, Y+5	; 0x05
  ec:	7e 81       	ldd	r23, Y+6	; 0x06
  ee:	8f 81       	ldd	r24, Y+7	; 0x07
  f0:	98 85       	ldd	r25, Y+8	; 0x08
  f2:	29 85       	ldd	r18, Y+9	; 0x09
  f4:	3a 85       	ldd	r19, Y+10	; 0x0a
  f6:	4b 85       	ldd	r20, Y+11	; 0x0b
  f8:	5c 85       	ldd	r21, Y+12	; 0x0c
  fa:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__subsf3>
  fe:	dc 01       	movw	r26, r24
 100:	cb 01       	movw	r24, r22
 102:	5c 01       	movw	r10, r24
 104:	6d 01       	movw	r12, r26
 106:	69 a1       	ldd	r22, Y+33	; 0x21
 108:	7a a1       	ldd	r23, Y+34	; 0x22
 10a:	8b a1       	ldd	r24, Y+35	; 0x23
 10c:	9c a1       	ldd	r25, Y+36	; 0x24
 10e:	29 89       	ldd	r18, Y+17	; 0x11
 110:	3a 89       	ldd	r19, Y+18	; 0x12
 112:	4b 89       	ldd	r20, Y+19	; 0x13
 114:	5c 89       	ldd	r21, Y+20	; 0x14
 116:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__subsf3>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	7c 01       	movw	r14, r24
 120:	8d 01       	movw	r16, r26
 122:	6d 85       	ldd	r22, Y+13	; 0x0d
 124:	7e 85       	ldd	r23, Y+14	; 0x0e
 126:	8f 85       	ldd	r24, Y+15	; 0x0f
 128:	98 89       	ldd	r25, Y+16	; 0x10
 12a:	29 85       	ldd	r18, Y+9	; 0x09
 12c:	3a 85       	ldd	r19, Y+10	; 0x0a
 12e:	4b 85       	ldd	r20, Y+11	; 0x0b
 130:	5c 85       	ldd	r21, Y+12	; 0x0c
 132:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__subsf3>
 136:	dc 01       	movw	r26, r24
 138:	cb 01       	movw	r24, r22
 13a:	9c 01       	movw	r18, r24
 13c:	ad 01       	movw	r20, r26
 13e:	c8 01       	movw	r24, r16
 140:	b7 01       	movw	r22, r14
 142:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__divsf3>
 146:	dc 01       	movw	r26, r24
 148:	cb 01       	movw	r24, r22
 14a:	9c 01       	movw	r18, r24
 14c:	ad 01       	movw	r20, r26
 14e:	c6 01       	movw	r24, r12
 150:	b5 01       	movw	r22, r10
 152:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__mulsf3>
 156:	dc 01       	movw	r26, r24
 158:	cb 01       	movw	r24, r22
 15a:	bc 01       	movw	r22, r24
 15c:	cd 01       	movw	r24, r26
 15e:	29 89       	ldd	r18, Y+17	; 0x11
 160:	3a 89       	ldd	r19, Y+18	; 0x12
 162:	4b 89       	ldd	r20, Y+19	; 0x13
 164:	5c 89       	ldd	r21, Y+20	; 0x14
 166:	0e 94 a9 03 	call	0x752	; 0x752 <__addsf3>
 16a:	dc 01       	movw	r26, r24
 16c:	cb 01       	movw	r24, r22
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	9a 83       	std	Y+2, r25	; 0x02
 172:	ab 83       	std	Y+3, r26	; 0x03
 174:	bc 83       	std	Y+4, r27	; 0x04
    return Y;
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	9a 81       	ldd	r25, Y+2	; 0x02
 17a:	ab 81       	ldd	r26, Y+3	; 0x03
 17c:	bc 81       	ldd	r27, Y+4	; 0x04
}
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	64 96       	adiw	r28, 0x14	; 20
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	cf 91       	pop	r28
 190:	df 91       	pop	r29
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	ff 90       	pop	r15
 198:	ef 90       	pop	r14
 19a:	df 90       	pop	r13
 19c:	cf 90       	pop	r12
 19e:	bf 90       	pop	r11
 1a0:	af 90       	pop	r10
 1a2:	08 95       	ret

000001a4 <init_timer>:

void init_timer(void)
{
 1a4:	df 93       	push	r29
 1a6:	cf 93       	push	r28
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
    ///timmer settup voor stepper motor1
    ///gebruikt timer0 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR0A  = BV(COM0A0) | BV(WGM01);
 1ac:	e4 e4       	ldi	r30, 0x44	; 68
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	82 e4       	ldi	r24, 0x42	; 66
 1b2:	80 83       	st	Z, r24
    TCCR0B  = BV(CS02);             // clk/256
 1b4:	e5 e4       	ldi	r30, 0x45	; 69
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	80 83       	st	Z, r24
    OCR0A   = 80;                   //start snelheid
 1bc:	e7 e4       	ldi	r30, 0x47	; 71
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 e5       	ldi	r24, 0x50	; 80
 1c2:	80 83       	st	Z, r24
    SetBit(DDRD, PD6);              //enable output timer D6
 1c4:	aa e2       	ldi	r26, 0x2A	; 42
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e2       	ldi	r30, 0x2A	; 42
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	80 64       	ori	r24, 0x40	; 64
 1d0:	8c 93       	st	X, r24

    ///timmer settup voor stepper motor2
    ///gebruikt timer2 in CTC mode
    ///met snelheid tussen 70 als snelste en 100 als langzaamste
    TCCR2A  = BV(COM2A0) | BV(WGM21);
 1d2:	e0 eb       	ldi	r30, 0xB0	; 176
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	82 e4       	ldi	r24, 0x42	; 66
 1d8:	80 83       	st	Z, r24
    ClearBit(ASSR, AS2);             // interne io klok geselecteerd
 1da:	a6 eb       	ldi	r26, 0xB6	; 182
 1dc:	b0 e0       	ldi	r27, 0x00	; 0
 1de:	e6 eb       	ldi	r30, 0xB6	; 182
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	8f 7d       	andi	r24, 0xDF	; 223
 1e6:	8c 93       	st	X, r24
    TCCR2B  = BV(CS22) | BV(CS21);   // clk/256
 1e8:	e1 eb       	ldi	r30, 0xB1	; 177
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	86 e0       	ldi	r24, 0x06	; 6
 1ee:	80 83       	st	Z, r24
    OCR2A   = 80;                    // start snelheid
 1f0:	e3 eb       	ldi	r30, 0xB3	; 179
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 e5       	ldi	r24, 0x50	; 80
 1f6:	80 83       	st	Z, r24
    SetBit(DDRB, PB3);               // enable output timer D11
 1f8:	a4 e2       	ldi	r26, 0x24	; 36
 1fa:	b0 e0       	ldi	r27, 0x00	; 0
 1fc:	e4 e2       	ldi	r30, 0x24	; 36
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	88 60       	ori	r24, 0x08	; 8
 204:	8c 93       	st	X, r24
}
 206:	cf 91       	pop	r28
 208:	df 91       	pop	r29
 20a:	08 95       	ret

0000020c <init_adc>:

void init_adc(void)
{
 20c:	df 93       	push	r29
 20e:	cf 93       	push	r28
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
    ADMUX |= (1 << REFS0);                                  // AVCC als referentiespanning
 214:	ac e7       	ldi	r26, 0x7C	; 124
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	ec e7       	ldi	r30, 0x7C	; 124
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	80 64       	ori	r24, 0x40	; 64
 220:	8c 93       	st	X, r24
    ADCSRA = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);    // Prescaler 128 125kHZ
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	80 83       	st	Z, r24
    ADCSRA |= (1 << ADEN);                                  // Aanzetten ADC
 22a:	aa e7       	ldi	r26, 0x7A	; 122
 22c:	b0 e0       	ldi	r27, 0x00	; 0
 22e:	ea e7       	ldi	r30, 0x7A	; 122
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	80 68       	ori	r24, 0x80	; 128
 236:	8c 93       	st	X, r24


    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 238:	ac e7       	ldi	r26, 0x7C	; 124
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	ec e7       	ldi	r30, 0x7C	; 124
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	80 81       	ld	r24, Z
 242:	8e 7f       	andi	r24, 0xFE	; 254
 244:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 246:	aa e7       	ldi	r26, 0x7A	; 122
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	ea e7       	ldi	r30, 0x7A	; 122
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	80 64       	ori	r24, 0x40	; 64
 252:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 254:	ea e7       	ldi	r30, 0x7A	; 122
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	80 74       	andi	r24, 0x40	; 64
 25c:	88 23       	and	r24, r24
 25e:	d1 f7       	brne	.-12     	; 0x254 <init_adc+0x48>
    POT0_BEGIN = ADC;                               // Waarde meegeven aan variabele
 260:	e8 e7       	ldi	r30, 0x78	; 120
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	91 81       	ldd	r25, Z+1	; 0x01
 268:	90 93 0b 01 	sts	0x010B, r25
 26c:	80 93 0a 01 	sts	0x010A, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 270:	ac e7       	ldi	r26, 0x7C	; 124
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	ec e7       	ldi	r30, 0x7C	; 124
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	81 60       	ori	r24, 0x01	; 1
 27c:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 27e:	aa e7       	ldi	r26, 0x7A	; 122
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	ea e7       	ldi	r30, 0x7A	; 122
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	80 64       	ori	r24, 0x40	; 64
 28a:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 28c:	ea e7       	ldi	r30, 0x7A	; 122
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	80 81       	ld	r24, Z
 292:	80 74       	andi	r24, 0x40	; 64
 294:	88 23       	and	r24, r24
 296:	d1 f7       	brne	.-12     	; 0x28c <init_adc+0x80>
    POT2_BEGIN = ADC;                             // Waarde meegeven aan variabele
 298:	e8 e7       	ldi	r30, 0x78	; 120
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	91 81       	ldd	r25, Z+1	; 0x01
 2a0:	90 93 13 01 	sts	0x0113, r25
 2a4:	80 93 12 01 	sts	0x0112, r24



}
 2a8:	cf 91       	pop	r28
 2aa:	df 91       	pop	r29
 2ac:	08 95       	ret

000002ae <ADC_Check>:

void ADC_Check(void)
{
 2ae:	df 93       	push	r29
 2b0:	cf 93       	push	r28
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
    // Waarde 1 genereren
    ADMUX &= ~(1 << MUX0);                          // ADC op poort 0
 2b6:	ac e7       	ldi	r26, 0x7C	; 124
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	ec e7       	ldi	r30, 0x7C	; 124
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	80 81       	ld	r24, Z
 2c0:	8e 7f       	andi	r24, 0xFE	; 254
 2c2:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 2c4:	aa e7       	ldi	r26, 0x7A	; 122
 2c6:	b0 e0       	ldi	r27, 0x00	; 0
 2c8:	ea e7       	ldi	r30, 0x7A	; 122
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	80 81       	ld	r24, Z
 2ce:	80 64       	ori	r24, 0x40	; 64
 2d0:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 2d2:	ea e7       	ldi	r30, 0x7A	; 122
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	80 74       	andi	r24, 0x40	; 64
 2da:	88 23       	and	r24, r24
 2dc:	d1 f7       	brne	.-12     	; 0x2d2 <ADC_Check+0x24>
    ADC_waarde_0 = ADC;                               // Waarde meegeven aan variabele
 2de:	e8 e7       	ldi	r30, 0x78	; 120
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	91 81       	ldd	r25, Z+1	; 0x01
 2e6:	90 93 0f 01 	sts	0x010F, r25
 2ea:	80 93 0e 01 	sts	0x010E, r24


    // Waarde 2 genereren
    ADMUX |= (1 << MUX0);                           // ADC op poort 1
 2ee:	ac e7       	ldi	r26, 0x7C	; 124
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	ec e7       	ldi	r30, 0x7C	; 124
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	81 60       	ori	r24, 0x01	; 1
 2fa:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADSC);                          // Conversatie starten
 2fc:	aa e7       	ldi	r26, 0x7A	; 122
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	ea e7       	ldi	r30, 0x7A	; 122
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	80 64       	ori	r24, 0x40	; 64
 308:	8c 93       	st	X, r24
    while (ADCSRA & (1 << ADSC));{}                 // Wacht tot conversatie klaar is
 30a:	ea e7       	ldi	r30, 0x7A	; 122
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	80 81       	ld	r24, Z
 310:	80 74       	andi	r24, 0x40	; 64
 312:	88 23       	and	r24, r24
 314:	d1 f7       	brne	.-12     	; 0x30a <ADC_Check+0x5c>
    ADC_waarde_2 = ADC;                             // Waarde meegeven aan variabele
 316:	e8 e7       	ldi	r30, 0x78	; 120
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	91 81       	ldd	r25, Z+1	; 0x01
 31e:	90 93 09 01 	sts	0x0109, r25
 322:	80 93 08 01 	sts	0x0108, r24


    if(POT0_BEGIN < ADC_waarde_0)
 326:	20 91 0a 01 	lds	r18, 0x010A
 32a:	30 91 0b 01 	lds	r19, 0x010B
 32e:	80 91 0e 01 	lds	r24, 0x010E
 332:	90 91 0f 01 	lds	r25, 0x010F
 336:	28 17       	cp	r18, r24
 338:	39 07       	cpc	r19, r25
 33a:	70 f4       	brcc	.+28     	; 0x358 <ADC_Check+0xaa>
    {
        verschil_0 = ADC_waarde_0 - POT0_BEGIN;
 33c:	80 91 0e 01 	lds	r24, 0x010E
 340:	90 91 0f 01 	lds	r25, 0x010F
 344:	20 91 0a 01 	lds	r18, 0x010A
 348:	30 91 0b 01 	lds	r19, 0x010B
 34c:	82 1b       	sub	r24, r18
 34e:	93 0b       	sbc	r25, r19
 350:	90 93 0d 01 	sts	0x010D, r25
 354:	80 93 0c 01 	sts	0x010C, r24
    }
    ///links
    if(POT0_BEGIN > ADC_waarde_0)
 358:	20 91 0a 01 	lds	r18, 0x010A
 35c:	30 91 0b 01 	lds	r19, 0x010B
 360:	80 91 0e 01 	lds	r24, 0x010E
 364:	90 91 0f 01 	lds	r25, 0x010F
 368:	82 17       	cp	r24, r18
 36a:	93 07       	cpc	r25, r19
 36c:	70 f5       	brcc	.+92     	; 0x3ca <ADC_Check+0x11c>
    {
        verschil_0 = POT0_BEGIN - ADC_waarde_0;
 36e:	20 91 0a 01 	lds	r18, 0x010A
 372:	30 91 0b 01 	lds	r19, 0x010B
 376:	80 91 0e 01 	lds	r24, 0x010E
 37a:	90 91 0f 01 	lds	r25, 0x010F
 37e:	a9 01       	movw	r20, r18
 380:	48 1b       	sub	r20, r24
 382:	59 0b       	sbc	r21, r25
 384:	ca 01       	movw	r24, r20
 386:	90 93 0d 01 	sts	0x010D, r25
 38a:	80 93 0c 01 	sts	0x010C, r24
        if(verschil_0 < 150)
 38e:	80 91 0c 01 	lds	r24, 0x010C
 392:	90 91 0d 01 	lds	r25, 0x010D
 396:	86 39       	cpi	r24, 0x96	; 150
 398:	91 05       	cpc	r25, r1
 39a:	40 f4       	brcc	.+16     	; 0x3ac <ADC_Check+0xfe>
        {
            OCR0A = 95 ;
 39c:	e7 e4       	ldi	r30, 0x47	; 71
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	8f e5       	ldi	r24, 0x5F	; 95
 3a2:	80 83       	st	Z, r24
            OCR2A = 95 ;
 3a4:	e3 eb       	ldi	r30, 0xB3	; 179
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	8f e5       	ldi	r24, 0x5F	; 95
 3aa:	80 83       	st	Z, r24
        }
        if(verschil_0 > 150)
 3ac:	80 91 0c 01 	lds	r24, 0x010C
 3b0:	90 91 0d 01 	lds	r25, 0x010D
 3b4:	87 39       	cpi	r24, 0x97	; 151
 3b6:	91 05       	cpc	r25, r1
 3b8:	40 f0       	brcs	.+16     	; 0x3ca <ADC_Check+0x11c>
        {
            OCR0A = 100 ;
 3ba:	e7 e4       	ldi	r30, 0x47	; 71
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	84 e6       	ldi	r24, 0x64	; 100
 3c0:	80 83       	st	Z, r24
            OCR2A = 80 ;
 3c2:	e3 eb       	ldi	r30, 0xB3	; 179
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 e5       	ldi	r24, 0x50	; 80
 3c8:	80 83       	st	Z, r24
        }
    }
    if(POT2_BEGIN < ADC_waarde_2)
 3ca:	20 91 12 01 	lds	r18, 0x0112
 3ce:	30 91 13 01 	lds	r19, 0x0113
 3d2:	80 91 08 01 	lds	r24, 0x0108
 3d6:	90 91 09 01 	lds	r25, 0x0109
 3da:	28 17       	cp	r18, r24
 3dc:	39 07       	cpc	r19, r25
 3de:	70 f5       	brcc	.+92     	; 0x43c <ADC_Check+0x18e>
    {
        ///rechts
        verschil_2 = ADC_waarde_2 - POT2_BEGIN;
 3e0:	20 91 08 01 	lds	r18, 0x0108
 3e4:	30 91 09 01 	lds	r19, 0x0109
 3e8:	80 91 12 01 	lds	r24, 0x0112
 3ec:	90 91 13 01 	lds	r25, 0x0113
 3f0:	a9 01       	movw	r20, r18
 3f2:	48 1b       	sub	r20, r24
 3f4:	59 0b       	sbc	r21, r25
 3f6:	ca 01       	movw	r24, r20
 3f8:	90 93 11 01 	sts	0x0111, r25
 3fc:	80 93 10 01 	sts	0x0110, r24
        if(verschil_2 < 150)
 400:	80 91 10 01 	lds	r24, 0x0110
 404:	90 91 11 01 	lds	r25, 0x0111
 408:	86 39       	cpi	r24, 0x96	; 150
 40a:	91 05       	cpc	r25, r1
 40c:	40 f4       	brcc	.+16     	; 0x41e <ADC_Check+0x170>
        {
            OCR0A = 95 ;
 40e:	e7 e4       	ldi	r30, 0x47	; 71
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	8f e5       	ldi	r24, 0x5F	; 95
 414:	80 83       	st	Z, r24
            OCR2A = 95 ;
 416:	e3 eb       	ldi	r30, 0xB3	; 179
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	8f e5       	ldi	r24, 0x5F	; 95
 41c:	80 83       	st	Z, r24
        }
        if(verschil_2 > 150)
 41e:	80 91 10 01 	lds	r24, 0x0110
 422:	90 91 11 01 	lds	r25, 0x0111
 426:	87 39       	cpi	r24, 0x97	; 151
 428:	91 05       	cpc	r25, r1
 42a:	40 f0       	brcs	.+16     	; 0x43c <ADC_Check+0x18e>
        {
            OCR0A = 80 ;
 42c:	e7 e4       	ldi	r30, 0x47	; 71
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 e5       	ldi	r24, 0x50	; 80
 432:	80 83       	st	Z, r24
            OCR2A = 100 ;
 434:	e3 eb       	ldi	r30, 0xB3	; 179
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	84 e6       	ldi	r24, 0x64	; 100
 43a:	80 83       	st	Z, r24
        }

    }
}
 43c:	cf 91       	pop	r28
 43e:	df 91       	pop	r29
 440:	08 95       	ret

00000442 <main>:

int main(void)
{
 442:	df 93       	push	r29
 444:	cf 93       	push	r28
 446:	cd b7       	in	r28, 0x3d	; 61
 448:	de b7       	in	r29, 0x3e	; 62
    init_timer();
 44a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <init_timer>
    init_adc();
 44e:	0e 94 06 01 	call	0x20c	; 0x20c <init_adc>

    // Insert code

    while(1)
        ADC_Check();
 452:	0e 94 57 01 	call	0x2ae	; 0x2ae <ADC_Check>
 456:	fd cf       	rjmp	.-6      	; 0x452 <main+0x10>

00000458 <_fpadd_parts>:
 458:	a0 e0       	ldi	r26, 0x00	; 0
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e2 e3       	ldi	r30, 0x32	; 50
 45e:	f2 e0       	ldi	r31, 0x02	; 2
 460:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__prologue_saves__>
 464:	dc 01       	movw	r26, r24
 466:	2b 01       	movw	r4, r22
 468:	fa 01       	movw	r30, r20
 46a:	9c 91       	ld	r25, X
 46c:	92 30       	cpi	r25, 0x02	; 2
 46e:	08 f4       	brcc	.+2      	; 0x472 <_fpadd_parts+0x1a>
 470:	39 c1       	rjmp	.+626    	; 0x6e4 <_fpadd_parts+0x28c>
 472:	eb 01       	movw	r28, r22
 474:	88 81       	ld	r24, Y
 476:	82 30       	cpi	r24, 0x02	; 2
 478:	08 f4       	brcc	.+2      	; 0x47c <_fpadd_parts+0x24>
 47a:	33 c1       	rjmp	.+614    	; 0x6e2 <_fpadd_parts+0x28a>
 47c:	94 30       	cpi	r25, 0x04	; 4
 47e:	69 f4       	brne	.+26     	; 0x49a <_fpadd_parts+0x42>
 480:	84 30       	cpi	r24, 0x04	; 4
 482:	09 f0       	breq	.+2      	; 0x486 <_fpadd_parts+0x2e>
 484:	2f c1       	rjmp	.+606    	; 0x6e4 <_fpadd_parts+0x28c>
 486:	11 96       	adiw	r26, 0x01	; 1
 488:	9c 91       	ld	r25, X
 48a:	11 97       	sbiw	r26, 0x01	; 1
 48c:	89 81       	ldd	r24, Y+1	; 0x01
 48e:	98 17       	cp	r25, r24
 490:	09 f4       	brne	.+2      	; 0x494 <_fpadd_parts+0x3c>
 492:	28 c1       	rjmp	.+592    	; 0x6e4 <_fpadd_parts+0x28c>
 494:	a0 e0       	ldi	r26, 0x00	; 0
 496:	b1 e0       	ldi	r27, 0x01	; 1
 498:	25 c1       	rjmp	.+586    	; 0x6e4 <_fpadd_parts+0x28c>
 49a:	84 30       	cpi	r24, 0x04	; 4
 49c:	09 f4       	brne	.+2      	; 0x4a0 <_fpadd_parts+0x48>
 49e:	21 c1       	rjmp	.+578    	; 0x6e2 <_fpadd_parts+0x28a>
 4a0:	82 30       	cpi	r24, 0x02	; 2
 4a2:	a9 f4       	brne	.+42     	; 0x4ce <_fpadd_parts+0x76>
 4a4:	92 30       	cpi	r25, 0x02	; 2
 4a6:	09 f0       	breq	.+2      	; 0x4aa <_fpadd_parts+0x52>
 4a8:	1d c1       	rjmp	.+570    	; 0x6e4 <_fpadd_parts+0x28c>
 4aa:	9a 01       	movw	r18, r20
 4ac:	ad 01       	movw	r20, r26
 4ae:	88 e0       	ldi	r24, 0x08	; 8
 4b0:	ea 01       	movw	r28, r20
 4b2:	09 90       	ld	r0, Y+
 4b4:	ae 01       	movw	r20, r28
 4b6:	e9 01       	movw	r28, r18
 4b8:	09 92       	st	Y+, r0
 4ba:	9e 01       	movw	r18, r28
 4bc:	81 50       	subi	r24, 0x01	; 1
 4be:	c1 f7       	brne	.-16     	; 0x4b0 <_fpadd_parts+0x58>
 4c0:	e2 01       	movw	r28, r4
 4c2:	89 81       	ldd	r24, Y+1	; 0x01
 4c4:	11 96       	adiw	r26, 0x01	; 1
 4c6:	9c 91       	ld	r25, X
 4c8:	89 23       	and	r24, r25
 4ca:	81 83       	std	Z+1, r24	; 0x01
 4cc:	08 c1       	rjmp	.+528    	; 0x6de <_fpadd_parts+0x286>
 4ce:	92 30       	cpi	r25, 0x02	; 2
 4d0:	09 f4       	brne	.+2      	; 0x4d4 <_fpadd_parts+0x7c>
 4d2:	07 c1       	rjmp	.+526    	; 0x6e2 <_fpadd_parts+0x28a>
 4d4:	12 96       	adiw	r26, 0x02	; 2
 4d6:	2d 90       	ld	r2, X+
 4d8:	3c 90       	ld	r3, X
 4da:	13 97       	sbiw	r26, 0x03	; 3
 4dc:	eb 01       	movw	r28, r22
 4de:	8a 81       	ldd	r24, Y+2	; 0x02
 4e0:	9b 81       	ldd	r25, Y+3	; 0x03
 4e2:	14 96       	adiw	r26, 0x04	; 4
 4e4:	ad 90       	ld	r10, X+
 4e6:	bd 90       	ld	r11, X+
 4e8:	cd 90       	ld	r12, X+
 4ea:	dc 90       	ld	r13, X
 4ec:	17 97       	sbiw	r26, 0x07	; 7
 4ee:	ec 80       	ldd	r14, Y+4	; 0x04
 4f0:	fd 80       	ldd	r15, Y+5	; 0x05
 4f2:	0e 81       	ldd	r16, Y+6	; 0x06
 4f4:	1f 81       	ldd	r17, Y+7	; 0x07
 4f6:	91 01       	movw	r18, r2
 4f8:	28 1b       	sub	r18, r24
 4fa:	39 0b       	sbc	r19, r25
 4fc:	b9 01       	movw	r22, r18
 4fe:	37 ff       	sbrs	r19, 7
 500:	04 c0       	rjmp	.+8      	; 0x50a <_fpadd_parts+0xb2>
 502:	66 27       	eor	r22, r22
 504:	77 27       	eor	r23, r23
 506:	62 1b       	sub	r22, r18
 508:	73 0b       	sbc	r23, r19
 50a:	60 32       	cpi	r22, 0x20	; 32
 50c:	71 05       	cpc	r23, r1
 50e:	0c f0       	brlt	.+2      	; 0x512 <_fpadd_parts+0xba>
 510:	61 c0       	rjmp	.+194    	; 0x5d4 <_fpadd_parts+0x17c>
 512:	12 16       	cp	r1, r18
 514:	13 06       	cpc	r1, r19
 516:	6c f5       	brge	.+90     	; 0x572 <_fpadd_parts+0x11a>
 518:	37 01       	movw	r6, r14
 51a:	48 01       	movw	r8, r16
 51c:	06 2e       	mov	r0, r22
 51e:	04 c0       	rjmp	.+8      	; 0x528 <_fpadd_parts+0xd0>
 520:	96 94       	lsr	r9
 522:	87 94       	ror	r8
 524:	77 94       	ror	r7
 526:	67 94       	ror	r6
 528:	0a 94       	dec	r0
 52a:	d2 f7       	brpl	.-12     	; 0x520 <_fpadd_parts+0xc8>
 52c:	21 e0       	ldi	r18, 0x01	; 1
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	40 e0       	ldi	r20, 0x00	; 0
 532:	50 e0       	ldi	r21, 0x00	; 0
 534:	04 c0       	rjmp	.+8      	; 0x53e <_fpadd_parts+0xe6>
 536:	22 0f       	add	r18, r18
 538:	33 1f       	adc	r19, r19
 53a:	44 1f       	adc	r20, r20
 53c:	55 1f       	adc	r21, r21
 53e:	6a 95       	dec	r22
 540:	d2 f7       	brpl	.-12     	; 0x536 <_fpadd_parts+0xde>
 542:	21 50       	subi	r18, 0x01	; 1
 544:	30 40       	sbci	r19, 0x00	; 0
 546:	40 40       	sbci	r20, 0x00	; 0
 548:	50 40       	sbci	r21, 0x00	; 0
 54a:	2e 21       	and	r18, r14
 54c:	3f 21       	and	r19, r15
 54e:	40 23       	and	r20, r16
 550:	51 23       	and	r21, r17
 552:	21 15       	cp	r18, r1
 554:	31 05       	cpc	r19, r1
 556:	41 05       	cpc	r20, r1
 558:	51 05       	cpc	r21, r1
 55a:	21 f0       	breq	.+8      	; 0x564 <_fpadd_parts+0x10c>
 55c:	21 e0       	ldi	r18, 0x01	; 1
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	40 e0       	ldi	r20, 0x00	; 0
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	79 01       	movw	r14, r18
 566:	8a 01       	movw	r16, r20
 568:	e6 28       	or	r14, r6
 56a:	f7 28       	or	r15, r7
 56c:	08 29       	or	r16, r8
 56e:	19 29       	or	r17, r9
 570:	3c c0       	rjmp	.+120    	; 0x5ea <_fpadd_parts+0x192>
 572:	23 2b       	or	r18, r19
 574:	d1 f1       	breq	.+116    	; 0x5ea <_fpadd_parts+0x192>
 576:	26 0e       	add	r2, r22
 578:	37 1e       	adc	r3, r23
 57a:	35 01       	movw	r6, r10
 57c:	46 01       	movw	r8, r12
 57e:	06 2e       	mov	r0, r22
 580:	04 c0       	rjmp	.+8      	; 0x58a <_fpadd_parts+0x132>
 582:	96 94       	lsr	r9
 584:	87 94       	ror	r8
 586:	77 94       	ror	r7
 588:	67 94       	ror	r6
 58a:	0a 94       	dec	r0
 58c:	d2 f7       	brpl	.-12     	; 0x582 <_fpadd_parts+0x12a>
 58e:	21 e0       	ldi	r18, 0x01	; 1
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	40 e0       	ldi	r20, 0x00	; 0
 594:	50 e0       	ldi	r21, 0x00	; 0
 596:	04 c0       	rjmp	.+8      	; 0x5a0 <_fpadd_parts+0x148>
 598:	22 0f       	add	r18, r18
 59a:	33 1f       	adc	r19, r19
 59c:	44 1f       	adc	r20, r20
 59e:	55 1f       	adc	r21, r21
 5a0:	6a 95       	dec	r22
 5a2:	d2 f7       	brpl	.-12     	; 0x598 <_fpadd_parts+0x140>
 5a4:	21 50       	subi	r18, 0x01	; 1
 5a6:	30 40       	sbci	r19, 0x00	; 0
 5a8:	40 40       	sbci	r20, 0x00	; 0
 5aa:	50 40       	sbci	r21, 0x00	; 0
 5ac:	2a 21       	and	r18, r10
 5ae:	3b 21       	and	r19, r11
 5b0:	4c 21       	and	r20, r12
 5b2:	5d 21       	and	r21, r13
 5b4:	21 15       	cp	r18, r1
 5b6:	31 05       	cpc	r19, r1
 5b8:	41 05       	cpc	r20, r1
 5ba:	51 05       	cpc	r21, r1
 5bc:	21 f0       	breq	.+8      	; 0x5c6 <_fpadd_parts+0x16e>
 5be:	21 e0       	ldi	r18, 0x01	; 1
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	40 e0       	ldi	r20, 0x00	; 0
 5c4:	50 e0       	ldi	r21, 0x00	; 0
 5c6:	59 01       	movw	r10, r18
 5c8:	6a 01       	movw	r12, r20
 5ca:	a6 28       	or	r10, r6
 5cc:	b7 28       	or	r11, r7
 5ce:	c8 28       	or	r12, r8
 5d0:	d9 28       	or	r13, r9
 5d2:	0b c0       	rjmp	.+22     	; 0x5ea <_fpadd_parts+0x192>
 5d4:	82 15       	cp	r24, r2
 5d6:	93 05       	cpc	r25, r3
 5d8:	2c f0       	brlt	.+10     	; 0x5e4 <_fpadd_parts+0x18c>
 5da:	1c 01       	movw	r2, r24
 5dc:	aa 24       	eor	r10, r10
 5de:	bb 24       	eor	r11, r11
 5e0:	65 01       	movw	r12, r10
 5e2:	03 c0       	rjmp	.+6      	; 0x5ea <_fpadd_parts+0x192>
 5e4:	ee 24       	eor	r14, r14
 5e6:	ff 24       	eor	r15, r15
 5e8:	87 01       	movw	r16, r14
 5ea:	11 96       	adiw	r26, 0x01	; 1
 5ec:	9c 91       	ld	r25, X
 5ee:	d2 01       	movw	r26, r4
 5f0:	11 96       	adiw	r26, 0x01	; 1
 5f2:	8c 91       	ld	r24, X
 5f4:	98 17       	cp	r25, r24
 5f6:	09 f4       	brne	.+2      	; 0x5fa <_fpadd_parts+0x1a2>
 5f8:	45 c0       	rjmp	.+138    	; 0x684 <_fpadd_parts+0x22c>
 5fa:	99 23       	and	r25, r25
 5fc:	39 f0       	breq	.+14     	; 0x60c <_fpadd_parts+0x1b4>
 5fe:	a8 01       	movw	r20, r16
 600:	97 01       	movw	r18, r14
 602:	2a 19       	sub	r18, r10
 604:	3b 09       	sbc	r19, r11
 606:	4c 09       	sbc	r20, r12
 608:	5d 09       	sbc	r21, r13
 60a:	06 c0       	rjmp	.+12     	; 0x618 <_fpadd_parts+0x1c0>
 60c:	a6 01       	movw	r20, r12
 60e:	95 01       	movw	r18, r10
 610:	2e 19       	sub	r18, r14
 612:	3f 09       	sbc	r19, r15
 614:	40 0b       	sbc	r20, r16
 616:	51 0b       	sbc	r21, r17
 618:	57 fd       	sbrc	r21, 7
 61a:	08 c0       	rjmp	.+16     	; 0x62c <_fpadd_parts+0x1d4>
 61c:	11 82       	std	Z+1, r1	; 0x01
 61e:	33 82       	std	Z+3, r3	; 0x03
 620:	22 82       	std	Z+2, r2	; 0x02
 622:	24 83       	std	Z+4, r18	; 0x04
 624:	35 83       	std	Z+5, r19	; 0x05
 626:	46 83       	std	Z+6, r20	; 0x06
 628:	57 83       	std	Z+7, r21	; 0x07
 62a:	1d c0       	rjmp	.+58     	; 0x666 <_fpadd_parts+0x20e>
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	81 83       	std	Z+1, r24	; 0x01
 630:	33 82       	std	Z+3, r3	; 0x03
 632:	22 82       	std	Z+2, r2	; 0x02
 634:	88 27       	eor	r24, r24
 636:	99 27       	eor	r25, r25
 638:	dc 01       	movw	r26, r24
 63a:	82 1b       	sub	r24, r18
 63c:	93 0b       	sbc	r25, r19
 63e:	a4 0b       	sbc	r26, r20
 640:	b5 0b       	sbc	r27, r21
 642:	84 83       	std	Z+4, r24	; 0x04
 644:	95 83       	std	Z+5, r25	; 0x05
 646:	a6 83       	std	Z+6, r26	; 0x06
 648:	b7 83       	std	Z+7, r27	; 0x07
 64a:	0d c0       	rjmp	.+26     	; 0x666 <_fpadd_parts+0x20e>
 64c:	22 0f       	add	r18, r18
 64e:	33 1f       	adc	r19, r19
 650:	44 1f       	adc	r20, r20
 652:	55 1f       	adc	r21, r21
 654:	24 83       	std	Z+4, r18	; 0x04
 656:	35 83       	std	Z+5, r19	; 0x05
 658:	46 83       	std	Z+6, r20	; 0x06
 65a:	57 83       	std	Z+7, r21	; 0x07
 65c:	82 81       	ldd	r24, Z+2	; 0x02
 65e:	93 81       	ldd	r25, Z+3	; 0x03
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	93 83       	std	Z+3, r25	; 0x03
 664:	82 83       	std	Z+2, r24	; 0x02
 666:	24 81       	ldd	r18, Z+4	; 0x04
 668:	35 81       	ldd	r19, Z+5	; 0x05
 66a:	46 81       	ldd	r20, Z+6	; 0x06
 66c:	57 81       	ldd	r21, Z+7	; 0x07
 66e:	da 01       	movw	r26, r20
 670:	c9 01       	movw	r24, r18
 672:	01 97       	sbiw	r24, 0x01	; 1
 674:	a1 09       	sbc	r26, r1
 676:	b1 09       	sbc	r27, r1
 678:	8f 5f       	subi	r24, 0xFF	; 255
 67a:	9f 4f       	sbci	r25, 0xFF	; 255
 67c:	af 4f       	sbci	r26, 0xFF	; 255
 67e:	bf 43       	sbci	r27, 0x3F	; 63
 680:	28 f3       	brcs	.-54     	; 0x64c <_fpadd_parts+0x1f4>
 682:	0b c0       	rjmp	.+22     	; 0x69a <_fpadd_parts+0x242>
 684:	91 83       	std	Z+1, r25	; 0x01
 686:	33 82       	std	Z+3, r3	; 0x03
 688:	22 82       	std	Z+2, r2	; 0x02
 68a:	ea 0c       	add	r14, r10
 68c:	fb 1c       	adc	r15, r11
 68e:	0c 1d       	adc	r16, r12
 690:	1d 1d       	adc	r17, r13
 692:	e4 82       	std	Z+4, r14	; 0x04
 694:	f5 82       	std	Z+5, r15	; 0x05
 696:	06 83       	std	Z+6, r16	; 0x06
 698:	17 83       	std	Z+7, r17	; 0x07
 69a:	83 e0       	ldi	r24, 0x03	; 3
 69c:	80 83       	st	Z, r24
 69e:	24 81       	ldd	r18, Z+4	; 0x04
 6a0:	35 81       	ldd	r19, Z+5	; 0x05
 6a2:	46 81       	ldd	r20, Z+6	; 0x06
 6a4:	57 81       	ldd	r21, Z+7	; 0x07
 6a6:	57 ff       	sbrs	r21, 7
 6a8:	1a c0       	rjmp	.+52     	; 0x6de <_fpadd_parts+0x286>
 6aa:	c9 01       	movw	r24, r18
 6ac:	aa 27       	eor	r26, r26
 6ae:	97 fd       	sbrc	r25, 7
 6b0:	a0 95       	com	r26
 6b2:	ba 2f       	mov	r27, r26
 6b4:	81 70       	andi	r24, 0x01	; 1
 6b6:	90 70       	andi	r25, 0x00	; 0
 6b8:	a0 70       	andi	r26, 0x00	; 0
 6ba:	b0 70       	andi	r27, 0x00	; 0
 6bc:	56 95       	lsr	r21
 6be:	47 95       	ror	r20
 6c0:	37 95       	ror	r19
 6c2:	27 95       	ror	r18
 6c4:	82 2b       	or	r24, r18
 6c6:	93 2b       	or	r25, r19
 6c8:	a4 2b       	or	r26, r20
 6ca:	b5 2b       	or	r27, r21
 6cc:	84 83       	std	Z+4, r24	; 0x04
 6ce:	95 83       	std	Z+5, r25	; 0x05
 6d0:	a6 83       	std	Z+6, r26	; 0x06
 6d2:	b7 83       	std	Z+7, r27	; 0x07
 6d4:	82 81       	ldd	r24, Z+2	; 0x02
 6d6:	93 81       	ldd	r25, Z+3	; 0x03
 6d8:	01 96       	adiw	r24, 0x01	; 1
 6da:	93 83       	std	Z+3, r25	; 0x03
 6dc:	82 83       	std	Z+2, r24	; 0x02
 6de:	df 01       	movw	r26, r30
 6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <_fpadd_parts+0x28c>
 6e2:	d2 01       	movw	r26, r4
 6e4:	cd 01       	movw	r24, r26
 6e6:	cd b7       	in	r28, 0x3d	; 61
 6e8:	de b7       	in	r29, 0x3e	; 62
 6ea:	e2 e1       	ldi	r30, 0x12	; 18
 6ec:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__epilogue_restores__>

000006f0 <__subsf3>:
 6f0:	a0 e2       	ldi	r26, 0x20	; 32
 6f2:	b0 e0       	ldi	r27, 0x00	; 0
 6f4:	ee e7       	ldi	r30, 0x7E	; 126
 6f6:	f3 e0       	ldi	r31, 0x03	; 3
 6f8:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__prologue_saves__+0x18>
 6fc:	69 83       	std	Y+1, r22	; 0x01
 6fe:	7a 83       	std	Y+2, r23	; 0x02
 700:	8b 83       	std	Y+3, r24	; 0x03
 702:	9c 83       	std	Y+4, r25	; 0x04
 704:	2d 83       	std	Y+5, r18	; 0x05
 706:	3e 83       	std	Y+6, r19	; 0x06
 708:	4f 83       	std	Y+7, r20	; 0x07
 70a:	58 87       	std	Y+8, r21	; 0x08
 70c:	e9 e0       	ldi	r30, 0x09	; 9
 70e:	ee 2e       	mov	r14, r30
 710:	f1 2c       	mov	r15, r1
 712:	ec 0e       	add	r14, r28
 714:	fd 1e       	adc	r15, r29
 716:	ce 01       	movw	r24, r28
 718:	01 96       	adiw	r24, 0x01	; 1
 71a:	b7 01       	movw	r22, r14
 71c:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 720:	8e 01       	movw	r16, r28
 722:	0f 5e       	subi	r16, 0xEF	; 239
 724:	1f 4f       	sbci	r17, 0xFF	; 255
 726:	ce 01       	movw	r24, r28
 728:	05 96       	adiw	r24, 0x05	; 5
 72a:	b8 01       	movw	r22, r16
 72c:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 730:	8a 89       	ldd	r24, Y+18	; 0x12
 732:	91 e0       	ldi	r25, 0x01	; 1
 734:	89 27       	eor	r24, r25
 736:	8a 8b       	std	Y+18, r24	; 0x12
 738:	c7 01       	movw	r24, r14
 73a:	b8 01       	movw	r22, r16
 73c:	ae 01       	movw	r20, r28
 73e:	47 5e       	subi	r20, 0xE7	; 231
 740:	5f 4f       	sbci	r21, 0xFF	; 255
 742:	0e 94 2c 02 	call	0x458	; 0x458 <_fpadd_parts>
 746:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__pack_f>
 74a:	a0 96       	adiw	r28, 0x20	; 32
 74c:	e6 e0       	ldi	r30, 0x06	; 6
 74e:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <__epilogue_restores__+0x18>

00000752 <__addsf3>:
 752:	a0 e2       	ldi	r26, 0x20	; 32
 754:	b0 e0       	ldi	r27, 0x00	; 0
 756:	ef ea       	ldi	r30, 0xAF	; 175
 758:	f3 e0       	ldi	r31, 0x03	; 3
 75a:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__prologue_saves__+0x18>
 75e:	69 83       	std	Y+1, r22	; 0x01
 760:	7a 83       	std	Y+2, r23	; 0x02
 762:	8b 83       	std	Y+3, r24	; 0x03
 764:	9c 83       	std	Y+4, r25	; 0x04
 766:	2d 83       	std	Y+5, r18	; 0x05
 768:	3e 83       	std	Y+6, r19	; 0x06
 76a:	4f 83       	std	Y+7, r20	; 0x07
 76c:	58 87       	std	Y+8, r21	; 0x08
 76e:	f9 e0       	ldi	r31, 0x09	; 9
 770:	ef 2e       	mov	r14, r31
 772:	f1 2c       	mov	r15, r1
 774:	ec 0e       	add	r14, r28
 776:	fd 1e       	adc	r15, r29
 778:	ce 01       	movw	r24, r28
 77a:	01 96       	adiw	r24, 0x01	; 1
 77c:	b7 01       	movw	r22, r14
 77e:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 782:	8e 01       	movw	r16, r28
 784:	0f 5e       	subi	r16, 0xEF	; 239
 786:	1f 4f       	sbci	r17, 0xFF	; 255
 788:	ce 01       	movw	r24, r28
 78a:	05 96       	adiw	r24, 0x05	; 5
 78c:	b8 01       	movw	r22, r16
 78e:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 792:	c7 01       	movw	r24, r14
 794:	b8 01       	movw	r22, r16
 796:	ae 01       	movw	r20, r28
 798:	47 5e       	subi	r20, 0xE7	; 231
 79a:	5f 4f       	sbci	r21, 0xFF	; 255
 79c:	0e 94 2c 02 	call	0x458	; 0x458 <_fpadd_parts>
 7a0:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__pack_f>
 7a4:	a0 96       	adiw	r28, 0x20	; 32
 7a6:	e6 e0       	ldi	r30, 0x06	; 6
 7a8:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <__epilogue_restores__+0x18>

000007ac <__mulsf3>:
 7ac:	a0 e2       	ldi	r26, 0x20	; 32
 7ae:	b0 e0       	ldi	r27, 0x00	; 0
 7b0:	ec ed       	ldi	r30, 0xDC	; 220
 7b2:	f3 e0       	ldi	r31, 0x03	; 3
 7b4:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__prologue_saves__>
 7b8:	69 83       	std	Y+1, r22	; 0x01
 7ba:	7a 83       	std	Y+2, r23	; 0x02
 7bc:	8b 83       	std	Y+3, r24	; 0x03
 7be:	9c 83       	std	Y+4, r25	; 0x04
 7c0:	2d 83       	std	Y+5, r18	; 0x05
 7c2:	3e 83       	std	Y+6, r19	; 0x06
 7c4:	4f 83       	std	Y+7, r20	; 0x07
 7c6:	58 87       	std	Y+8, r21	; 0x08
 7c8:	ce 01       	movw	r24, r28
 7ca:	01 96       	adiw	r24, 0x01	; 1
 7cc:	be 01       	movw	r22, r28
 7ce:	67 5f       	subi	r22, 0xF7	; 247
 7d0:	7f 4f       	sbci	r23, 0xFF	; 255
 7d2:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 7d6:	ce 01       	movw	r24, r28
 7d8:	05 96       	adiw	r24, 0x05	; 5
 7da:	be 01       	movw	r22, r28
 7dc:	6f 5e       	subi	r22, 0xEF	; 239
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 7e4:	99 85       	ldd	r25, Y+9	; 0x09
 7e6:	92 30       	cpi	r25, 0x02	; 2
 7e8:	88 f0       	brcs	.+34     	; 0x80c <__mulsf3+0x60>
 7ea:	89 89       	ldd	r24, Y+17	; 0x11
 7ec:	82 30       	cpi	r24, 0x02	; 2
 7ee:	c8 f0       	brcs	.+50     	; 0x822 <__mulsf3+0x76>
 7f0:	94 30       	cpi	r25, 0x04	; 4
 7f2:	19 f4       	brne	.+6      	; 0x7fa <__mulsf3+0x4e>
 7f4:	82 30       	cpi	r24, 0x02	; 2
 7f6:	51 f4       	brne	.+20     	; 0x80c <__mulsf3+0x60>
 7f8:	04 c0       	rjmp	.+8      	; 0x802 <__mulsf3+0x56>
 7fa:	84 30       	cpi	r24, 0x04	; 4
 7fc:	29 f4       	brne	.+10     	; 0x808 <__mulsf3+0x5c>
 7fe:	92 30       	cpi	r25, 0x02	; 2
 800:	81 f4       	brne	.+32     	; 0x822 <__mulsf3+0x76>
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	91 e0       	ldi	r25, 0x01	; 1
 806:	c6 c0       	rjmp	.+396    	; 0x994 <__stack+0x95>
 808:	92 30       	cpi	r25, 0x02	; 2
 80a:	49 f4       	brne	.+18     	; 0x81e <__mulsf3+0x72>
 80c:	20 e0       	ldi	r18, 0x00	; 0
 80e:	9a 85       	ldd	r25, Y+10	; 0x0a
 810:	8a 89       	ldd	r24, Y+18	; 0x12
 812:	98 13       	cpse	r25, r24
 814:	21 e0       	ldi	r18, 0x01	; 1
 816:	2a 87       	std	Y+10, r18	; 0x0a
 818:	ce 01       	movw	r24, r28
 81a:	09 96       	adiw	r24, 0x09	; 9
 81c:	bb c0       	rjmp	.+374    	; 0x994 <__stack+0x95>
 81e:	82 30       	cpi	r24, 0x02	; 2
 820:	49 f4       	brne	.+18     	; 0x834 <__mulsf3+0x88>
 822:	20 e0       	ldi	r18, 0x00	; 0
 824:	9a 85       	ldd	r25, Y+10	; 0x0a
 826:	8a 89       	ldd	r24, Y+18	; 0x12
 828:	98 13       	cpse	r25, r24
 82a:	21 e0       	ldi	r18, 0x01	; 1
 82c:	2a 8b       	std	Y+18, r18	; 0x12
 82e:	ce 01       	movw	r24, r28
 830:	41 96       	adiw	r24, 0x11	; 17
 832:	b0 c0       	rjmp	.+352    	; 0x994 <__stack+0x95>
 834:	2d 84       	ldd	r2, Y+13	; 0x0d
 836:	3e 84       	ldd	r3, Y+14	; 0x0e
 838:	4f 84       	ldd	r4, Y+15	; 0x0f
 83a:	58 88       	ldd	r5, Y+16	; 0x10
 83c:	6d 88       	ldd	r6, Y+21	; 0x15
 83e:	7e 88       	ldd	r7, Y+22	; 0x16
 840:	8f 88       	ldd	r8, Y+23	; 0x17
 842:	98 8c       	ldd	r9, Y+24	; 0x18
 844:	ee 24       	eor	r14, r14
 846:	ff 24       	eor	r15, r15
 848:	87 01       	movw	r16, r14
 84a:	aa 24       	eor	r10, r10
 84c:	bb 24       	eor	r11, r11
 84e:	65 01       	movw	r12, r10
 850:	40 e0       	ldi	r20, 0x00	; 0
 852:	50 e0       	ldi	r21, 0x00	; 0
 854:	60 e0       	ldi	r22, 0x00	; 0
 856:	70 e0       	ldi	r23, 0x00	; 0
 858:	e0 e0       	ldi	r30, 0x00	; 0
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	c1 01       	movw	r24, r2
 85e:	81 70       	andi	r24, 0x01	; 1
 860:	90 70       	andi	r25, 0x00	; 0
 862:	89 2b       	or	r24, r25
 864:	e9 f0       	breq	.+58     	; 0x8a0 <__mulsf3+0xf4>
 866:	e6 0c       	add	r14, r6
 868:	f7 1c       	adc	r15, r7
 86a:	08 1d       	adc	r16, r8
 86c:	19 1d       	adc	r17, r9
 86e:	9a 01       	movw	r18, r20
 870:	ab 01       	movw	r20, r22
 872:	2a 0d       	add	r18, r10
 874:	3b 1d       	adc	r19, r11
 876:	4c 1d       	adc	r20, r12
 878:	5d 1d       	adc	r21, r13
 87a:	80 e0       	ldi	r24, 0x00	; 0
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	a0 e0       	ldi	r26, 0x00	; 0
 880:	b0 e0       	ldi	r27, 0x00	; 0
 882:	e6 14       	cp	r14, r6
 884:	f7 04       	cpc	r15, r7
 886:	08 05       	cpc	r16, r8
 888:	19 05       	cpc	r17, r9
 88a:	20 f4       	brcc	.+8      	; 0x894 <__mulsf3+0xe8>
 88c:	81 e0       	ldi	r24, 0x01	; 1
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	a0 e0       	ldi	r26, 0x00	; 0
 892:	b0 e0       	ldi	r27, 0x00	; 0
 894:	ba 01       	movw	r22, r20
 896:	a9 01       	movw	r20, r18
 898:	48 0f       	add	r20, r24
 89a:	59 1f       	adc	r21, r25
 89c:	6a 1f       	adc	r22, r26
 89e:	7b 1f       	adc	r23, r27
 8a0:	aa 0c       	add	r10, r10
 8a2:	bb 1c       	adc	r11, r11
 8a4:	cc 1c       	adc	r12, r12
 8a6:	dd 1c       	adc	r13, r13
 8a8:	97 fe       	sbrs	r9, 7
 8aa:	08 c0       	rjmp	.+16     	; 0x8bc <__mulsf3+0x110>
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	a0 e0       	ldi	r26, 0x00	; 0
 8b2:	b0 e0       	ldi	r27, 0x00	; 0
 8b4:	a8 2a       	or	r10, r24
 8b6:	b9 2a       	or	r11, r25
 8b8:	ca 2a       	or	r12, r26
 8ba:	db 2a       	or	r13, r27
 8bc:	31 96       	adiw	r30, 0x01	; 1
 8be:	e0 32       	cpi	r30, 0x20	; 32
 8c0:	f1 05       	cpc	r31, r1
 8c2:	49 f0       	breq	.+18     	; 0x8d6 <__mulsf3+0x12a>
 8c4:	66 0c       	add	r6, r6
 8c6:	77 1c       	adc	r7, r7
 8c8:	88 1c       	adc	r8, r8
 8ca:	99 1c       	adc	r9, r9
 8cc:	56 94       	lsr	r5
 8ce:	47 94       	ror	r4
 8d0:	37 94       	ror	r3
 8d2:	27 94       	ror	r2
 8d4:	c3 cf       	rjmp	.-122    	; 0x85c <__mulsf3+0xb0>
 8d6:	fa 85       	ldd	r31, Y+10	; 0x0a
 8d8:	ea 89       	ldd	r30, Y+18	; 0x12
 8da:	2b 89       	ldd	r18, Y+19	; 0x13
 8dc:	3c 89       	ldd	r19, Y+20	; 0x14
 8de:	8b 85       	ldd	r24, Y+11	; 0x0b
 8e0:	9c 85       	ldd	r25, Y+12	; 0x0c
 8e2:	28 0f       	add	r18, r24
 8e4:	39 1f       	adc	r19, r25
 8e6:	2e 5f       	subi	r18, 0xFE	; 254
 8e8:	3f 4f       	sbci	r19, 0xFF	; 255
 8ea:	17 c0       	rjmp	.+46     	; 0x91a <__stack+0x1b>
 8ec:	ca 01       	movw	r24, r20
 8ee:	81 70       	andi	r24, 0x01	; 1
 8f0:	90 70       	andi	r25, 0x00	; 0
 8f2:	89 2b       	or	r24, r25
 8f4:	61 f0       	breq	.+24     	; 0x90e <__stack+0xf>
 8f6:	16 95       	lsr	r17
 8f8:	07 95       	ror	r16
 8fa:	f7 94       	ror	r15
 8fc:	e7 94       	ror	r14
 8fe:	80 e0       	ldi	r24, 0x00	; 0
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	a0 e0       	ldi	r26, 0x00	; 0
 904:	b0 e8       	ldi	r27, 0x80	; 128
 906:	e8 2a       	or	r14, r24
 908:	f9 2a       	or	r15, r25
 90a:	0a 2b       	or	r16, r26
 90c:	1b 2b       	or	r17, r27
 90e:	76 95       	lsr	r23
 910:	67 95       	ror	r22
 912:	57 95       	ror	r21
 914:	47 95       	ror	r20
 916:	2f 5f       	subi	r18, 0xFF	; 255
 918:	3f 4f       	sbci	r19, 0xFF	; 255
 91a:	77 fd       	sbrc	r23, 7
 91c:	e7 cf       	rjmp	.-50     	; 0x8ec <__mulsf3+0x140>
 91e:	0c c0       	rjmp	.+24     	; 0x938 <__stack+0x39>
 920:	44 0f       	add	r20, r20
 922:	55 1f       	adc	r21, r21
 924:	66 1f       	adc	r22, r22
 926:	77 1f       	adc	r23, r23
 928:	17 fd       	sbrc	r17, 7
 92a:	41 60       	ori	r20, 0x01	; 1
 92c:	ee 0c       	add	r14, r14
 92e:	ff 1c       	adc	r15, r15
 930:	00 1f       	adc	r16, r16
 932:	11 1f       	adc	r17, r17
 934:	21 50       	subi	r18, 0x01	; 1
 936:	30 40       	sbci	r19, 0x00	; 0
 938:	40 30       	cpi	r20, 0x00	; 0
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	59 07       	cpc	r21, r25
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	69 07       	cpc	r22, r25
 942:	90 e4       	ldi	r25, 0x40	; 64
 944:	79 07       	cpc	r23, r25
 946:	60 f3       	brcs	.-40     	; 0x920 <__stack+0x21>
 948:	2b 8f       	std	Y+27, r18	; 0x1b
 94a:	3c 8f       	std	Y+28, r19	; 0x1c
 94c:	db 01       	movw	r26, r22
 94e:	ca 01       	movw	r24, r20
 950:	8f 77       	andi	r24, 0x7F	; 127
 952:	90 70       	andi	r25, 0x00	; 0
 954:	a0 70       	andi	r26, 0x00	; 0
 956:	b0 70       	andi	r27, 0x00	; 0
 958:	80 34       	cpi	r24, 0x40	; 64
 95a:	91 05       	cpc	r25, r1
 95c:	a1 05       	cpc	r26, r1
 95e:	b1 05       	cpc	r27, r1
 960:	61 f4       	brne	.+24     	; 0x97a <__stack+0x7b>
 962:	47 fd       	sbrc	r20, 7
 964:	0a c0       	rjmp	.+20     	; 0x97a <__stack+0x7b>
 966:	e1 14       	cp	r14, r1
 968:	f1 04       	cpc	r15, r1
 96a:	01 05       	cpc	r16, r1
 96c:	11 05       	cpc	r17, r1
 96e:	29 f0       	breq	.+10     	; 0x97a <__stack+0x7b>
 970:	40 5c       	subi	r20, 0xC0	; 192
 972:	5f 4f       	sbci	r21, 0xFF	; 255
 974:	6f 4f       	sbci	r22, 0xFF	; 255
 976:	7f 4f       	sbci	r23, 0xFF	; 255
 978:	40 78       	andi	r20, 0x80	; 128
 97a:	1a 8e       	std	Y+26, r1	; 0x1a
 97c:	fe 17       	cp	r31, r30
 97e:	11 f0       	breq	.+4      	; 0x984 <__stack+0x85>
 980:	81 e0       	ldi	r24, 0x01	; 1
 982:	8a 8f       	std	Y+26, r24	; 0x1a
 984:	4d 8f       	std	Y+29, r20	; 0x1d
 986:	5e 8f       	std	Y+30, r21	; 0x1e
 988:	6f 8f       	std	Y+31, r22	; 0x1f
 98a:	78 a3       	std	Y+32, r23	; 0x20
 98c:	83 e0       	ldi	r24, 0x03	; 3
 98e:	89 8f       	std	Y+25, r24	; 0x19
 990:	ce 01       	movw	r24, r28
 992:	49 96       	adiw	r24, 0x19	; 25
 994:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__pack_f>
 998:	a0 96       	adiw	r28, 0x20	; 32
 99a:	e2 e1       	ldi	r30, 0x12	; 18
 99c:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__epilogue_restores__>

000009a0 <__divsf3>:
 9a0:	a8 e1       	ldi	r26, 0x18	; 24
 9a2:	b0 e0       	ldi	r27, 0x00	; 0
 9a4:	e6 ed       	ldi	r30, 0xD6	; 214
 9a6:	f4 e0       	ldi	r31, 0x04	; 4
 9a8:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__prologue_saves__+0x10>
 9ac:	69 83       	std	Y+1, r22	; 0x01
 9ae:	7a 83       	std	Y+2, r23	; 0x02
 9b0:	8b 83       	std	Y+3, r24	; 0x03
 9b2:	9c 83       	std	Y+4, r25	; 0x04
 9b4:	2d 83       	std	Y+5, r18	; 0x05
 9b6:	3e 83       	std	Y+6, r19	; 0x06
 9b8:	4f 83       	std	Y+7, r20	; 0x07
 9ba:	58 87       	std	Y+8, r21	; 0x08
 9bc:	b9 e0       	ldi	r27, 0x09	; 9
 9be:	eb 2e       	mov	r14, r27
 9c0:	f1 2c       	mov	r15, r1
 9c2:	ec 0e       	add	r14, r28
 9c4:	fd 1e       	adc	r15, r29
 9c6:	ce 01       	movw	r24, r28
 9c8:	01 96       	adiw	r24, 0x01	; 1
 9ca:	b7 01       	movw	r22, r14
 9cc:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 9d0:	8e 01       	movw	r16, r28
 9d2:	0f 5e       	subi	r16, 0xEF	; 239
 9d4:	1f 4f       	sbci	r17, 0xFF	; 255
 9d6:	ce 01       	movw	r24, r28
 9d8:	05 96       	adiw	r24, 0x05	; 5
 9da:	b8 01       	movw	r22, r16
 9dc:	0e 94 51 06 	call	0xca2	; 0xca2 <__unpack_f>
 9e0:	29 85       	ldd	r18, Y+9	; 0x09
 9e2:	22 30       	cpi	r18, 0x02	; 2
 9e4:	08 f4       	brcc	.+2      	; 0x9e8 <__divsf3+0x48>
 9e6:	7e c0       	rjmp	.+252    	; 0xae4 <__divsf3+0x144>
 9e8:	39 89       	ldd	r19, Y+17	; 0x11
 9ea:	32 30       	cpi	r19, 0x02	; 2
 9ec:	10 f4       	brcc	.+4      	; 0x9f2 <__divsf3+0x52>
 9ee:	b8 01       	movw	r22, r16
 9f0:	7c c0       	rjmp	.+248    	; 0xaea <__divsf3+0x14a>
 9f2:	8a 85       	ldd	r24, Y+10	; 0x0a
 9f4:	9a 89       	ldd	r25, Y+18	; 0x12
 9f6:	89 27       	eor	r24, r25
 9f8:	8a 87       	std	Y+10, r24	; 0x0a
 9fa:	24 30       	cpi	r18, 0x04	; 4
 9fc:	11 f0       	breq	.+4      	; 0xa02 <__divsf3+0x62>
 9fe:	22 30       	cpi	r18, 0x02	; 2
 a00:	31 f4       	brne	.+12     	; 0xa0e <__divsf3+0x6e>
 a02:	23 17       	cp	r18, r19
 a04:	09 f0       	breq	.+2      	; 0xa08 <__divsf3+0x68>
 a06:	6e c0       	rjmp	.+220    	; 0xae4 <__divsf3+0x144>
 a08:	60 e0       	ldi	r22, 0x00	; 0
 a0a:	71 e0       	ldi	r23, 0x01	; 1
 a0c:	6e c0       	rjmp	.+220    	; 0xaea <__divsf3+0x14a>
 a0e:	34 30       	cpi	r19, 0x04	; 4
 a10:	39 f4       	brne	.+14     	; 0xa20 <__divsf3+0x80>
 a12:	1d 86       	std	Y+13, r1	; 0x0d
 a14:	1e 86       	std	Y+14, r1	; 0x0e
 a16:	1f 86       	std	Y+15, r1	; 0x0f
 a18:	18 8a       	std	Y+16, r1	; 0x10
 a1a:	1c 86       	std	Y+12, r1	; 0x0c
 a1c:	1b 86       	std	Y+11, r1	; 0x0b
 a1e:	04 c0       	rjmp	.+8      	; 0xa28 <__divsf3+0x88>
 a20:	32 30       	cpi	r19, 0x02	; 2
 a22:	21 f4       	brne	.+8      	; 0xa2c <__divsf3+0x8c>
 a24:	84 e0       	ldi	r24, 0x04	; 4
 a26:	89 87       	std	Y+9, r24	; 0x09
 a28:	b7 01       	movw	r22, r14
 a2a:	5f c0       	rjmp	.+190    	; 0xaea <__divsf3+0x14a>
 a2c:	2b 85       	ldd	r18, Y+11	; 0x0b
 a2e:	3c 85       	ldd	r19, Y+12	; 0x0c
 a30:	8b 89       	ldd	r24, Y+19	; 0x13
 a32:	9c 89       	ldd	r25, Y+20	; 0x14
 a34:	28 1b       	sub	r18, r24
 a36:	39 0b       	sbc	r19, r25
 a38:	3c 87       	std	Y+12, r19	; 0x0c
 a3a:	2b 87       	std	Y+11, r18	; 0x0b
 a3c:	ed 84       	ldd	r14, Y+13	; 0x0d
 a3e:	fe 84       	ldd	r15, Y+14	; 0x0e
 a40:	0f 85       	ldd	r16, Y+15	; 0x0f
 a42:	18 89       	ldd	r17, Y+16	; 0x10
 a44:	ad 88       	ldd	r10, Y+21	; 0x15
 a46:	be 88       	ldd	r11, Y+22	; 0x16
 a48:	cf 88       	ldd	r12, Y+23	; 0x17
 a4a:	d8 8c       	ldd	r13, Y+24	; 0x18
 a4c:	ea 14       	cp	r14, r10
 a4e:	fb 04       	cpc	r15, r11
 a50:	0c 05       	cpc	r16, r12
 a52:	1d 05       	cpc	r17, r13
 a54:	40 f4       	brcc	.+16     	; 0xa66 <__divsf3+0xc6>
 a56:	ee 0c       	add	r14, r14
 a58:	ff 1c       	adc	r15, r15
 a5a:	00 1f       	adc	r16, r16
 a5c:	11 1f       	adc	r17, r17
 a5e:	21 50       	subi	r18, 0x01	; 1
 a60:	30 40       	sbci	r19, 0x00	; 0
 a62:	3c 87       	std	Y+12, r19	; 0x0c
 a64:	2b 87       	std	Y+11, r18	; 0x0b
 a66:	20 e0       	ldi	r18, 0x00	; 0
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	40 e0       	ldi	r20, 0x00	; 0
 a6c:	50 e0       	ldi	r21, 0x00	; 0
 a6e:	80 e0       	ldi	r24, 0x00	; 0
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	a0 e0       	ldi	r26, 0x00	; 0
 a74:	b0 e4       	ldi	r27, 0x40	; 64
 a76:	60 e0       	ldi	r22, 0x00	; 0
 a78:	70 e0       	ldi	r23, 0x00	; 0
 a7a:	ea 14       	cp	r14, r10
 a7c:	fb 04       	cpc	r15, r11
 a7e:	0c 05       	cpc	r16, r12
 a80:	1d 05       	cpc	r17, r13
 a82:	40 f0       	brcs	.+16     	; 0xa94 <__divsf3+0xf4>
 a84:	28 2b       	or	r18, r24
 a86:	39 2b       	or	r19, r25
 a88:	4a 2b       	or	r20, r26
 a8a:	5b 2b       	or	r21, r27
 a8c:	ea 18       	sub	r14, r10
 a8e:	fb 08       	sbc	r15, r11
 a90:	0c 09       	sbc	r16, r12
 a92:	1d 09       	sbc	r17, r13
 a94:	b6 95       	lsr	r27
 a96:	a7 95       	ror	r26
 a98:	97 95       	ror	r25
 a9a:	87 95       	ror	r24
 a9c:	ee 0c       	add	r14, r14
 a9e:	ff 1c       	adc	r15, r15
 aa0:	00 1f       	adc	r16, r16
 aa2:	11 1f       	adc	r17, r17
 aa4:	6f 5f       	subi	r22, 0xFF	; 255
 aa6:	7f 4f       	sbci	r23, 0xFF	; 255
 aa8:	6f 31       	cpi	r22, 0x1F	; 31
 aaa:	71 05       	cpc	r23, r1
 aac:	31 f7       	brne	.-52     	; 0xa7a <__divsf3+0xda>
 aae:	da 01       	movw	r26, r20
 ab0:	c9 01       	movw	r24, r18
 ab2:	8f 77       	andi	r24, 0x7F	; 127
 ab4:	90 70       	andi	r25, 0x00	; 0
 ab6:	a0 70       	andi	r26, 0x00	; 0
 ab8:	b0 70       	andi	r27, 0x00	; 0
 aba:	80 34       	cpi	r24, 0x40	; 64
 abc:	91 05       	cpc	r25, r1
 abe:	a1 05       	cpc	r26, r1
 ac0:	b1 05       	cpc	r27, r1
 ac2:	61 f4       	brne	.+24     	; 0xadc <__divsf3+0x13c>
 ac4:	27 fd       	sbrc	r18, 7
 ac6:	0a c0       	rjmp	.+20     	; 0xadc <__divsf3+0x13c>
 ac8:	e1 14       	cp	r14, r1
 aca:	f1 04       	cpc	r15, r1
 acc:	01 05       	cpc	r16, r1
 ace:	11 05       	cpc	r17, r1
 ad0:	29 f0       	breq	.+10     	; 0xadc <__divsf3+0x13c>
 ad2:	20 5c       	subi	r18, 0xC0	; 192
 ad4:	3f 4f       	sbci	r19, 0xFF	; 255
 ad6:	4f 4f       	sbci	r20, 0xFF	; 255
 ad8:	5f 4f       	sbci	r21, 0xFF	; 255
 ada:	20 78       	andi	r18, 0x80	; 128
 adc:	2d 87       	std	Y+13, r18	; 0x0d
 ade:	3e 87       	std	Y+14, r19	; 0x0e
 ae0:	4f 87       	std	Y+15, r20	; 0x0f
 ae2:	58 8b       	std	Y+16, r21	; 0x10
 ae4:	be 01       	movw	r22, r28
 ae6:	67 5f       	subi	r22, 0xF7	; 247
 ae8:	7f 4f       	sbci	r23, 0xFF	; 255
 aea:	cb 01       	movw	r24, r22
 aec:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__pack_f>
 af0:	68 96       	adiw	r28, 0x18	; 24
 af2:	ea e0       	ldi	r30, 0x0A	; 10
 af4:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__epilogue_restores__+0x10>

00000af8 <__pack_f>:
 af8:	df 92       	push	r13
 afa:	ef 92       	push	r14
 afc:	ff 92       	push	r15
 afe:	0f 93       	push	r16
 b00:	1f 93       	push	r17
 b02:	fc 01       	movw	r30, r24
 b04:	e4 80       	ldd	r14, Z+4	; 0x04
 b06:	f5 80       	ldd	r15, Z+5	; 0x05
 b08:	06 81       	ldd	r16, Z+6	; 0x06
 b0a:	17 81       	ldd	r17, Z+7	; 0x07
 b0c:	d1 80       	ldd	r13, Z+1	; 0x01
 b0e:	80 81       	ld	r24, Z
 b10:	82 30       	cpi	r24, 0x02	; 2
 b12:	48 f4       	brcc	.+18     	; 0xb26 <__pack_f+0x2e>
 b14:	80 e0       	ldi	r24, 0x00	; 0
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	a0 e1       	ldi	r26, 0x10	; 16
 b1a:	b0 e0       	ldi	r27, 0x00	; 0
 b1c:	e8 2a       	or	r14, r24
 b1e:	f9 2a       	or	r15, r25
 b20:	0a 2b       	or	r16, r26
 b22:	1b 2b       	or	r17, r27
 b24:	a5 c0       	rjmp	.+330    	; 0xc70 <__pack_f+0x178>
 b26:	84 30       	cpi	r24, 0x04	; 4
 b28:	09 f4       	brne	.+2      	; 0xb2c <__pack_f+0x34>
 b2a:	9f c0       	rjmp	.+318    	; 0xc6a <__pack_f+0x172>
 b2c:	82 30       	cpi	r24, 0x02	; 2
 b2e:	21 f4       	brne	.+8      	; 0xb38 <__pack_f+0x40>
 b30:	ee 24       	eor	r14, r14
 b32:	ff 24       	eor	r15, r15
 b34:	87 01       	movw	r16, r14
 b36:	05 c0       	rjmp	.+10     	; 0xb42 <__pack_f+0x4a>
 b38:	e1 14       	cp	r14, r1
 b3a:	f1 04       	cpc	r15, r1
 b3c:	01 05       	cpc	r16, r1
 b3e:	11 05       	cpc	r17, r1
 b40:	19 f4       	brne	.+6      	; 0xb48 <__pack_f+0x50>
 b42:	e0 e0       	ldi	r30, 0x00	; 0
 b44:	f0 e0       	ldi	r31, 0x00	; 0
 b46:	96 c0       	rjmp	.+300    	; 0xc74 <__pack_f+0x17c>
 b48:	62 81       	ldd	r22, Z+2	; 0x02
 b4a:	73 81       	ldd	r23, Z+3	; 0x03
 b4c:	9f ef       	ldi	r25, 0xFF	; 255
 b4e:	62 38       	cpi	r22, 0x82	; 130
 b50:	79 07       	cpc	r23, r25
 b52:	0c f0       	brlt	.+2      	; 0xb56 <__pack_f+0x5e>
 b54:	5b c0       	rjmp	.+182    	; 0xc0c <__pack_f+0x114>
 b56:	22 e8       	ldi	r18, 0x82	; 130
 b58:	3f ef       	ldi	r19, 0xFF	; 255
 b5a:	26 1b       	sub	r18, r22
 b5c:	37 0b       	sbc	r19, r23
 b5e:	2a 31       	cpi	r18, 0x1A	; 26
 b60:	31 05       	cpc	r19, r1
 b62:	2c f0       	brlt	.+10     	; 0xb6e <__pack_f+0x76>
 b64:	20 e0       	ldi	r18, 0x00	; 0
 b66:	30 e0       	ldi	r19, 0x00	; 0
 b68:	40 e0       	ldi	r20, 0x00	; 0
 b6a:	50 e0       	ldi	r21, 0x00	; 0
 b6c:	2a c0       	rjmp	.+84     	; 0xbc2 <__pack_f+0xca>
 b6e:	b8 01       	movw	r22, r16
 b70:	a7 01       	movw	r20, r14
 b72:	02 2e       	mov	r0, r18
 b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x86>
 b76:	76 95       	lsr	r23
 b78:	67 95       	ror	r22
 b7a:	57 95       	ror	r21
 b7c:	47 95       	ror	r20
 b7e:	0a 94       	dec	r0
 b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x7e>
 b82:	81 e0       	ldi	r24, 0x01	; 1
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	a0 e0       	ldi	r26, 0x00	; 0
 b88:	b0 e0       	ldi	r27, 0x00	; 0
 b8a:	04 c0       	rjmp	.+8      	; 0xb94 <__pack_f+0x9c>
 b8c:	88 0f       	add	r24, r24
 b8e:	99 1f       	adc	r25, r25
 b90:	aa 1f       	adc	r26, r26
 b92:	bb 1f       	adc	r27, r27
 b94:	2a 95       	dec	r18
 b96:	d2 f7       	brpl	.-12     	; 0xb8c <__pack_f+0x94>
 b98:	01 97       	sbiw	r24, 0x01	; 1
 b9a:	a1 09       	sbc	r26, r1
 b9c:	b1 09       	sbc	r27, r1
 b9e:	8e 21       	and	r24, r14
 ba0:	9f 21       	and	r25, r15
 ba2:	a0 23       	and	r26, r16
 ba4:	b1 23       	and	r27, r17
 ba6:	00 97       	sbiw	r24, 0x00	; 0
 ba8:	a1 05       	cpc	r26, r1
 baa:	b1 05       	cpc	r27, r1
 bac:	21 f0       	breq	.+8      	; 0xbb6 <__pack_f+0xbe>
 bae:	81 e0       	ldi	r24, 0x01	; 1
 bb0:	90 e0       	ldi	r25, 0x00	; 0
 bb2:	a0 e0       	ldi	r26, 0x00	; 0
 bb4:	b0 e0       	ldi	r27, 0x00	; 0
 bb6:	9a 01       	movw	r18, r20
 bb8:	ab 01       	movw	r20, r22
 bba:	28 2b       	or	r18, r24
 bbc:	39 2b       	or	r19, r25
 bbe:	4a 2b       	or	r20, r26
 bc0:	5b 2b       	or	r21, r27
 bc2:	da 01       	movw	r26, r20
 bc4:	c9 01       	movw	r24, r18
 bc6:	8f 77       	andi	r24, 0x7F	; 127
 bc8:	90 70       	andi	r25, 0x00	; 0
 bca:	a0 70       	andi	r26, 0x00	; 0
 bcc:	b0 70       	andi	r27, 0x00	; 0
 bce:	80 34       	cpi	r24, 0x40	; 64
 bd0:	91 05       	cpc	r25, r1
 bd2:	a1 05       	cpc	r26, r1
 bd4:	b1 05       	cpc	r27, r1
 bd6:	39 f4       	brne	.+14     	; 0xbe6 <__pack_f+0xee>
 bd8:	27 ff       	sbrs	r18, 7
 bda:	09 c0       	rjmp	.+18     	; 0xbee <__pack_f+0xf6>
 bdc:	20 5c       	subi	r18, 0xC0	; 192
 bde:	3f 4f       	sbci	r19, 0xFF	; 255
 be0:	4f 4f       	sbci	r20, 0xFF	; 255
 be2:	5f 4f       	sbci	r21, 0xFF	; 255
 be4:	04 c0       	rjmp	.+8      	; 0xbee <__pack_f+0xf6>
 be6:	21 5c       	subi	r18, 0xC1	; 193
 be8:	3f 4f       	sbci	r19, 0xFF	; 255
 bea:	4f 4f       	sbci	r20, 0xFF	; 255
 bec:	5f 4f       	sbci	r21, 0xFF	; 255
 bee:	e0 e0       	ldi	r30, 0x00	; 0
 bf0:	f0 e0       	ldi	r31, 0x00	; 0
 bf2:	20 30       	cpi	r18, 0x00	; 0
 bf4:	a0 e0       	ldi	r26, 0x00	; 0
 bf6:	3a 07       	cpc	r19, r26
 bf8:	a0 e0       	ldi	r26, 0x00	; 0
 bfa:	4a 07       	cpc	r20, r26
 bfc:	a0 e4       	ldi	r26, 0x40	; 64
 bfe:	5a 07       	cpc	r21, r26
 c00:	10 f0       	brcs	.+4      	; 0xc06 <__pack_f+0x10e>
 c02:	e1 e0       	ldi	r30, 0x01	; 1
 c04:	f0 e0       	ldi	r31, 0x00	; 0
 c06:	79 01       	movw	r14, r18
 c08:	8a 01       	movw	r16, r20
 c0a:	27 c0       	rjmp	.+78     	; 0xc5a <__pack_f+0x162>
 c0c:	60 38       	cpi	r22, 0x80	; 128
 c0e:	71 05       	cpc	r23, r1
 c10:	64 f5       	brge	.+88     	; 0xc6a <__pack_f+0x172>
 c12:	fb 01       	movw	r30, r22
 c14:	e1 58       	subi	r30, 0x81	; 129
 c16:	ff 4f       	sbci	r31, 0xFF	; 255
 c18:	d8 01       	movw	r26, r16
 c1a:	c7 01       	movw	r24, r14
 c1c:	8f 77       	andi	r24, 0x7F	; 127
 c1e:	90 70       	andi	r25, 0x00	; 0
 c20:	a0 70       	andi	r26, 0x00	; 0
 c22:	b0 70       	andi	r27, 0x00	; 0
 c24:	80 34       	cpi	r24, 0x40	; 64
 c26:	91 05       	cpc	r25, r1
 c28:	a1 05       	cpc	r26, r1
 c2a:	b1 05       	cpc	r27, r1
 c2c:	39 f4       	brne	.+14     	; 0xc3c <__pack_f+0x144>
 c2e:	e7 fe       	sbrs	r14, 7
 c30:	0d c0       	rjmp	.+26     	; 0xc4c <__pack_f+0x154>
 c32:	80 e4       	ldi	r24, 0x40	; 64
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	a0 e0       	ldi	r26, 0x00	; 0
 c38:	b0 e0       	ldi	r27, 0x00	; 0
 c3a:	04 c0       	rjmp	.+8      	; 0xc44 <__pack_f+0x14c>
 c3c:	8f e3       	ldi	r24, 0x3F	; 63
 c3e:	90 e0       	ldi	r25, 0x00	; 0
 c40:	a0 e0       	ldi	r26, 0x00	; 0
 c42:	b0 e0       	ldi	r27, 0x00	; 0
 c44:	e8 0e       	add	r14, r24
 c46:	f9 1e       	adc	r15, r25
 c48:	0a 1f       	adc	r16, r26
 c4a:	1b 1f       	adc	r17, r27
 c4c:	17 ff       	sbrs	r17, 7
 c4e:	05 c0       	rjmp	.+10     	; 0xc5a <__pack_f+0x162>
 c50:	16 95       	lsr	r17
 c52:	07 95       	ror	r16
 c54:	f7 94       	ror	r15
 c56:	e7 94       	ror	r14
 c58:	31 96       	adiw	r30, 0x01	; 1
 c5a:	87 e0       	ldi	r24, 0x07	; 7
 c5c:	16 95       	lsr	r17
 c5e:	07 95       	ror	r16
 c60:	f7 94       	ror	r15
 c62:	e7 94       	ror	r14
 c64:	8a 95       	dec	r24
 c66:	d1 f7       	brne	.-12     	; 0xc5c <__pack_f+0x164>
 c68:	05 c0       	rjmp	.+10     	; 0xc74 <__pack_f+0x17c>
 c6a:	ee 24       	eor	r14, r14
 c6c:	ff 24       	eor	r15, r15
 c6e:	87 01       	movw	r16, r14
 c70:	ef ef       	ldi	r30, 0xFF	; 255
 c72:	f0 e0       	ldi	r31, 0x00	; 0
 c74:	6e 2f       	mov	r22, r30
 c76:	67 95       	ror	r22
 c78:	66 27       	eor	r22, r22
 c7a:	67 95       	ror	r22
 c7c:	90 2f       	mov	r25, r16
 c7e:	9f 77       	andi	r25, 0x7F	; 127
 c80:	d7 94       	ror	r13
 c82:	dd 24       	eor	r13, r13
 c84:	d7 94       	ror	r13
 c86:	8e 2f       	mov	r24, r30
 c88:	86 95       	lsr	r24
 c8a:	49 2f       	mov	r20, r25
 c8c:	46 2b       	or	r20, r22
 c8e:	58 2f       	mov	r21, r24
 c90:	5d 29       	or	r21, r13
 c92:	b7 01       	movw	r22, r14
 c94:	ca 01       	movw	r24, r20
 c96:	1f 91       	pop	r17
 c98:	0f 91       	pop	r16
 c9a:	ff 90       	pop	r15
 c9c:	ef 90       	pop	r14
 c9e:	df 90       	pop	r13
 ca0:	08 95       	ret

00000ca2 <__unpack_f>:
 ca2:	fc 01       	movw	r30, r24
 ca4:	db 01       	movw	r26, r22
 ca6:	40 81       	ld	r20, Z
 ca8:	51 81       	ldd	r21, Z+1	; 0x01
 caa:	22 81       	ldd	r18, Z+2	; 0x02
 cac:	62 2f       	mov	r22, r18
 cae:	6f 77       	andi	r22, 0x7F	; 127
 cb0:	70 e0       	ldi	r23, 0x00	; 0
 cb2:	22 1f       	adc	r18, r18
 cb4:	22 27       	eor	r18, r18
 cb6:	22 1f       	adc	r18, r18
 cb8:	93 81       	ldd	r25, Z+3	; 0x03
 cba:	89 2f       	mov	r24, r25
 cbc:	88 0f       	add	r24, r24
 cbe:	82 2b       	or	r24, r18
 cc0:	28 2f       	mov	r18, r24
 cc2:	30 e0       	ldi	r19, 0x00	; 0
 cc4:	99 1f       	adc	r25, r25
 cc6:	99 27       	eor	r25, r25
 cc8:	99 1f       	adc	r25, r25
 cca:	11 96       	adiw	r26, 0x01	; 1
 ccc:	9c 93       	st	X, r25
 cce:	11 97       	sbiw	r26, 0x01	; 1
 cd0:	21 15       	cp	r18, r1
 cd2:	31 05       	cpc	r19, r1
 cd4:	a9 f5       	brne	.+106    	; 0xd40 <__unpack_f+0x9e>
 cd6:	41 15       	cp	r20, r1
 cd8:	51 05       	cpc	r21, r1
 cda:	61 05       	cpc	r22, r1
 cdc:	71 05       	cpc	r23, r1
 cde:	11 f4       	brne	.+4      	; 0xce4 <__unpack_f+0x42>
 ce0:	82 e0       	ldi	r24, 0x02	; 2
 ce2:	37 c0       	rjmp	.+110    	; 0xd52 <__unpack_f+0xb0>
 ce4:	82 e8       	ldi	r24, 0x82	; 130
 ce6:	9f ef       	ldi	r25, 0xFF	; 255
 ce8:	13 96       	adiw	r26, 0x03	; 3
 cea:	9c 93       	st	X, r25
 cec:	8e 93       	st	-X, r24
 cee:	12 97       	sbiw	r26, 0x02	; 2
 cf0:	9a 01       	movw	r18, r20
 cf2:	ab 01       	movw	r20, r22
 cf4:	67 e0       	ldi	r22, 0x07	; 7
 cf6:	22 0f       	add	r18, r18
 cf8:	33 1f       	adc	r19, r19
 cfa:	44 1f       	adc	r20, r20
 cfc:	55 1f       	adc	r21, r21
 cfe:	6a 95       	dec	r22
 d00:	d1 f7       	brne	.-12     	; 0xcf6 <__unpack_f+0x54>
 d02:	83 e0       	ldi	r24, 0x03	; 3
 d04:	8c 93       	st	X, r24
 d06:	0d c0       	rjmp	.+26     	; 0xd22 <__unpack_f+0x80>
 d08:	22 0f       	add	r18, r18
 d0a:	33 1f       	adc	r19, r19
 d0c:	44 1f       	adc	r20, r20
 d0e:	55 1f       	adc	r21, r21
 d10:	12 96       	adiw	r26, 0x02	; 2
 d12:	8d 91       	ld	r24, X+
 d14:	9c 91       	ld	r25, X
 d16:	13 97       	sbiw	r26, 0x03	; 3
 d18:	01 97       	sbiw	r24, 0x01	; 1
 d1a:	13 96       	adiw	r26, 0x03	; 3
 d1c:	9c 93       	st	X, r25
 d1e:	8e 93       	st	-X, r24
 d20:	12 97       	sbiw	r26, 0x02	; 2
 d22:	20 30       	cpi	r18, 0x00	; 0
 d24:	80 e0       	ldi	r24, 0x00	; 0
 d26:	38 07       	cpc	r19, r24
 d28:	80 e0       	ldi	r24, 0x00	; 0
 d2a:	48 07       	cpc	r20, r24
 d2c:	80 e4       	ldi	r24, 0x40	; 64
 d2e:	58 07       	cpc	r21, r24
 d30:	58 f3       	brcs	.-42     	; 0xd08 <__unpack_f+0x66>
 d32:	14 96       	adiw	r26, 0x04	; 4
 d34:	2d 93       	st	X+, r18
 d36:	3d 93       	st	X+, r19
 d38:	4d 93       	st	X+, r20
 d3a:	5c 93       	st	X, r21
 d3c:	17 97       	sbiw	r26, 0x07	; 7
 d3e:	08 95       	ret
 d40:	2f 3f       	cpi	r18, 0xFF	; 255
 d42:	31 05       	cpc	r19, r1
 d44:	79 f4       	brne	.+30     	; 0xd64 <__unpack_f+0xc2>
 d46:	41 15       	cp	r20, r1
 d48:	51 05       	cpc	r21, r1
 d4a:	61 05       	cpc	r22, r1
 d4c:	71 05       	cpc	r23, r1
 d4e:	19 f4       	brne	.+6      	; 0xd56 <__unpack_f+0xb4>
 d50:	84 e0       	ldi	r24, 0x04	; 4
 d52:	8c 93       	st	X, r24
 d54:	08 95       	ret
 d56:	64 ff       	sbrs	r22, 4
 d58:	03 c0       	rjmp	.+6      	; 0xd60 <__unpack_f+0xbe>
 d5a:	81 e0       	ldi	r24, 0x01	; 1
 d5c:	8c 93       	st	X, r24
 d5e:	12 c0       	rjmp	.+36     	; 0xd84 <__unpack_f+0xe2>
 d60:	1c 92       	st	X, r1
 d62:	10 c0       	rjmp	.+32     	; 0xd84 <__unpack_f+0xe2>
 d64:	2f 57       	subi	r18, 0x7F	; 127
 d66:	30 40       	sbci	r19, 0x00	; 0
 d68:	13 96       	adiw	r26, 0x03	; 3
 d6a:	3c 93       	st	X, r19
 d6c:	2e 93       	st	-X, r18
 d6e:	12 97       	sbiw	r26, 0x02	; 2
 d70:	83 e0       	ldi	r24, 0x03	; 3
 d72:	8c 93       	st	X, r24
 d74:	87 e0       	ldi	r24, 0x07	; 7
 d76:	44 0f       	add	r20, r20
 d78:	55 1f       	adc	r21, r21
 d7a:	66 1f       	adc	r22, r22
 d7c:	77 1f       	adc	r23, r23
 d7e:	8a 95       	dec	r24
 d80:	d1 f7       	brne	.-12     	; 0xd76 <__unpack_f+0xd4>
 d82:	70 64       	ori	r23, 0x40	; 64
 d84:	14 96       	adiw	r26, 0x04	; 4
 d86:	4d 93       	st	X+, r20
 d88:	5d 93       	st	X+, r21
 d8a:	6d 93       	st	X+, r22
 d8c:	7c 93       	st	X, r23
 d8e:	17 97       	sbiw	r26, 0x07	; 7
 d90:	08 95       	ret

00000d92 <__prologue_saves__>:
 d92:	2f 92       	push	r2
 d94:	3f 92       	push	r3
 d96:	4f 92       	push	r4
 d98:	5f 92       	push	r5
 d9a:	6f 92       	push	r6
 d9c:	7f 92       	push	r7
 d9e:	8f 92       	push	r8
 da0:	9f 92       	push	r9
 da2:	af 92       	push	r10
 da4:	bf 92       	push	r11
 da6:	cf 92       	push	r12
 da8:	df 92       	push	r13
 daa:	ef 92       	push	r14
 dac:	ff 92       	push	r15
 dae:	0f 93       	push	r16
 db0:	1f 93       	push	r17
 db2:	cf 93       	push	r28
 db4:	df 93       	push	r29
 db6:	cd b7       	in	r28, 0x3d	; 61
 db8:	de b7       	in	r29, 0x3e	; 62
 dba:	ca 1b       	sub	r28, r26
 dbc:	db 0b       	sbc	r29, r27
 dbe:	0f b6       	in	r0, 0x3f	; 63
 dc0:	f8 94       	cli
 dc2:	de bf       	out	0x3e, r29	; 62
 dc4:	0f be       	out	0x3f, r0	; 63
 dc6:	cd bf       	out	0x3d, r28	; 61
 dc8:	09 94       	ijmp

00000dca <__epilogue_restores__>:
 dca:	2a 88       	ldd	r2, Y+18	; 0x12
 dcc:	39 88       	ldd	r3, Y+17	; 0x11
 dce:	48 88       	ldd	r4, Y+16	; 0x10
 dd0:	5f 84       	ldd	r5, Y+15	; 0x0f
 dd2:	6e 84       	ldd	r6, Y+14	; 0x0e
 dd4:	7d 84       	ldd	r7, Y+13	; 0x0d
 dd6:	8c 84       	ldd	r8, Y+12	; 0x0c
 dd8:	9b 84       	ldd	r9, Y+11	; 0x0b
 dda:	aa 84       	ldd	r10, Y+10	; 0x0a
 ddc:	b9 84       	ldd	r11, Y+9	; 0x09
 dde:	c8 84       	ldd	r12, Y+8	; 0x08
 de0:	df 80       	ldd	r13, Y+7	; 0x07
 de2:	ee 80       	ldd	r14, Y+6	; 0x06
 de4:	fd 80       	ldd	r15, Y+5	; 0x05
 de6:	0c 81       	ldd	r16, Y+4	; 0x04
 de8:	1b 81       	ldd	r17, Y+3	; 0x03
 dea:	aa 81       	ldd	r26, Y+2	; 0x02
 dec:	b9 81       	ldd	r27, Y+1	; 0x01
 dee:	ce 0f       	add	r28, r30
 df0:	d1 1d       	adc	r29, r1
 df2:	0f b6       	in	r0, 0x3f	; 63
 df4:	f8 94       	cli
 df6:	de bf       	out	0x3e, r29	; 62
 df8:	0f be       	out	0x3f, r0	; 63
 dfa:	cd bf       	out	0x3d, r28	; 61
 dfc:	ed 01       	movw	r28, r26
 dfe:	08 95       	ret

00000e00 <_exit>:
 e00:	f8 94       	cli

00000e02 <__stop_program>:
 e02:	ff cf       	rjmp	.-2      	; 0xe02 <__stop_program>
